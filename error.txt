output.c: In function ‘createBoard’:
output.c:6:26: error: ‘var639’ undeclared (first use in this function)
    6 | int * createBoard ( ) {  var639 = ( int ) 0 ;  var640 = 8 [ 0 ] ;  var641 = var640 * 8 ;  var642 = sizeof = var641 ; int * var4 = ( int * ) malloc ( var250 ) ; ; { int var6 = 0 ; label_3:
      |                          ^~~~~~
output.c:6:26: note: each undeclared identifier is reported only once for each function it appears in
output.c:6:48: error: ‘var640’ undeclared (first use in this function)
    6 | int * createBoard ( ) {  var639 = ( int ) 0 ;  var640 = 8 [ 0 ] ;  var641 = var640 * 8 ;  var642 = sizeof = var641 ; int * var4 = ( int * ) malloc ( var250 ) ; ; { int var6 = 0 ; label_3:
      |                                                ^~~~~~
output.c:6:59: error: subscripted value is neither array nor pointer nor vector
    6 | int * createBoard ( ) {  var639 = ( int ) 0 ;  var640 = 8 [ 0 ] ;  var641 = var640 * 8 ;  var642 = sizeof = var641 ; int * var4 = ( int * ) malloc ( var250 ) ; ; { int var6 = 0 ; label_3:
      |                                                           ^
output.c:6:68: error: ‘var641’ undeclared (first use in this function)
    6 | int * createBoard ( ) {  var639 = ( int ) 0 ;  var640 = 8 [ 0 ] ;  var641 = var640 * 8 ;  var642 = sizeof = var641 ; int * var4 = ( int * ) malloc ( var250 ) ; ; { int var6 = 0 ; label_3:
      |                                                                    ^~~~~~
output.c:6:91: error: ‘var642’ undeclared (first use in this function)
    6 | int * createBoard ( ) {  var639 = ( int ) 0 ;  var640 = 8 [ 0 ] ;  var641 = var640 * 8 ;  var642 = sizeof = var641 ; int * var4 = ( int * ) malloc ( var250 ) ; ; { int var6 = 0 ; label_3:
      |                                                                                           ^~~~~~
output.c:6:107: error: expected expression before ‘=’ token
    6 | int * createBoard ( ) {  var639 = ( int ) 0 ;  var640 = 8 [ 0 ] ;  var641 = var640 * 8 ;  var642 = sizeof = var641 ; int * var4 = ( int * ) malloc ( var250 ) ; ; { int var6 = 0 ; label_3:
      |                                                                                                           ^
output.c:6:150: error: ‘var250’ undeclared (first use in this function)
    6 | int * createBoard ( ) {  var639 = ( int ) 0 ;  var640 = 8 [ 0 ] ;  var641 = var640 * 8 ;  var642 = sizeof = var641 ; int * var4 = ( int * ) malloc ( var250 ) ; ; { int var6 = 0 ; label_3:
      |                                                                                                                                                      ^~~~~~
output.c:7:3: error: ‘var643’ undeclared (first use in this function); did you mean ‘var6’?
    7 |   var643 = 8 * 8 ;  var644 = var6 < var643 ; var4 [ 0 ] var6 ) = 2 ; var6 ; var6 = var6 + 1 ; goto label_3 ; } label_4:
      |   ^~~~~~
      |   var6
output.c:7:21: error: ‘var644’ undeclared (first use in this function); did you mean ‘var6’?
    7 |   var643 = 8 * 8 ;  var644 = var6 < var643 ; var4 [ 0 ] var6 ) = 2 ; var6 ; var6 = var6 + 1 ; goto label_3 ; } label_4:
      |                     ^~~~~~
      |                     var6
output.c:7:56: error: expected ‘;’ before ‘var6’
    7 |   var643 = 8 * 8 ;  var644 = var6 < var643 ; var4 [ 0 ] var6 ) = 2 ; var6 ; var6 = var6 + 1 ; goto label_3 ; } label_4:
      |                                                        ^~~~~
      |                                                        ;
output.c:7:62: error: expected statement before ‘)’ token
    7 |   var643 = 8 * 8 ;  var644 = var6 < var643 ; var4 [ 0 ] var6 ) = 2 ; var6 ; var6 = var6 + 1 ; goto label_3 ; } label_4:
      |                                                              ^
output.c:7:64: error: expected expression before ‘=’ token
    7 |   var643 = 8 * 8 ;  var644 = var6 < var643 ; var4 [ 0 ] var6 ) = 2 ; var6 ; var6 = var6 + 1 ; goto label_3 ; } label_4:
      |                                                                ^
output.c: At top level:
output.c:8:5: warning: data definition has no type or storage class
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |     ^~~~~~
output.c:8:5: error: type defaults to ‘int’ in declaration of ‘var645’ [-Wimplicit-int]
output.c:8:24: warning: data definition has no type or storage class
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                        ^~~~~~
output.c:8:24: error: type defaults to ‘int’ in declaration of ‘var646’ [-Wimplicit-int]
output.c:8:33: error: initializer element is not constant
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                                 ^~~~~~
output.c:8:47: warning: data definition has no type or storage class
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                                               ^~~~~~
output.c:8:47: error: type defaults to ‘int’ in declaration of ‘var647’ [-Wimplicit-int]
output.c:8:56: error: expected expression before ‘int’
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                                                        ^~~
output.c:8:77: warning: data definition has no type or storage class
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                                                                             ^~~~~~
output.c:8:77: error: type defaults to ‘int’ in declaration of ‘var648’ [-Wimplicit-int]
output.c:8:96: warning: data definition has no type or storage class
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                                                                                                ^~~~~~
output.c:8:96: error: type defaults to ‘int’ in declaration of ‘var649’ [-Wimplicit-int]
output.c:8:105: error: initializer element is not constant
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                                                                                                         ^~~~~~
output.c:8:119: warning: data definition has no type or storage class
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                                                                                                                       ^~~~~~
output.c:8:119: error: type defaults to ‘int’ in declaration of ‘var650’ [-Wimplicit-int]
output.c:8:128: error: expected expression before ‘int’
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                                                                                                                                ^~~
output.c:8:149: warning: data definition has no type or storage class
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                                                                                                                                                     ^~~~~~
output.c:8:149: error: type defaults to ‘int’ in declaration of ‘var651’ [-Wimplicit-int]
output.c:8:158: error: ‘var7’ undeclared here (not in a function); did you mean ‘var647’?
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                                                                                                                                                              ^~~~
      |                                                                                                                                                              var647
output.c:8:170: warning: data definition has no type or storage class
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                                                                                                                                                                          ^~~~~~
output.c:8:170: error: type defaults to ‘int’ in declaration of ‘var652’ [-Wimplicit-int]
output.c:8:188: error: ‘var8’ undeclared here (not in a function); did you mean ‘var648’?
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                                                                                                                                                                                            ^~~~
      |                                                                                                                                                                                            var648
output.c:8:196: warning: data definition has no type or storage class
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                                                                                                                                                                                                    ^~~~~~
output.c:8:196: error: type defaults to ‘int’ in declaration of ‘var653’ [-Wimplicit-int]
output.c:8:205: error: ‘var4’ undeclared here (not in a function); did you mean ‘var649’?
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                                                                                                                                                                                                             ^~~~
      |                                                                                                                                                                                                             var649
output.c:8:219: warning: data definition has no type or storage class
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                                                                                                                                                                                                                           ^~~~~~
output.c:8:219: error: type defaults to ‘int’ in declaration of ‘var654’ [-Wimplicit-int]
output.c:8:228: error: initializer element is not constant
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                                                                                                                                                                                                                                    ^~~~~~
output.c:8:242: warning: data definition has no type or storage class
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                                                                                                                                                                                                                                                  ^~~~~~
output.c:8:242: error: type defaults to ‘int’ in declaration of ‘var655’ [-Wimplicit-int]
output.c:8:263: warning: data definition has no type or storage class
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                                                                                                                                                                                                                                                                       ^~~~~~
output.c:8:263: error: type defaults to ‘int’ in declaration of ‘var656’ [-Wimplicit-int]
output.c:8:289: warning: data definition has no type or storage class
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                                                                                                                                                                                                                                                                                                 ^~~~~~
output.c:8:289: error: type defaults to ‘int’ in declaration of ‘var657’ [-Wimplicit-int]
output.c:8:298: error: initializer element is not constant
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                                                                                                                                                                                                                                                                                                          ^~~~~~
output.c:8:312: warning: data definition has no type or storage class
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                                                                                                                                                                                                                                                                                                                        ^~~~~~
output.c:8:312: error: type defaults to ‘int’ in declaration of ‘var658’ [-Wimplicit-int]
output.c:8:335: warning: data definition has no type or storage class
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                                                                                                                                                                                                                                                                                                                                               ^~~~~~
output.c:8:335: error: type defaults to ‘int’ in declaration of ‘var659’ [-Wimplicit-int]
output.c:8:344: error: initializer element is not constant
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                                                                                                                                                                                                                                                                                                                                                        ^~~~~~
output.c:8:358: warning: data definition has no type or storage class
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                                                                                                                                                                                                                                                                                                                                                                      ^~~~~~
output.c:8:358: error: type defaults to ‘int’ in declaration of ‘var660’ [-Wimplicit-int]
output.c:8:379: warning: data definition has no type or storage class
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                                                                                                                                                                                                                                                                                                                                                                                           ^~~~~~
output.c:8:379: error: type defaults to ‘int’ in declaration of ‘var661’ [-Wimplicit-int]
output.c:8:388: error: initializer element is not constant
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                                                                                                                                                                                                                                                                                                                                                                                                    ^~~~~~
output.c:8:402: warning: data definition has no type or storage class
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                                                                                                                                                                                                                                                                                                                                                                                                                  ^~~~~~
output.c:8:402: error: type defaults to ‘int’ in declaration of ‘var662’ [-Wimplicit-int]
output.c:8:428: warning: data definition has no type or storage class
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                            ^~~~~~
output.c:8:428: error: type defaults to ‘int’ in declaration of ‘var663’ [-Wimplicit-int]
output.c:8:451: warning: data definition has no type or storage class
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                   ^~~~~~
output.c:8:451: error: type defaults to ‘int’ in declaration of ‘var664’ [-Wimplicit-int]
output.c:8:460: error: initializer element is not constant
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ^~~~~~
output.c:8:474: warning: data definition has no type or storage class
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ^~~~~~
output.c:8:474: error: type defaults to ‘int’ in declaration of ‘var665’ [-Wimplicit-int]
output.c:8:495: warning: data definition has no type or storage class
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ^~~~~~
output.c:8:495: error: type defaults to ‘int’ in declaration of ‘var666’ [-Wimplicit-int]
output.c:8:504: error: initializer element is not constant
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |~~~~~
output.c:8:518: warning: data definition has no type or storage class
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |~~~~~
output.c:8:518: error: type defaults to ‘int’ in declaration of ‘var667’ [-Wimplicit-int]
output.c:8:544: warning: data definition has no type or storage class
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |~~~~~
output.c:8:544: error: type defaults to ‘int’ in declaration of ‘var668’ [-Wimplicit-int]
output.c:8:553: error: initializer element is not constant
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |~~~~~
output.c:8:567: warning: data definition has no type or storage class
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |~~~~~
output.c:8:567: error: type defaults to ‘int’ in declaration of ‘var669’ [-Wimplicit-int]
output.c:8:590: warning: data definition has no type or storage class
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |~~~~~
output.c:8:590: error: type defaults to ‘int’ in declaration of ‘var670’ [-Wimplicit-int]
output.c:8:599: error: initializer element is not constant
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |~~~~~
output.c:8:634: error: expected identifier or ‘(’ before ‘return’
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |~~~~~
output.c:8:650: error: expected identifier or ‘(’ before ‘}’ token
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |
output.c: In function ‘printBoard’:
output.c:10:43: error: expected ‘)’ before ‘access’
   10 |  if ( var13 < 8 ) { printf ( "%d " , var10 access ( var11 ) ) ; ; var11 ; var11 = var11 + 1 ; var13 ; var13 = var13 + 1 ; goto label_7 ; } else { } label_8:
      |                            ~              ^~~~~~~
      |                                           )
output.c: In function ‘printAsciiBoard’:
output.c:12:60: error: ‘var671’ undeclared (first use in this function); did you mean ‘var670’?
   12 |  } } void printAsciiBoard ( int * var17 , int * var18 ) {  var671 = 7 * 8 ;  var672 = 8 - 1 ;  var673 = var671 + var672 ;  var674 = int var19 = var673 ;  var675 = 4 * 8 ;  var676 = 8 - 1 ;  var677 = var675 + var676 ;  var678 = int var20 = var677 ;  var679 = var19 * var20 ;  var680 = var679 + var20 ;  var681 = int var21 = var680 ;  var682 = ( char ) 0 ;  var683 = var21 [ 0 ] ;  var684 = sizeof = var683 ; char * var22 = ( char * ) malloc ( var254 ) ; ; { int var24 = 0 ; label_9:
      |                                                            ^~~~~~
      |                                                            var670
output.c:12:78: error: ‘var672’ undeclared (first use in this function); did you mean ‘var670’?
   12 |  } } void printAsciiBoard ( int * var17 , int * var18 ) {  var671 = 7 * 8 ;  var672 = 8 - 1 ;  var673 = var671 + var672 ;  var674 = int var19 = var673 ;  var675 = 4 * 8 ;  var676 = 8 - 1 ;  var677 = var675 + var676 ;  var678 = int var20 = var677 ;  var679 = var19 * var20 ;  var680 = var679 + var20 ;  var681 = int var21 = var680 ;  var682 = ( char ) 0 ;  var683 = var21 [ 0 ] ;  var684 = sizeof = var683 ; char * var22 = ( char * ) malloc ( var254 ) ; ; { int var24 = 0 ; label_9:
      |                                                                              ^~~~~~
      |                                                                              var670
output.c:12:96: error: ‘var673’ undeclared (first use in this function); did you mean ‘var670’?
   12 |  } } void printAsciiBoard ( int * var17 , int * var18 ) {  var671 = 7 * 8 ;  var672 = 8 - 1 ;  var673 = var671 + var672 ;  var674 = int var19 = var673 ;  var675 = 4 * 8 ;  var676 = 8 - 1 ;  var677 = var675 + var676 ;  var678 = int var20 = var677 ;  var679 = var19 * var20 ;  var680 = var679 + var20 ;  var681 = int var21 = var680 ;  var682 = ( char ) 0 ;  var683 = var21 [ 0 ] ;  var684 = sizeof = var683 ; char * var22 = ( char * ) malloc ( var254 ) ; ; { int var24 = 0 ; label_9:
      |                                                                                                ^~~~~~
      |                                                                                                var670
output.c:12:124: error: ‘var674’ undeclared (first use in this function); did you mean ‘var670’?
   12 |  } } void printAsciiBoard ( int * var17 , int * var18 ) {  var671 = 7 * 8 ;  var672 = 8 - 1 ;  var673 = var671 + var672 ;  var674 = int var19 = var673 ;  var675 = 4 * 8 ;  var676 = 8 - 1 ;  var677 = var675 + var676 ;  var678 = int var20 = var677 ;  var679 = var19 * var20 ;  var680 = var679 + var20 ;  var681 = int var21 = var680 ;  var682 = ( char ) 0 ;  var683 = var21 [ 0 ] ;  var684 = sizeof = var683 ; char * var22 = ( char * ) malloc ( var254 ) ; ; { int var24 = 0 ; label_9:
      |                                                                                                                            ^~~~~~
      |                                                                                                                            var670
output.c:12:133: error: expected expression before ‘int’
   12 |  } } void printAsciiBoard ( int * var17 , int * var18 ) {  var671 = 7 * 8 ;  var672 = 8 - 1 ;  var673 = var671 + var672 ;  var674 = int var19 = var673 ;  var675 = 4 * 8 ;  var676 = 8 - 1 ;  var677 = var675 + var676 ;  var678 = int var20 = var677 ;  var679 = var19 * var20 ;  var680 = var679 + var20 ;  var681 = int var21 = var680 ;  var682 = ( char ) 0 ;  var683 = var21 [ 0 ] ;  var684 = sizeof = var683 ; char * var22 = ( char * ) malloc ( var254 ) ; ; { int var24 = 0 ; label_9:
      |                                                                                                                                     ^~~
output.c:12:155: error: ‘var675’ undeclared (first use in this function); did you mean ‘var670’?
   12 |  } } void printAsciiBoard ( int * var17 , int * var18 ) {  var671 = 7 * 8 ;  var672 = 8 - 1 ;  var673 = var671 + var672 ;  var674 = int var19 = var673 ;  var675 = 4 * 8 ;  var676 = 8 - 1 ;  var677 = var675 + var676 ;  var678 = int var20 = var677 ;  var679 = var19 * var20 ;  var680 = var679 + var20 ;  var681 = int var21 = var680 ;  var682 = ( char ) 0 ;  var683 = var21 [ 0 ] ;  var684 = sizeof = var683 ; char * var22 = ( char * ) malloc ( var254 ) ; ; { int var24 = 0 ; label_9:
      |                                                                                                                                                           ^~~~~~
      |                                                                                                                                                           var670
output.c:12:173: error: ‘var676’ undeclared (first use in this function); did you mean ‘var670’?
   12 |  } } void printAsciiBoard ( int * var17 , int * var18 ) {  var671 = 7 * 8 ;  var672 = 8 - 1 ;  var673 = var671 + var672 ;  var674 = int var19 = var673 ;  var675 = 4 * 8 ;  var676 = 8 - 1 ;  var677 = var675 + var676 ;  var678 = int var20 = var677 ;  var679 = var19 * var20 ;  var680 = var679 + var20 ;  var681 = int var21 = var680 ;  var682 = ( char ) 0 ;  var683 = var21 [ 0 ] ;  var684 = sizeof = var683 ; char * var22 = ( char * ) malloc ( var254 ) ; ; { int var24 = 0 ; label_9:
      |                                                                                                                                                                             ^~~~~~
      |                                                                                                                                                                             var670
output.c:12:191: error: ‘var677’ undeclared (first use in this function); did you mean ‘var670’?
   12 |  } } void printAsciiBoard ( int * var17 , int * var18 ) {  var671 = 7 * 8 ;  var672 = 8 - 1 ;  var673 = var671 + var672 ;  var674 = int var19 = var673 ;  var675 = 4 * 8 ;  var676 = 8 - 1 ;  var677 = var675 + var676 ;  var678 = int var20 = var677 ;  var679 = var19 * var20 ;  var680 = var679 + var20 ;  var681 = int var21 = var680 ;  var682 = ( char ) 0 ;  var683 = var21 [ 0 ] ;  var684 = sizeof = var683 ; char * var22 = ( char * ) malloc ( var254 ) ; ; { int var24 = 0 ; label_9:
      |                                                                                                                                                                                               ^~~~~~
      |                                                                                                                                                                                               var670
output.c:12:219: error: ‘var678’ undeclared (first use in this function); did you mean ‘var670’?
   12 |  } } void printAsciiBoard ( int * var17 , int * var18 ) {  var671 = 7 * 8 ;  var672 = 8 - 1 ;  var673 = var671 + var672 ;  var674 = int var19 = var673 ;  var675 = 4 * 8 ;  var676 = 8 - 1 ;  var677 = var675 + var676 ;  var678 = int var20 = var677 ;  var679 = var19 * var20 ;  var680 = var679 + var20 ;  var681 = int var21 = var680 ;  var682 = ( char ) 0 ;  var683 = var21 [ 0 ] ;  var684 = sizeof = var683 ; char * var22 = ( char * ) malloc ( var254 ) ; ; { int var24 = 0 ; label_9:
      |                                                                                                                                                                                                                           ^~~~~~
      |                                                                                                                                                                                                                           var670
output.c:12:228: error: expected expression before ‘int’
   12 |  } } void printAsciiBoard ( int * var17 , int * var18 ) {  var671 = 7 * 8 ;  var672 = 8 - 1 ;  var673 = var671 + var672 ;  var674 = int var19 = var673 ;  var675 = 4 * 8 ;  var676 = 8 - 1 ;  var677 = var675 + var676 ;  var678 = int var20 = var677 ;  var679 = var19 * var20 ;  var680 = var679 + var20 ;  var681 = int var21 = var680 ;  var682 = ( char ) 0 ;  var683 = var21 [ 0 ] ;  var684 = sizeof = var683 ; char * var22 = ( char * ) malloc ( var254 ) ; ; { int var24 = 0 ; label_9:
      |                                                                                                                                                                                                                                    ^~~
output.c:12:250: error: ‘var679’ undeclared (first use in this function); did you mean ‘var670’?
   12 |  } } void printAsciiBoard ( int * var17 , int * var18 ) {  var671 = 7 * 8 ;  var672 = 8 - 1 ;  var673 = var671 + var672 ;  var674 = int var19 = var673 ;  var675 = 4 * 8 ;  var676 = 8 - 1 ;  var677 = var675 + var676 ;  var678 = int var20 = var677 ;  var679 = var19 * var20 ;  var680 = var679 + var20 ;  var681 = int var21 = var680 ;  var682 = ( char ) 0 ;  var683 = var21 [ 0 ] ;  var684 = sizeof = var683 ; char * var22 = ( char * ) malloc ( var254 ) ; ; { int var24 = 0 ; label_9:
      |                                                                                                                                                                                                                                                          ^~~~~~
      |                                                                                                                                                                                                                                                          var670
output.c:12:259: error: ‘var19’ undeclared (first use in this function); did you mean ‘var18’?
   12 |  } } void printAsciiBoard ( int * var17 , int * var18 ) {  var671 = 7 * 8 ;  var672 = 8 - 1 ;  var673 = var671 + var672 ;  var674 = int var19 = var673 ;  var675 = 4 * 8 ;  var676 = 8 - 1 ;  var677 = var675 + var676 ;  var678 = int var20 = var677 ;  var679 = var19 * var20 ;  var680 = var679 + var20 ;  var681 = int var21 = var680 ;  var682 = ( char ) 0 ;  var683 = var21 [ 0 ] ;  var684 = sizeof = var683 ; char * var22 = ( char * ) malloc ( var254 ) ; ; { int var24 = 0 ; label_9:
      |                                                                                                                                                                                                                                                                   ^~~~~
      |                                                                                                                                                                                                                                                                   var18
output.c:12:267: error: ‘var20’ undeclared (first use in this function)
   12 |  } } void printAsciiBoard ( int * var17 , int * var18 ) {  var671 = 7 * 8 ;  var672 = 8 - 1 ;  var673 = var671 + var672 ;  var674 = int var19 = var673 ;  var675 = 4 * 8 ;  var676 = 8 - 1 ;  var677 = var675 + var676 ;  var678 = int var20 = var677 ;  var679 = var19 * var20 ;  var680 = var679 + var20 ;  var681 = int var21 = var680 ;  var682 = ( char ) 0 ;  var683 = var21 [ 0 ] ;  var684 = sizeof = var683 ; char * var22 = ( char * ) malloc ( var254 ) ; ; { int var24 = 0 ; label_9:
      |                                                                                                                                                                                                                                                                           ^~~~~
output.c:12:276: error: ‘var680’ undeclared (first use in this function); did you mean ‘var670’?
   12 |  } } void printAsciiBoard ( int * var17 , int * var18 ) {  var671 = 7 * 8 ;  var672 = 8 - 1 ;  var673 = var671 + var672 ;  var674 = int var19 = var673 ;  var675 = 4 * 8 ;  var676 = 8 - 1 ;  var677 = var675 + var676 ;  var678 = int var20 = var677 ;  var679 = var19 * var20 ;  var680 = var679 + var20 ;  var681 = int var21 = var680 ;  var682 = ( char ) 0 ;  var683 = var21 [ 0 ] ;  var684 = sizeof = var683 ; char * var22 = ( char * ) malloc ( var254 ) ; ; { int var24 = 0 ; label_9:
      |                                                                                                                                                                                                                                                                                    ^~~~~~
      |                                                                                                                                                                                                                                                                                    var670
output.c:12:303: error: ‘var681’ undeclared (first use in this function); did you mean ‘var661’?
   12 |  } } void printAsciiBoard ( int * var17 , int * var18 ) {  var671 = 7 * 8 ;  var672 = 8 - 1 ;  var673 = var671 + var672 ;  var674 = int var19 = var673 ;  var675 = 4 * 8 ;  var676 = 8 - 1 ;  var677 = var675 + var676 ;  var678 = int var20 = var677 ;  var679 = var19 * var20 ;  var680 = var679 + var20 ;  var681 = int var21 = var680 ;  var682 = ( char ) 0 ;  var683 = var21 [ 0 ] ;  var684 = sizeof = var683 ; char * var22 = ( char * ) malloc ( var254 ) ; ; { int var24 = 0 ; label_9:
      |                                                                                                                                                                                                                                                                                                               ^~~~~~
      |                                                                                                                                                                                                                                                                                                               var661
output.c:12:312: error: expected expression before ‘int’
   12 |  } } void printAsciiBoard ( int * var17 , int * var18 ) {  var671 = 7 * 8 ;  var672 = 8 - 1 ;  var673 = var671 + var672 ;  var674 = int var19 = var673 ;  var675 = 4 * 8 ;  var676 = 8 - 1 ;  var677 = var675 + var676 ;  var678 = int var20 = var677 ;  var679 = var19 * var20 ;  var680 = var679 + var20 ;  var681 = int var21 = var680 ;  var682 = ( char ) 0 ;  var683 = var21 [ 0 ] ;  var684 = sizeof = var683 ; char * var22 = ( char * ) malloc ( var254 ) ; ; { int var24 = 0 ; label_9:
      |                                                                                                                                                                                                                                                                                                                        ^~~
output.c:12:334: error: ‘var682’ undeclared (first use in this function); did you mean ‘var662’?
   12 |  } } void printAsciiBoard ( int * var17 , int * var18 ) {  var671 = 7 * 8 ;  var672 = 8 - 1 ;  var673 = var671 + var672 ;  var674 = int var19 = var673 ;  var675 = 4 * 8 ;  var676 = 8 - 1 ;  var677 = var675 + var676 ;  var678 = int var20 = var677 ;  var679 = var19 * var20 ;  var680 = var679 + var20 ;  var681 = int var21 = var680 ;  var682 = ( char ) 0 ;  var683 = var21 [ 0 ] ;  var684 = sizeof = var683 ; char * var22 = ( char * ) malloc ( var254 ) ; ; { int var24 = 0 ; label_9:
      |                                                                                                                                                                                                                                                                                                                                              ^~~~~~
      |                                                                                                                                                                                                                                                                                                                                              var662
output.c:12:357: error: ‘var683’ undeclared (first use in this function); did you mean ‘var663’?
   12 |  } } void printAsciiBoard ( int * var17 , int * var18 ) {  var671 = 7 * 8 ;  var672 = 8 - 1 ;  var673 = var671 + var672 ;  var674 = int var19 = var673 ;  var675 = 4 * 8 ;  var676 = 8 - 1 ;  var677 = var675 + var676 ;  var678 = int var20 = var677 ;  var679 = var19 * var20 ;  var680 = var679 + var20 ;  var681 = int var21 = var680 ;  var682 = ( char ) 0 ;  var683 = var21 [ 0 ] ;  var684 = sizeof = var683 ; char * var22 = ( char * ) malloc ( var254 ) ; ; { int var24 = 0 ; label_9:
      |                                                                                                                                                                                                                                                                                                                                                                     ^~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                     var663
output.c:12:366: error: ‘var21’ undeclared (first use in this function)
   12 |  } } void printAsciiBoard ( int * var17 , int * var18 ) {  var671 = 7 * 8 ;  var672 = 8 - 1 ;  var673 = var671 + var672 ;  var674 = int var19 = var673 ;  var675 = 4 * 8 ;  var676 = 8 - 1 ;  var677 = var675 + var676 ;  var678 = int var20 = var677 ;  var679 = var19 * var20 ;  var680 = var679 + var20 ;  var681 = int var21 = var680 ;  var682 = ( char ) 0 ;  var683 = var21 [ 0 ] ;  var684 = sizeof = var683 ; char * var22 = ( char * ) malloc ( var254 ) ; ; { int var24 = 0 ; label_9:
      |                                                                                                                                                                                                                                                                                                                                                                              ^~~~~
output.c:12:381: error: ‘var684’ undeclared (first use in this function); did you mean ‘var664’?
   12 |  } } void printAsciiBoard ( int * var17 , int * var18 ) {  var671 = 7 * 8 ;  var672 = 8 - 1 ;  var673 = var671 + var672 ;  var674 = int var19 = var673 ;  var675 = 4 * 8 ;  var676 = 8 - 1 ;  var677 = var675 + var676 ;  var678 = int var20 = var677 ;  var679 = var19 * var20 ;  var680 = var679 + var20 ;  var681 = int var21 = var680 ;  var682 = ( char ) 0 ;  var683 = var21 [ 0 ] ;  var684 = sizeof = var683 ; char * var22 = ( char * ) malloc ( var254 ) ; ; { int var24 = 0 ; label_9:
      |                                                                                                                                                                                                                                                                                                                                                                                             ^~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                             var664
output.c:12:397: error: expected expression before ‘=’ token
   12 |  } } void printAsciiBoard ( int * var17 , int * var18 ) {  var671 = 7 * 8 ;  var672 = 8 - 1 ;  var673 = var671 + var672 ;  var674 = int var19 = var673 ;  var675 = 4 * 8 ;  var676 = 8 - 1 ;  var677 = var675 + var676 ;  var678 = int var20 = var677 ;  var679 = var19 * var20 ;  var680 = var679 + var20 ;  var681 = int var21 = var680 ;  var682 = ( char ) 0 ;  var683 = var21 [ 0 ] ;  var684 = sizeof = var683 ; char * var22 = ( char * ) malloc ( var254 ) ; ; { int var24 = 0 ; label_9:
      |                                                                                                                                                                                                                                                                                                                                                                                                             ^
output.c:12:443: error: ‘var254’ undeclared (first use in this function); did you mean ‘var654’?
   12 |  } } void printAsciiBoard ( int * var17 , int * var18 ) {  var671 = 7 * 8 ;  var672 = 8 - 1 ;  var673 = var671 + var672 ;  var674 = int var19 = var673 ;  var675 = 4 * 8 ;  var676 = 8 - 1 ;  var677 = var675 + var676 ;  var678 = int var20 = var677 ;  var679 = var19 * var20 ;  var680 = var679 + var20 ;  var681 = int var21 = var680 ;  var682 = ( char ) 0 ;  var683 = var21 [ 0 ] ;  var684 = sizeof = var683 ; char * var22 = ( char * ) malloc ( var254 ) ; ; { int var24 = 0 ; label_9:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                           ^~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                           var654
output.c:13:36: error: expected ‘;’ before ‘var24’
   13 |  if ( var24 < var21 ) { var22 [ 0 ] var24 ) = ' ' ; var24 ; var24 = var24 + 1 ; goto label_9 ; } else { } label_10:
      |                                    ^~~~~~
      |                                    ;
output.c:13:43: error: expected statement before ‘)’ token
   13 |  if ( var24 < var21 ) { var22 [ 0 ] var24 ) = ' ' ; var24 ; var24 = var24 + 1 ; goto label_9 ; } else { } label_10:
      |                                           ^
output.c:13:45: error: expected expression before ‘=’ token
   13 |  if ( var24 < var21 ) { var22 [ 0 ] var24 ) = ' ' ; var24 ; var24 = var24 + 1 ; goto label_9 ; } else { } label_10:
      |                                             ^
output.c:14:5: error: ‘var685’ undeclared (first use in this function); did you mean ‘var665’?
   14 |  }  var685 = var21 - 1 ;  var686 = var22 [ 0 ] ;  var687 = var686 = '\0' ; { int var25 = 0 ; label_11:
      |     ^~~~~~
      |     var665
output.c:14:27: error: ‘var686’ undeclared (first use in this function); did you mean ‘var668’?
   14 |  }  var685 = var21 - 1 ;  var686 = var22 [ 0 ] ;  var687 = var686 = '\0' ; { int var25 = 0 ; label_11:
      |                           ^~~~~~
      |                           var668
output.c:14:51: error: ‘var687’ undeclared (first use in this function); did you mean ‘var667’?
   14 |  }  var685 = var21 - 1 ;  var686 = var22 [ 0 ] ;  var687 = var686 = '\0' ; { int var25 = 0 ; label_11:
      |                                                   ^~~~~~
      |                                                   var667
output.c:15:26: error: ‘var688’ undeclared (first use in this function); did you mean ‘var668’?
   15 |  if ( var25 < var20 ) {  var688 = var25 * var19 ;  var689 = var688 + var19 ;  var690 = var689 + var25 ;  var691 = var22 [ 0 ] ;  var692 = var691 = '\n' ; var25 ; var25 = var25 + 1 ; goto label_11 ; } else { } label_12:
      |                          ^~~~~~
      |                          var668
output.c:15:52: error: ‘var689’ undeclared (first use in this function); did you mean ‘var669’?
   15 |  if ( var25 < var20 ) {  var688 = var25 * var19 ;  var689 = var688 + var19 ;  var690 = var689 + var25 ;  var691 = var22 [ 0 ] ;  var692 = var691 = '\n' ; var25 ; var25 = var25 + 1 ; goto label_11 ; } else { } label_12:
      |                                                    ^~~~~~
      |                                                    var669
output.c:15:79: error: ‘var690’ undeclared (first use in this function); did you mean ‘var670’?
   15 |  if ( var25 < var20 ) {  var688 = var25 * var19 ;  var689 = var688 + var19 ;  var690 = var689 + var25 ;  var691 = var22 [ 0 ] ;  var692 = var691 = '\n' ; var25 ; var25 = var25 + 1 ; goto label_11 ; } else { } label_12:
      |                                                                               ^~~~~~
      |                                                                               var670
output.c:15:106: error: ‘var691’ undeclared (first use in this function); did you mean ‘var661’?
   15 |  if ( var25 < var20 ) {  var688 = var25 * var19 ;  var689 = var688 + var19 ;  var690 = var689 + var25 ;  var691 = var22 [ 0 ] ;  var692 = var691 = '\n' ; var25 ; var25 = var25 + 1 ; goto label_11 ; } else { } label_12:
      |                                                                                                          ^~~~~~
      |                                                                                                          var661
output.c:15:130: error: ‘var692’ undeclared (first use in this function); did you mean ‘var662’?
   15 |  if ( var25 < var20 ) {  var688 = var25 * var19 ;  var689 = var688 + var19 ;  var690 = var689 + var25 ;  var691 = var22 [ 0 ] ;  var692 = var691 = '\n' ; var25 ; var25 = var25 + 1 ; goto label_11 ; } else { } label_12:
      |                                                                                                                                  ^~~~~~
      |                                                                                                                                  var662
output.c:18:26: error: ‘var693’ undeclared (first use in this function); did you mean ‘var663’?
   18 |  if ( var27 < var19 ) {  var693 = var26 * var19 ;  var694 = var693 + var27 ;  var695 = var694 + var26 ;  var696 = var22 [ 0 ] ;  var697 = var696 = '|' ;  var698 = 7 + 1 ;  var699 = var27 + var698 ;  var700 = var27 = var699 ; goto label_15 ; } else { } label_16:
      |                          ^~~~~~
      |                          var663
output.c:18:52: error: ‘var694’ undeclared (first use in this function); did you mean ‘var664’?
   18 |  if ( var27 < var19 ) {  var693 = var26 * var19 ;  var694 = var693 + var27 ;  var695 = var694 + var26 ;  var696 = var22 [ 0 ] ;  var697 = var696 = '|' ;  var698 = 7 + 1 ;  var699 = var27 + var698 ;  var700 = var27 = var699 ; goto label_15 ; } else { } label_16:
      |                                                    ^~~~~~
      |                                                    var664
output.c:18:79: error: ‘var695’ undeclared (first use in this function); did you mean ‘var665’?
   18 |  if ( var27 < var19 ) {  var693 = var26 * var19 ;  var694 = var693 + var27 ;  var695 = var694 + var26 ;  var696 = var22 [ 0 ] ;  var697 = var696 = '|' ;  var698 = 7 + 1 ;  var699 = var27 + var698 ;  var700 = var27 = var699 ; goto label_15 ; } else { } label_16:
      |                                                                               ^~~~~~
      |                                                                               var665
output.c:18:106: error: ‘var696’ undeclared (first use in this function); did you mean ‘var669’?
   18 |  if ( var27 < var19 ) {  var693 = var26 * var19 ;  var694 = var693 + var27 ;  var695 = var694 + var26 ;  var696 = var22 [ 0 ] ;  var697 = var696 = '|' ;  var698 = 7 + 1 ;  var699 = var27 + var698 ;  var700 = var27 = var699 ; goto label_15 ; } else { } label_16:
      |                                                                                                          ^~~~~~
      |                                                                                                          var669
output.c:18:130: error: ‘var697’ undeclared (first use in this function); did you mean ‘var667’?
   18 |  if ( var27 < var19 ) {  var693 = var26 * var19 ;  var694 = var693 + var27 ;  var695 = var694 + var26 ;  var696 = var22 [ 0 ] ;  var697 = var696 = '|' ;  var698 = 7 + 1 ;  var699 = var27 + var698 ;  var700 = var27 = var699 ; goto label_15 ; } else { } label_16:
      |                                                                                                                                  ^~~~~~
      |                                                                                                                                  var667
output.c:18:155: error: ‘var698’ undeclared (first use in this function); did you mean ‘var668’?
   18 |  if ( var27 < var19 ) {  var693 = var26 * var19 ;  var694 = var693 + var27 ;  var695 = var694 + var26 ;  var696 = var22 [ 0 ] ;  var697 = var696 = '|' ;  var698 = 7 + 1 ;  var699 = var27 + var698 ;  var700 = var27 = var699 ; goto label_15 ; } else { } label_16:
      |                                                                                                                                                           ^~~~~~
      |                                                                                                                                                           var668
output.c:18:173: error: ‘var699’ undeclared (first use in this function); did you mean ‘var669’?
   18 |  if ( var27 < var19 ) {  var693 = var26 * var19 ;  var694 = var693 + var27 ;  var695 = var694 + var26 ;  var696 = var22 [ 0 ] ;  var697 = var696 = '|' ;  var698 = 7 + 1 ;  var699 = var27 + var698 ;  var700 = var27 = var699 ; goto label_15 ; } else { } label_16:
      |                                                                                                                                                                             ^~~~~~
      |                                                                                                                                                                             var669
output.c:18:200: error: ‘var700’ undeclared (first use in this function); did you mean ‘var670’?
   18 |  if ( var27 < var19 ) {  var693 = var26 * var19 ;  var694 = var693 + var27 ;  var695 = var694 + var26 ;  var696 = var22 [ 0 ] ;  var697 = var696 = '|' ;  var698 = 7 + 1 ;  var699 = var27 + var698 ;  var700 = var27 = var699 ; goto label_15 ; } else { } label_16:
      |                                                                                                                                                                                                        ^~~~~~
      |                                                                                                                                                                                                        var670
output.c:21:26: error: ‘var701’ undeclared (first use in this function); did you mean ‘var670’?
   21 |  if ( var28 < var20 ) {  var701 = 4 + 1 ;  var702 = var28 % var701 ;  var703 = var702 == 4 ;  var704 = int var511 = var703 ; if ( var511 ) { { int var29 = 0 ; label_19:
      |                          ^~~~~~
      |                          var670
output.c:21:44: error: ‘var702’ undeclared (first use in this function); did you mean ‘var22’?
   21 |  if ( var28 < var20 ) {  var701 = 4 + 1 ;  var702 = var28 % var701 ;  var703 = var702 == 4 ;  var704 = int var511 = var703 ; if ( var511 ) { { int var29 = 0 ; label_19:
      |                                            ^~~~~~
      |                                            var22
output.c:21:71: error: ‘var703’ undeclared (first use in this function); did you mean ‘var670’?
   21 |  if ( var28 < var20 ) {  var701 = 4 + 1 ;  var702 = var28 % var701 ;  var703 = var702 == 4 ;  var704 = int var511 = var703 ; if ( var511 ) { { int var29 = 0 ; label_19:
      |                                                                       ^~~~~~
      |                                                                       var670
output.c:21:95: error: ‘var704’ undeclared (first use in this function); did you mean ‘var670’?
   21 |  if ( var28 < var20 ) {  var701 = 4 + 1 ;  var702 = var28 % var701 ;  var703 = var702 == 4 ;  var704 = int var511 = var703 ; if ( var511 ) { { int var29 = 0 ; label_19:
      |                                                                                               ^~~~~~
      |                                                                                               var670
output.c:21:104: error: expected expression before ‘int’
   21 |  if ( var28 < var20 ) {  var701 = 4 + 1 ;  var702 = var28 % var701 ;  var703 = var702 == 4 ;  var704 = int var511 = var703 ; if ( var511 ) { { int var29 = 0 ; label_19:
      |                                                                                                        ^~~
output.c:21:131: error: ‘var511’ undeclared (first use in this function); did you mean ‘var18’?
   21 |  if ( var28 < var20 ) {  var701 = 4 + 1 ;  var702 = var28 % var701 ;  var703 = var702 == 4 ;  var704 = int var511 = var703 ; if ( var511 ) { { int var29 = 0 ; label_19:
      |                                                                                                                                   ^~~~~~
      |                                                                                                                                   var18
output.c:22:26: error: ‘var705’ undeclared (first use in this function); did you mean ‘var670’?
   22 |  if ( var29 < var19 ) {  var705 = 7 + 1 ;  var706 = var29 % var705 ;  var707 = var706 == 7 ;  var708 = int var512 = var707 ; if ( var512 ) {  var709 = var28 * var19 ;  var710 = var709 + var29 ;  var711 = var710 + var28 ;  var712 = var22 [ 0 ] ;  var713 = var712 = '+' ; } else {  var714 = var28 * var19 ;  var715 = var714 + var29 ;  var716 = var715 + var28 ;  var717 = var22 [ 0 ] ;  var718 = var717 = '-' ; } var29 ; var29 = var29 + 1 ; goto label_19 ; } else { } label_20:
      |                          ^~~~~~
      |                          var670
output.c:22:44: error: ‘var706’ undeclared (first use in this function); did you mean ‘var670’?
   22 |  if ( var29 < var19 ) {  var705 = 7 + 1 ;  var706 = var29 % var705 ;  var707 = var706 == 7 ;  var708 = int var512 = var707 ; if ( var512 ) {  var709 = var28 * var19 ;  var710 = var709 + var29 ;  var711 = var710 + var28 ;  var712 = var22 [ 0 ] ;  var713 = var712 = '+' ; } else {  var714 = var28 * var19 ;  var715 = var714 + var29 ;  var716 = var715 + var28 ;  var717 = var22 [ 0 ] ;  var718 = var717 = '-' ; } var29 ; var29 = var29 + 1 ; goto label_19 ; } else { } label_20:
      |                                            ^~~~~~
      |                                            var670
output.c:22:71: error: ‘var707’ undeclared (first use in this function); did you mean ‘var17’?
   22 |  if ( var29 < var19 ) {  var705 = 7 + 1 ;  var706 = var29 % var705 ;  var707 = var706 == 7 ;  var708 = int var512 = var707 ; if ( var512 ) {  var709 = var28 * var19 ;  var710 = var709 + var29 ;  var711 = var710 + var28 ;  var712 = var22 [ 0 ] ;  var713 = var712 = '+' ; } else {  var714 = var28 * var19 ;  var715 = var714 + var29 ;  var716 = var715 + var28 ;  var717 = var22 [ 0 ] ;  var718 = var717 = '-' ; } var29 ; var29 = var29 + 1 ; goto label_19 ; } else { } label_20:
      |                                                                       ^~~~~~
      |                                                                       var17
output.c:22:95: error: ‘var708’ undeclared (first use in this function); did you mean ‘var28’?
   22 |  if ( var29 < var19 ) {  var705 = 7 + 1 ;  var706 = var29 % var705 ;  var707 = var706 == 7 ;  var708 = int var512 = var707 ; if ( var512 ) {  var709 = var28 * var19 ;  var710 = var709 + var29 ;  var711 = var710 + var28 ;  var712 = var22 [ 0 ] ;  var713 = var712 = '+' ; } else {  var714 = var28 * var19 ;  var715 = var714 + var29 ;  var716 = var715 + var28 ;  var717 = var22 [ 0 ] ;  var718 = var717 = '-' ; } var29 ; var29 = var29 + 1 ; goto label_19 ; } else { } label_20:
      |                                                                                               ^~~~~~
      |                                                                                               var28
output.c:22:104: error: expected expression before ‘int’
   22 |  if ( var29 < var19 ) {  var705 = 7 + 1 ;  var706 = var29 % var705 ;  var707 = var706 == 7 ;  var708 = int var512 = var707 ; if ( var512 ) {  var709 = var28 * var19 ;  var710 = var709 + var29 ;  var711 = var710 + var28 ;  var712 = var22 [ 0 ] ;  var713 = var712 = '+' ; } else {  var714 = var28 * var19 ;  var715 = var714 + var29 ;  var716 = var715 + var28 ;  var717 = var22 [ 0 ] ;  var718 = var717 = '-' ; } var29 ; var29 = var29 + 1 ; goto label_19 ; } else { } label_20:
      |                                                                                                        ^~~
output.c:22:131: error: ‘var512’ undeclared (first use in this function); did you mean ‘var22’?
   22 |  if ( var29 < var19 ) {  var705 = 7 + 1 ;  var706 = var29 % var705 ;  var707 = var706 == 7 ;  var708 = int var512 = var707 ; if ( var512 ) {  var709 = var28 * var19 ;  var710 = var709 + var29 ;  var711 = var710 + var28 ;  var712 = var22 [ 0 ] ;  var713 = var712 = '+' ; } else {  var714 = var28 * var19 ;  var715 = var714 + var29 ;  var716 = var715 + var28 ;  var717 = var22 [ 0 ] ;  var718 = var717 = '-' ; } var29 ; var29 = var29 + 1 ; goto label_19 ; } else { } label_20:
      |                                                                                                                                   ^~~~~~
      |                                                                                                                                   var22
output.c:22:143: error: ‘var709’ undeclared (first use in this function); did you mean ‘var29’?
   22 |  if ( var29 < var19 ) {  var705 = 7 + 1 ;  var706 = var29 % var705 ;  var707 = var706 == 7 ;  var708 = int var512 = var707 ; if ( var512 ) {  var709 = var28 * var19 ;  var710 = var709 + var29 ;  var711 = var710 + var28 ;  var712 = var22 [ 0 ] ;  var713 = var712 = '+' ; } else {  var714 = var28 * var19 ;  var715 = var714 + var29 ;  var716 = var715 + var28 ;  var717 = var22 [ 0 ] ;  var718 = var717 = '-' ; } var29 ; var29 = var29 + 1 ; goto label_19 ; } else { } label_20:
      |                                                                                                                                               ^~~~~~
      |                                                                                                                                               var29
output.c:22:169: error: ‘var710’ undeclared (first use in this function); did you mean ‘var18’?
   22 |  if ( var29 < var19 ) {  var705 = 7 + 1 ;  var706 = var29 % var705 ;  var707 = var706 == 7 ;  var708 = int var512 = var707 ; if ( var512 ) {  var709 = var28 * var19 ;  var710 = var709 + var29 ;  var711 = var710 + var28 ;  var712 = var22 [ 0 ] ;  var713 = var712 = '+' ; } else {  var714 = var28 * var19 ;  var715 = var714 + var29 ;  var716 = var715 + var28 ;  var717 = var22 [ 0 ] ;  var718 = var717 = '-' ; } var29 ; var29 = var29 + 1 ; goto label_19 ; } else { } label_20:
      |                                                                                                                                                                         ^~~~~~
      |                                                                                                                                                                         var18
output.c:22:196: error: ‘var711’ undeclared (first use in this function); did you mean ‘var18’?
   22 |  if ( var29 < var19 ) {  var705 = 7 + 1 ;  var706 = var29 % var705 ;  var707 = var706 == 7 ;  var708 = int var512 = var707 ; if ( var512 ) {  var709 = var28 * var19 ;  var710 = var709 + var29 ;  var711 = var710 + var28 ;  var712 = var22 [ 0 ] ;  var713 = var712 = '+' ; } else {  var714 = var28 * var19 ;  var715 = var714 + var29 ;  var716 = var715 + var28 ;  var717 = var22 [ 0 ] ;  var718 = var717 = '-' ; } var29 ; var29 = var29 + 1 ; goto label_19 ; } else { } label_20:
      |                                                                                                                                                                                                    ^~~~~~
      |                                                                                                                                                                                                    var18
output.c:22:223: error: ‘var712’ undeclared (first use in this function); did you mean ‘var22’?
   22 |  if ( var29 < var19 ) {  var705 = 7 + 1 ;  var706 = var29 % var705 ;  var707 = var706 == 7 ;  var708 = int var512 = var707 ; if ( var512 ) {  var709 = var28 * var19 ;  var710 = var709 + var29 ;  var711 = var710 + var28 ;  var712 = var22 [ 0 ] ;  var713 = var712 = '+' ; } else {  var714 = var28 * var19 ;  var715 = var714 + var29 ;  var716 = var715 + var28 ;  var717 = var22 [ 0 ] ;  var718 = var717 = '-' ; } var29 ; var29 = var29 + 1 ; goto label_19 ; } else { } label_20:
      |                                                                                                                                                                                                                               ^~~~~~
      |                                                                                                                                                                                                                               var22
output.c:22:247: error: ‘var713’ undeclared (first use in this function); did you mean ‘var18’?
   22 |  if ( var29 < var19 ) {  var705 = 7 + 1 ;  var706 = var29 % var705 ;  var707 = var706 == 7 ;  var708 = int var512 = var707 ; if ( var512 ) {  var709 = var28 * var19 ;  var710 = var709 + var29 ;  var711 = var710 + var28 ;  var712 = var22 [ 0 ] ;  var713 = var712 = '+' ; } else {  var714 = var28 * var19 ;  var715 = var714 + var29 ;  var716 = var715 + var28 ;  var717 = var22 [ 0 ] ;  var718 = var717 = '-' ; } var29 ; var29 = var29 + 1 ; goto label_19 ; } else { } label_20:
      |                                                                                                                                                                                                                                                       ^~~~~~
      |                                                                                                                                                                                                                                                       var18
output.c:22:281: error: ‘var714’ undeclared (first use in this function); did you mean ‘var18’?
   22 |  if ( var29 < var19 ) {  var705 = 7 + 1 ;  var706 = var29 % var705 ;  var707 = var706 == 7 ;  var708 = int var512 = var707 ; if ( var512 ) {  var709 = var28 * var19 ;  var710 = var709 + var29 ;  var711 = var710 + var28 ;  var712 = var22 [ 0 ] ;  var713 = var712 = '+' ; } else {  var714 = var28 * var19 ;  var715 = var714 + var29 ;  var716 = var715 + var28 ;  var717 = var22 [ 0 ] ;  var718 = var717 = '-' ; } var29 ; var29 = var29 + 1 ; goto label_19 ; } else { } label_20:
      |                                                                                                                                                                                                                                                                                         ^~~~~~
      |                                                                                                                                                                                                                                                                                         var18
output.c:22:307: error: ‘var715’ undeclared (first use in this function); did you mean ‘var18’?
   22 |  if ( var29 < var19 ) {  var705 = 7 + 1 ;  var706 = var29 % var705 ;  var707 = var706 == 7 ;  var708 = int var512 = var707 ; if ( var512 ) {  var709 = var28 * var19 ;  var710 = var709 + var29 ;  var711 = var710 + var28 ;  var712 = var22 [ 0 ] ;  var713 = var712 = '+' ; } else {  var714 = var28 * var19 ;  var715 = var714 + var29 ;  var716 = var715 + var28 ;  var717 = var22 [ 0 ] ;  var718 = var717 = '-' ; } var29 ; var29 = var29 + 1 ; goto label_19 ; } else { } label_20:
      |                                                                                                                                                                                                                                                                                                                   ^~~~~~
      |                                                                                                                                                                                                                                                                                                                   var18
output.c:22:334: error: ‘var716’ undeclared (first use in this function); did you mean ‘var18’?
   22 |  if ( var29 < var19 ) {  var705 = 7 + 1 ;  var706 = var29 % var705 ;  var707 = var706 == 7 ;  var708 = int var512 = var707 ; if ( var512 ) {  var709 = var28 * var19 ;  var710 = var709 + var29 ;  var711 = var710 + var28 ;  var712 = var22 [ 0 ] ;  var713 = var712 = '+' ; } else {  var714 = var28 * var19 ;  var715 = var714 + var29 ;  var716 = var715 + var28 ;  var717 = var22 [ 0 ] ;  var718 = var717 = '-' ; } var29 ; var29 = var29 + 1 ; goto label_19 ; } else { } label_20:
      |                                                                                                                                                                                                                                                                                                                                              ^~~~~~
      |                                                                                                                                                                                                                                                                                                                                              var18
output.c:22:361: error: ‘var717’ undeclared (first use in this function); did you mean ‘var17’?
   22 |  if ( var29 < var19 ) {  var705 = 7 + 1 ;  var706 = var29 % var705 ;  var707 = var706 == 7 ;  var708 = int var512 = var707 ; if ( var512 ) {  var709 = var28 * var19 ;  var710 = var709 + var29 ;  var711 = var710 + var28 ;  var712 = var22 [ 0 ] ;  var713 = var712 = '+' ; } else {  var714 = var28 * var19 ;  var715 = var714 + var29 ;  var716 = var715 + var28 ;  var717 = var22 [ 0 ] ;  var718 = var717 = '-' ; } var29 ; var29 = var29 + 1 ; goto label_19 ; } else { } label_20:
      |                                                                                                                                                                                                                                                                                                                                                                         ^~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                         var17
output.c:22:385: error: ‘var718’ undeclared (first use in this function); did you mean ‘var18’?
   22 |  if ( var29 < var19 ) {  var705 = 7 + 1 ;  var706 = var29 % var705 ;  var707 = var706 == 7 ;  var708 = int var512 = var707 ; if ( var512 ) {  var709 = var28 * var19 ;  var710 = var709 + var29 ;  var711 = var710 + var28 ;  var712 = var22 [ 0 ] ;  var713 = var712 = '+' ; } else {  var714 = var28 * var19 ;  var715 = var714 + var29 ;  var716 = var715 + var28 ;  var717 = var22 [ 0 ] ;  var718 = var717 = '-' ; } var29 ; var29 = var29 + 1 ; goto label_19 ; } else { } label_20:
      |                                                                                                                                                                                                                                                                                                                                                                                                 ^~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                 var18
output.c:24:5: error: ‘var719’ undeclared (first use in this function); did you mean ‘var18’?
   24 |  }  var719 = 7 + 1 ;  var720 = char var30 [ 0 ] ; { int var31 = 0 ; label_21:
      |     ^~~~~~
      |     var18
output.c:24:23: error: ‘var720’ undeclared (first use in this function); did you mean ‘var22’?
   24 |  }  var719 = 7 + 1 ;  var720 = char var30 [ 0 ] ; { int var31 = 0 ; label_21:
      |                       ^~~~~~
      |                       var22
output.c:24:32: error: expected expression before ‘char’
   24 |  }  var719 = 7 + 1 ;  var720 = char var30 [ 0 ] ; { int var31 = 0 ; label_21:
      |                                ^~~~
output.c:25:3: error: ‘var721’ undeclared (first use in this function); did you mean ‘var31’?
   25 |   var721 = 7 + 1 ;  var722 = var31 < var721 ; var30 [ 0 ] var31 ) = ' ' ; var31 ; var31 = var31 + 1 ; goto label_21 ; } label_22:
      |   ^~~~~~
      |   var31
output.c:25:21: error: ‘var722’ undeclared (first use in this function); did you mean ‘var22’?
   25 |   var721 = 7 + 1 ;  var722 = var31 < var721 ; var30 [ 0 ] var31 ) = ' ' ; var31 ; var31 = var31 + 1 ; goto label_21 ; } label_22:
      |                     ^~~~~~
      |                     var22
output.c:25:47: error: ‘var30’ undeclared (first use in this function); did you mean ‘var31’?
   25 |   var721 = 7 + 1 ;  var722 = var31 < var721 ; var30 [ 0 ] var31 ) = ' ' ; var31 ; var31 = var31 + 1 ; goto label_21 ; } label_22:
      |                                               ^~~~~
      |                                               var31
output.c:25:58: error: expected ‘;’ before ‘var31’
   25 |   var721 = 7 + 1 ;  var722 = var31 < var721 ; var30 [ 0 ] var31 ) = ' ' ; var31 ; var31 = var31 + 1 ; goto label_21 ; } label_22:
      |                                                          ^~~~~~
      |                                                          ;
output.c:25:65: error: expected statement before ‘)’ token
   25 |   var721 = 7 + 1 ;  var722 = var31 < var721 ; var30 [ 0 ] var31 ) = ' ' ; var31 ; var31 = var31 + 1 ; goto label_21 ; } label_22:
      |                                                                 ^
output.c:25:67: error: expected expression before ‘=’ token
   25 |   var721 = 7 + 1 ;  var722 = var31 < var721 ; var30 [ 0 ] var31 ) = ' ' ; var31 ; var31 = var31 + 1 ; goto label_21 ; } label_22:
      |                                                                   ^
output.c: At top level:
output.c:26:32: error: expected identifier or ‘(’ before ‘{’ token
   26 |  } int var32 = 0 ; int var33 ; { int var34 = 0 ; label_23:
      |                                ^
output.c:41:5: warning: data definition has no type or storage class
   41 |  }  var765 = var21 - 1 ;  var766 = var22 [ 0 ] ;  var767 = var766 = '\0' ; printf ( "%s\n" , var22 ) ; ; free ( var22 ) ; ; } int getValidMoves ( int * var47 , int * var48 , int var49 ) { int var50 = 0 ; int var51 = var49 ^ 1 ; { int var52 = 0 ; label_35:
      |     ^~~~~~
output.c:41:5: error: type defaults to ‘int’ in declaration of ‘var765’ [-Wimplicit-int]
output.c:41:14: error: ‘var21’ undeclared here (not in a function)
   41 |  }  var765 = var21 - 1 ;  var766 = var22 [ 0 ] ;  var767 = var766 = '\0' ; printf ( "%s\n" , var22 ) ; ; free ( var22 ) ; ; } int getValidMoves ( int * var47 , int * var48 , int var49 ) { int var50 = 0 ; int var51 = var49 ^ 1 ; { int var52 = 0 ; label_35:
      |              ^~~~~
output.c:41:27: warning: data definition has no type or storage class
   41 |  }  var765 = var21 - 1 ;  var766 = var22 [ 0 ] ;  var767 = var766 = '\0' ; printf ( "%s\n" , var22 ) ; ; free ( var22 ) ; ; } int getValidMoves ( int * var47 , int * var48 , int var49 ) { int var50 = 0 ; int var51 = var49 ^ 1 ; { int var52 = 0 ; label_35:
      |                           ^~~~~~
output.c:41:27: error: type defaults to ‘int’ in declaration of ‘var766’ [-Wimplicit-int]
output.c:41:36: error: ‘var22’ undeclared here (not in a function); did you mean ‘var32’?
   41 |  }  var765 = var21 - 1 ;  var766 = var22 [ 0 ] ;  var767 = var766 = '\0' ; printf ( "%s\n" , var22 ) ; ; free ( var22 ) ; ; } int getValidMoves ( int * var47 , int * var48 , int var49 ) { int var50 = 0 ; int var51 = var49 ^ 1 ; { int var52 = 0 ; label_35:
      |                                    ^~~~~
      |                                    var32
output.c:41:51: warning: data definition has no type or storage class
   41 |  }  var765 = var21 - 1 ;  var766 = var22 [ 0 ] ;  var767 = var766 = '\0' ; printf ( "%s\n" , var22 ) ; ; free ( var22 ) ; ; } int getValidMoves ( int * var47 , int * var48 , int var49 ) { int var50 = 0 ; int var51 = var49 ^ 1 ; { int var52 = 0 ; label_35:
      |                                                   ^~~~~~
output.c:41:51: error: type defaults to ‘int’ in declaration of ‘var767’ [-Wimplicit-int]
output.c:41:60: error: initializer element is not constant
   41 |  }  var765 = var21 - 1 ;  var766 = var22 [ 0 ] ;  var767 = var766 = '\0' ; printf ( "%s\n" , var22 ) ; ; free ( var22 ) ; ; } int getValidMoves ( int * var47 , int * var48 , int var49 ) { int var50 = 0 ; int var51 = var49 ^ 1 ; { int var52 = 0 ; label_35:
      |                                                            ^~~~~~
output.c:41:85: error: expected declaration specifiers or ‘...’ before string constant
   41 |  }  var765 = var21 - 1 ;  var766 = var22 [ 0 ] ;  var767 = var766 = '\0' ; printf ( "%s\n" , var22 ) ; ; free ( var22 ) ; ; } int getValidMoves ( int * var47 , int * var48 , int var49 ) { int var50 = 0 ; int var51 = var49 ^ 1 ; { int var52 = 0 ; label_35:
      |                                                                                     ^~~~~~
output.c:41:94: error: expected declaration specifiers or ‘...’ before ‘var22’
   41 |  }  var765 = var21 - 1 ;  var766 = var22 [ 0 ] ;  var767 = var766 = '\0' ; printf ( "%s\n" , var22 ) ; ; free ( var22 ) ; ; } int getValidMoves ( int * var47 , int * var48 , int var49 ) { int var50 = 0 ; int var51 = var49 ^ 1 ; { int var52 = 0 ; label_35:
      |                                                                                              ^~~~~
output.c:41:106: warning: data definition has no type or storage class
   41 |  }  var765 = var21 - 1 ;  var766 = var22 [ 0 ] ;  var767 = var766 = '\0' ; printf ( "%s\n" , var22 ) ; ; free ( var22 ) ; ; } int getValidMoves ( int * var47 , int * var48 , int var49 ) { int var50 = 0 ; int var51 = var49 ^ 1 ; { int var52 = 0 ; label_35:
      |                                                                                                          ^~~~
output.c:41:106: error: type defaults to ‘int’ in declaration of ‘free’ [-Wimplicit-int]
output.c:41:94: error: parameter names (without types) in function declaration [-Wdeclaration-missing-parameter-type]
   41 |  }  var765 = var21 - 1 ;  var766 = var22 [ 0 ] ;  var767 = var766 = '\0' ; printf ( "%s\n" , var22 ) ; ; free ( var22 ) ; ; } int getValidMoves ( int * var47 , int * var48 , int var49 ) { int var50 = 0 ; int var51 = var49 ^ 1 ; { int var52 = 0 ; label_35:
      |                                                                                              ^~~~~
output.c:41:106: error: conflicting types for ‘free’; have ‘int()’
   41 |  }  var765 = var21 - 1 ;  var766 = var22 [ 0 ] ;  var767 = var766 = '\0' ; printf ( "%s\n" , var22 ) ; ; free ( var22 ) ; ; } int getValidMoves ( int * var47 , int * var48 , int var49 ) { int var50 = 0 ; int var51 = var49 ^ 1 ; { int var52 = 0 ; label_35:
      |                                                                                                          ^~~~
In file included from output.c:2:
/usr/include/stdlib.h:687:13: note: previous declaration of ‘free’ with type ‘void(void *)’
  687 | extern void free (void *__ptr) __THROW;
      |             ^~~~
output.c:41:125: error: expected identifier or ‘(’ before ‘}’ token
   41 |  }  var765 = var21 - 1 ;  var766 = var22 [ 0 ] ;  var767 = var766 = '\0' ; printf ( "%s\n" , var22 ) ; ; free ( var22 ) ; ; } int getValidMoves ( int * var47 , int * var48 , int var49 ) { int var50 = 0 ; int var51 = var49 ^ 1 ; { int var52 = 0 ; label_35:
      |                                                                                                                             ^
output.c: In function ‘getValidMoves’:
output.c:42:3: error: ‘var768’ undeclared (first use in this function); did you mean ‘var767’?
   42 |   var768 = 8 * 8 ;  var769 = var52 < var768 ; var48 [ 0 ] var52 ) = var53 ; var52 ; var52 = var52 + 1 ; goto label_35 ; } label_36:
      |   ^~~~~~
      |   var767
output.c:42:21: error: ‘var769’ undeclared (first use in this function); did you mean ‘var767’?
   42 |   var768 = 8 * 8 ;  var769 = var52 < var768 ; var48 [ 0 ] var52 ) = var53 ; var52 ; var52 = var52 + 1 ; goto label_35 ; } label_36:
      |                     ^~~~~~
      |                     var767
output.c:42:58: error: expected ‘;’ before ‘var52’
   42 |   var768 = 8 * 8 ;  var769 = var52 < var768 ; var48 [ 0 ] var52 ) = var53 ; var52 ; var52 = var52 + 1 ; goto label_35 ; } label_36:
      |                                                          ^~~~~~
      |                                                          ;
output.c:42:65: error: expected statement before ‘)’ token
   42 |   var768 = 8 * 8 ;  var769 = var52 < var768 ; var48 [ 0 ] var52 ) = var53 ; var52 ; var52 = var52 + 1 ; goto label_35 ; } label_36:
      |                                                                 ^
output.c:42:67: error: expected expression before ‘=’ token
   42 |   var768 = 8 * 8 ;  var769 = var52 < var768 ; var48 [ 0 ] var52 ) = var53 ; var52 ; var52 = var52 + 1 ; goto label_35 ; } label_36:
      |                                                                   ^
output.c:42:69: error: ‘var53’ undeclared (first use in this function); did you mean ‘var52’?
   42 |   var768 = 8 * 8 ;  var769 = var52 < var768 ; var48 [ 0 ] var52 ) = var53 ; var52 ; var52 = var52 + 1 ; goto label_35 ; } label_36:
      |                                                                     ^~~~~
      |                                                                     var52
output.c: At top level:
output.c:43:4: error: expected identifier or ‘(’ before ‘{’ token
   43 |  } { int var54 = 0 ; label_37:
      |    ^
output.c:47:788: error: expected identifier or ‘(’ before ‘else’
   47 |   var785 = 8 * 8 ;  var786 = var55 < var785 ;  var787 = var47 [ 0 ] ;  var788 = var787 == 2 ;  var1306 = 0 ; if ( var56 ) { if ( var788 ) { var1306 = 1 ; } else { } } else { }  var789 = var1306 ;  var790 = int var520 = var789 ; if ( var520 ) {  var791 = var48 [ 0 ] ;  var1347 = var791 == 1 ;  var1451 = 0 ; if ( var1347 ) { var1451 = 1 ; } else { }  var1348 = var1451 ;  var1349 =  var792 = var1348 ;  var793 = int var521 = var792 ; if ( var521 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_42 ; } else {  var794 = var47 [ 0 ] ;  var795 = var794 == var51 ;  var796 = int var522 = var795 ; if ( var522 ) { var56 = 1 ; } else { int var523 = var56 ; if ( var523 ) { goto label_42 ; } else { goto label_42 ; } } } var55 = var55 + ( 8 ) ; goto label_41 ; } else { } label_42:
      |~~~
output.c:47:805: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘:’ token
   47 |   var785 = 8 * 8 ;  var786 = var55 < var785 ;  var787 = var47 [ 0 ] ;  var788 = var787 == 2 ;  var1306 = 0 ; if ( var56 ) { if ( var788 ) { var1306 = 1 ; } else { } } else { }  var789 = var1306 ;  var790 = int var520 = var789 ; if ( var520 ) {  var791 = var48 [ 0 ] ;  var1347 = var791 == 1 ;  var1451 = 0 ; if ( var1347 ) { var1451 = 1 ; } else { }  var1348 = var1451 ;  var1349 =  var792 = var1348 ;  var793 = int var521 = var792 ; if ( var521 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_42 ; } else {  var794 = var47 [ 0 ] ;  var795 = var794 == var51 ;  var796 = int var522 = var795 ; if ( var522 ) { var56 = 1 ; } else { int var523 = var56 ; if ( var523 ) { goto label_42 ; } else { goto label_42 ; } } } var55 = var55 + ( 8 ) ; goto label_41 ; } else { } label_42:
      |
output.c:48:22: warning: data definition has no type or storage class
   48 |  var55 = var54 - 1 ; var56 = 0 ; label_43:
      |                      ^~~~~
output.c:48:22: error: type defaults to ‘int’ in declaration of ‘var56’ [-Wimplicit-int]
output.c:48:42: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘:’ token
   48 |  var55 = var54 - 1 ; var56 = 0 ; label_43:
      |                                          ^
output.c:49:26: warning: data definition has no type or storage class
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |                          ^~~~~~~
output.c:49:26: error: type defaults to ‘int’ in declaration of ‘var1452’ [-Wimplicit-int]
output.c:49:40: error: expected identifier or ‘(’ before ‘if’
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |                                        ^~
output.c:49:73: error: expected identifier or ‘(’ before ‘else’
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |                                                                         ^~~~
output.c:49:83: warning: data definition has no type or storage class
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |                                                                                   ^~~~~~~
output.c:49:83: error: type defaults to ‘int’ in declaration of ‘var1351’ [-Wimplicit-int]
output.c:49:93: error: initializer element is not constant
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |                                                                                             ^~~~~~~
output.c:49:104: warning: data definition has no type or storage class
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |                                                                                                        ^~~~~~~
output.c:49:104: error: type defaults to ‘int’ in declaration of ‘var1352’ [-Wimplicit-int]
output.c:49:115: error: ‘var797’ undeclared here (not in a function); did you mean ‘var767’?
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |                                                                                                                   ^~~~~~
      |                                                                                                                   var767
output.c:49:135: warning: data definition has no type or storage class
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |                                                                                                                                       ^~~~~~
output.c:49:135: error: type defaults to ‘int’ in declaration of ‘var798’ [-Wimplicit-int]
output.c:49:144: error: ‘var55’ undeclared here (not in a function); did you mean ‘var56’?
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |                                                                                                                                                ^~~~~
      |                                                                                                                                                var56
output.c:49:157: warning: data definition has no type or storage class
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |                                                                                                                                                             ^~~~~~
output.c:49:157: error: type defaults to ‘int’ in declaration of ‘var799’ [-Wimplicit-int]
output.c:49:175: warning: data definition has no type or storage class
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |                                                                                                                                                                               ^~~~~~
output.c:49:175: error: type defaults to ‘int’ in declaration of ‘var800’ [-Wimplicit-int]
output.c:49:184: error: initializer element is not constant
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |                                                                                                                                                                                        ^~~~~~
output.c:49:203: warning: data definition has no type or storage class
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |                                                                                                                                                                                                           ^~~~~~~
output.c:49:203: error: type defaults to ‘int’ in declaration of ‘var1307’ [-Wimplicit-int]
output.c:49:217: error: expected identifier or ‘(’ before ‘if’
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |                                                                                                                                                                                                                         ^~
output.c:49:276: error: expected identifier or ‘(’ before ‘else’
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |                                                                                                                                                                                                                                                                                    ^~~~
output.c:49:286: warning: data definition has no type or storage class
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |                                                                                                                                                                                                                                                                                              ^~~~~~
output.c:49:286: error: type defaults to ‘int’ in declaration of ‘var801’ [-Wimplicit-int]
output.c:49:295: error: initializer element is not constant
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |                                                                                                                                                                                                                                                                                                       ^~~~~~~
output.c:49:306: warning: data definition has no type or storage class
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |                                                                                                                                                                                                                                                                                                                  ^~~~~~
output.c:49:306: error: type defaults to ‘int’ in declaration of ‘var802’ [-Wimplicit-int]
output.c:49:315: error: ‘var47’ undeclared here (not in a function); did you mean ‘var647’?
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |                                                                                                                                                                                                                                                                                                                           ^~~~~
      |                                                                                                                                                                                                                                                                                                                           var647
output.c:49:330: warning: data definition has no type or storage class
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |                                                                                                                                                                                                                                                                                                                                          ^~~~~~
output.c:49:330: error: type defaults to ‘int’ in declaration of ‘var803’ [-Wimplicit-int]
output.c:49:339: error: initializer element is not constant
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |                                                                                                                                                                                                                                                                                                                                                   ^~~~~~
output.c:49:354: warning: data definition has no type or storage class
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |                                                                                                                                                                                                                                                                                                                                                                  ^~~~~~~
output.c:49:354: error: type defaults to ‘int’ in declaration of ‘var1308’ [-Wimplicit-int]
output.c:49:368: error: expected identifier or ‘(’ before ‘if’
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |                                                                                                                                                                                                                                                                                                                                                                                ^~
output.c:49:426: error: expected identifier or ‘(’ before ‘else’
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                          ^~~~
output.c:49:436: warning: data definition has no type or storage class
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                    ^~~~~~
output.c:49:436: error: type defaults to ‘int’ in declaration of ‘var804’ [-Wimplicit-int]
output.c:49:445: error: initializer element is not constant
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                             ^~~~~~~
output.c:49:456: warning: data definition has no type or storage class
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ^~~~~~
output.c:49:456: error: type defaults to ‘int’ in declaration of ‘var805’ [-Wimplicit-int]
output.c:49:465: error: expected expression before ‘int’
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^~~
output.c:49:487: error: expected identifier or ‘(’ before ‘if’
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ^~
output.c:49:792: error: expected identifier or ‘(’ before ‘else’
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |~~~
output.c:49:1004: warning: data definition has no type or storage class
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ^~~~~
output.c:49:1004: error: type defaults to ‘int’ in declaration of ‘var55’ [-Wimplicit-int]
output.c:49:1012: error: initializer element is not constant
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |~~~~
output.c:49:1028: error: expected identifier or ‘(’ before ‘goto’
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |~~~
output.c:49:1044: error: expected identifier or ‘(’ before ‘}’ token
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |
output.c:49:1054: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘:’ token
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |
output.c:50:22: warning: data definition has no type or storage class
   50 |  var55 = var54 + 1 ; var56 = 0 ; label_45:
      |                      ^~~~~
output.c:50:22: error: type defaults to ‘int’ in declaration of ‘var56’ [-Wimplicit-int]
output.c:50:22: error: redefinition of ‘var56’
output.c:48:22: note: previous definition of ‘var56’ with type ‘int’
   48 |  var55 = var54 - 1 ; var56 = 0 ; label_43:
      |                      ^~~~~
output.c:50:42: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘:’ token
   50 |  var55 = var54 + 1 ; var56 = 0 ; label_45:
      |                                          ^
output.c:51:25: warning: data definition has no type or storage class
   51 |   var812 = var55 % 8 ;  var813 = var812 > 0 ;  var814 = var47 [ 0 ] ;  var815 = var814 == 2 ;  var1309 = 0 ; if ( var56 ) { if ( var815 ) { var1309 = 1 ; } else { } } else { }  var816 = var1309 ;  var817 = int var528 = var816 ; if ( var528 ) {  var818 = var48 [ 0 ] ;  var1356 = var818 == 1 ;  var1454 = 0 ; if ( var1356 ) { var1454 = 1 ; } else { }  var1357 = var1454 ;  var1358 =  var819 = var1357 ;  var820 = int var529 = var819 ; if ( var529 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_46 ; } else {  var821 = var47 [ 0 ] ;  var822 = var821 == var51 ;  var823 = int var530 = var822 ; if ( var530 ) { var56 = 1 ; } else { int var531 = var56 ; if ( var531 ) { goto label_46 ; } else { goto label_46 ; } } } var55 = var55 + ( 1 ) ; goto label_45 ; } label_46:
      |                         ^~~~~~
output.c:51:25: error: type defaults to ‘int’ in declaration of ‘var813’ [-Wimplicit-int]
output.c:51:34: error: ‘var812’ undeclared here (not in a function); did you mean ‘var813’?
   51 |   var812 = var55 % 8 ;  var813 = var812 > 0 ;  var814 = var47 [ 0 ] ;  var815 = var814 == 2 ;  var1309 = 0 ; if ( var56 ) { if ( var815 ) { var1309 = 1 ; } else { } } else { }  var816 = var1309 ;  var817 = int var528 = var816 ; if ( var528 ) {  var818 = var48 [ 0 ] ;  var1356 = var818 == 1 ;  var1454 = 0 ; if ( var1356 ) { var1454 = 1 ; } else { }  var1357 = var1454 ;  var1358 =  var819 = var1357 ;  var820 = int var529 = var819 ; if ( var529 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_46 ; } else {  var821 = var47 [ 0 ] ;  var822 = var821 == var51 ;  var823 = int var530 = var822 ; if ( var530 ) { var56 = 1 ; } else { int var531 = var56 ; if ( var531 ) { goto label_46 ; } else { goto label_46 ; } } } var55 = var55 + ( 1 ) ; goto label_45 ; } label_46:
      |                                  ^~~~~~
      |                                  var813
output.c:51:48: warning: data definition has no type or storage class
   51 |   var812 = var55 % 8 ;  var813 = var812 > 0 ;  var814 = var47 [ 0 ] ;  var815 = var814 == 2 ;  var1309 = 0 ; if ( var56 ) { if ( var815 ) { var1309 = 1 ; } else { } } else { }  var816 = var1309 ;  var817 = int var528 = var816 ; if ( var528 ) {  var818 = var48 [ 0 ] ;  var1356 = var818 == 1 ;  var1454 = 0 ; if ( var1356 ) { var1454 = 1 ; } else { }  var1357 = var1454 ;  var1358 =  var819 = var1357 ;  var820 = int var529 = var819 ; if ( var529 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_46 ; } else {  var821 = var47 [ 0 ] ;  var822 = var821 == var51 ;  var823 = int var530 = var822 ; if ( var530 ) { var56 = 1 ; } else { int var531 = var56 ; if ( var531 ) { goto label_46 ; } else { goto label_46 ; } } } var55 = var55 + ( 1 ) ; goto label_45 ; } label_46:
      |                                                ^~~~~~
output.c:51:48: error: type defaults to ‘int’ in declaration of ‘var814’ [-Wimplicit-int]
output.c:51:72: warning: data definition has no type or storage class
   51 |   var812 = var55 % 8 ;  var813 = var812 > 0 ;  var814 = var47 [ 0 ] ;  var815 = var814 == 2 ;  var1309 = 0 ; if ( var56 ) { if ( var815 ) { var1309 = 1 ; } else { } } else { }  var816 = var1309 ;  var817 = int var528 = var816 ; if ( var528 ) {  var818 = var48 [ 0 ] ;  var1356 = var818 == 1 ;  var1454 = 0 ; if ( var1356 ) { var1454 = 1 ; } else { }  var1357 = var1454 ;  var1358 =  var819 = var1357 ;  var820 = int var529 = var819 ; if ( var529 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_46 ; } else {  var821 = var47 [ 0 ] ;  var822 = var821 == var51 ;  var823 = int var530 = var822 ; if ( var530 ) { var56 = 1 ; } else { int var531 = var56 ; if ( var531 ) { goto label_46 ; } else { goto label_46 ; } } } var55 = var55 + ( 1 ) ; goto label_45 ; } label_46:
      |                                                                        ^~~~~~
output.c:51:72: error: type defaults to ‘int’ in declaration of ‘var815’ [-Wimplicit-int]
output.c:51:81: error: initializer element is not constant
   51 |   var812 = var55 % 8 ;  var813 = var812 > 0 ;  var814 = var47 [ 0 ] ;  var815 = var814 == 2 ;  var1309 = 0 ; if ( var56 ) { if ( var815 ) { var1309 = 1 ; } else { } } else { }  var816 = var1309 ;  var817 = int var528 = var816 ; if ( var528 ) {  var818 = var48 [ 0 ] ;  var1356 = var818 == 1 ;  var1454 = 0 ; if ( var1356 ) { var1454 = 1 ; } else { }  var1357 = var1454 ;  var1358 =  var819 = var1357 ;  var820 = int var529 = var819 ; if ( var529 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_46 ; } else {  var821 = var47 [ 0 ] ;  var822 = var821 == var51 ;  var823 = int var530 = var822 ; if ( var530 ) { var56 = 1 ; } else { int var531 = var56 ; if ( var531 ) { goto label_46 ; } else { goto label_46 ; } } } var55 = var55 + ( 1 ) ; goto label_45 ; } label_46:
      |                                                                                 ^~~~~~
output.c:51:96: warning: data definition has no type or storage class
   51 |   var812 = var55 % 8 ;  var813 = var812 > 0 ;  var814 = var47 [ 0 ] ;  var815 = var814 == 2 ;  var1309 = 0 ; if ( var56 ) { if ( var815 ) { var1309 = 1 ; } else { } } else { }  var816 = var1309 ;  var817 = int var528 = var816 ; if ( var528 ) {  var818 = var48 [ 0 ] ;  var1356 = var818 == 1 ;  var1454 = 0 ; if ( var1356 ) { var1454 = 1 ; } else { }  var1357 = var1454 ;  var1358 =  var819 = var1357 ;  var820 = int var529 = var819 ; if ( var529 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_46 ; } else {  var821 = var47 [ 0 ] ;  var822 = var821 == var51 ;  var823 = int var530 = var822 ; if ( var530 ) { var56 = 1 ; } else { int var531 = var56 ; if ( var531 ) { goto label_46 ; } else { goto label_46 ; } } } var55 = var55 + ( 1 ) ; goto label_45 ; } label_46:
      |                                                                                                ^~~~~~~
output.c:51:96: error: type defaults to ‘int’ in declaration of ‘var1309’ [-Wimplicit-int]
output.c:51:110: error: expected identifier or ‘(’ before ‘if’
   51 |   var812 = var55 % 8 ;  var813 = var812 > 0 ;  var814 = var47 [ 0 ] ;  var815 = var814 == 2 ;  var1309 = 0 ; if ( var56 ) { if ( var815 ) { var1309 = 1 ; } else { } } else { }  var816 = var1309 ;  var817 = int var528 = var816 ; if ( var528 ) {  var818 = var48 [ 0 ] ;  var1356 = var818 == 1 ;  var1454 = 0 ; if ( var1356 ) { var1454 = 1 ; } else { }  var1357 = var1454 ;  var1358 =  var819 = var1357 ;  var820 = int var529 = var819 ; if ( var529 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_46 ; } else {  var821 = var47 [ 0 ] ;  var822 = var821 == var51 ;  var823 = int var530 = var822 ; if ( var530 ) { var56 = 1 ; } else { int var531 = var56 ; if ( var531 ) { goto label_46 ; } else { goto label_46 ; } } } var55 = var55 + ( 1 ) ; goto label_45 ; } label_46:
      |                                                                                                              ^~
output.c:51:168: error: expected identifier or ‘(’ before ‘else’
   51 |   var812 = var55 % 8 ;  var813 = var812 > 0 ;  var814 = var47 [ 0 ] ;  var815 = var814 == 2 ;  var1309 = 0 ; if ( var56 ) { if ( var815 ) { var1309 = 1 ; } else { } } else { }  var816 = var1309 ;  var817 = int var528 = var816 ; if ( var528 ) {  var818 = var48 [ 0 ] ;  var1356 = var818 == 1 ;  var1454 = 0 ; if ( var1356 ) { var1454 = 1 ; } else { }  var1357 = var1454 ;  var1358 =  var819 = var1357 ;  var820 = int var529 = var819 ; if ( var529 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_46 ; } else {  var821 = var47 [ 0 ] ;  var822 = var821 == var51 ;  var823 = int var530 = var822 ; if ( var530 ) { var56 = 1 ; } else { int var531 = var56 ; if ( var531 ) { goto label_46 ; } else { goto label_46 ; } } } var55 = var55 + ( 1 ) ; goto label_45 ; } label_46:
      |                                                                                                                                                                        ^~~~
output.c:51:178: warning: data definition has no type or storage class
   51 |   var812 = var55 % 8 ;  var813 = var812 > 0 ;  var814 = var47 [ 0 ] ;  var815 = var814 == 2 ;  var1309 = 0 ; if ( var56 ) { if ( var815 ) { var1309 = 1 ; } else { } } else { }  var816 = var1309 ;  var817 = int var528 = var816 ; if ( var528 ) {  var818 = var48 [ 0 ] ;  var1356 = var818 == 1 ;  var1454 = 0 ; if ( var1356 ) { var1454 = 1 ; } else { }  var1357 = var1454 ;  var1358 =  var819 = var1357 ;  var820 = int var529 = var819 ; if ( var529 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_46 ; } else {  var821 = var47 [ 0 ] ;  var822 = var821 == var51 ;  var823 = int var530 = var822 ; if ( var530 ) { var56 = 1 ; } else { int var531 = var56 ; if ( var531 ) { goto label_46 ; } else { goto label_46 ; } } } var55 = var55 + ( 1 ) ; goto label_45 ; } label_46:
      |                                                                                                                                                                                  ^~~~~~
output.c:51:178: error: type defaults to ‘int’ in declaration of ‘var816’ [-Wimplicit-int]
output.c:51:187: error: initializer element is not constant
   51 |   var812 = var55 % 8 ;  var813 = var812 > 0 ;  var814 = var47 [ 0 ] ;  var815 = var814 == 2 ;  var1309 = 0 ; if ( var56 ) { if ( var815 ) { var1309 = 1 ; } else { } } else { }  var816 = var1309 ;  var817 = int var528 = var816 ; if ( var528 ) {  var818 = var48 [ 0 ] ;  var1356 = var818 == 1 ;  var1454 = 0 ; if ( var1356 ) { var1454 = 1 ; } else { }  var1357 = var1454 ;  var1358 =  var819 = var1357 ;  var820 = int var529 = var819 ; if ( var529 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_46 ; } else {  var821 = var47 [ 0 ] ;  var822 = var821 == var51 ;  var823 = int var530 = var822 ; if ( var530 ) { var56 = 1 ; } else { int var531 = var56 ; if ( var531 ) { goto label_46 ; } else { goto label_46 ; } } } var55 = var55 + ( 1 ) ; goto label_45 ; } label_46:
      |                                                                                                                                                                                           ^~~~~~~
output.c:51:198: warning: data definition has no type or storage class
   51 |   var812 = var55 % 8 ;  var813 = var812 > 0 ;  var814 = var47 [ 0 ] ;  var815 = var814 == 2 ;  var1309 = 0 ; if ( var56 ) { if ( var815 ) { var1309 = 1 ; } else { } } else { }  var816 = var1309 ;  var817 = int var528 = var816 ; if ( var528 ) {  var818 = var48 [ 0 ] ;  var1356 = var818 == 1 ;  var1454 = 0 ; if ( var1356 ) { var1454 = 1 ; } else { }  var1357 = var1454 ;  var1358 =  var819 = var1357 ;  var820 = int var529 = var819 ; if ( var529 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_46 ; } else {  var821 = var47 [ 0 ] ;  var822 = var821 == var51 ;  var823 = int var530 = var822 ; if ( var530 ) { var56 = 1 ; } else { int var531 = var56 ; if ( var531 ) { goto label_46 ; } else { goto label_46 ; } } } var55 = var55 + ( 1 ) ; goto label_45 ; } label_46:
      |                                                                                                                                                                                                      ^~~~~~
output.c:51:198: error: type defaults to ‘int’ in declaration of ‘var817’ [-Wimplicit-int]
output.c:51:207: error: expected expression before ‘int’
   51 |   var812 = var55 % 8 ;  var813 = var812 > 0 ;  var814 = var47 [ 0 ] ;  var815 = var814 == 2 ;  var1309 = 0 ; if ( var56 ) { if ( var815 ) { var1309 = 1 ; } else { } } else { }  var816 = var1309 ;  var817 = int var528 = var816 ; if ( var528 ) {  var818 = var48 [ 0 ] ;  var1356 = var818 == 1 ;  var1454 = 0 ; if ( var1356 ) { var1454 = 1 ; } else { }  var1357 = var1454 ;  var1358 =  var819 = var1357 ;  var820 = int var529 = var819 ; if ( var529 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_46 ; } else {  var821 = var47 [ 0 ] ;  var822 = var821 == var51 ;  var823 = int var530 = var822 ; if ( var530 ) { var56 = 1 ; } else { int var531 = var56 ; if ( var531 ) { goto label_46 ; } else { goto label_46 ; } } } var55 = var55 + ( 1 ) ; goto label_45 ; } label_46:
      |                                                                                                                                                                                                               ^~~
output.c:51:229: error: expected identifier or ‘(’ before ‘if’
   51 |   var812 = var55 % 8 ;  var813 = var812 > 0 ;  var814 = var47 [ 0 ] ;  var815 = var814 == 2 ;  var1309 = 0 ; if ( var56 ) { if ( var815 ) { var1309 = 1 ; } else { } } else { }  var816 = var1309 ;  var817 = int var528 = var816 ; if ( var528 ) {  var818 = var48 [ 0 ] ;  var1356 = var818 == 1 ;  var1454 = 0 ; if ( var1356 ) { var1454 = 1 ; } else { }  var1357 = var1454 ;  var1358 =  var819 = var1357 ;  var820 = int var529 = var819 ; if ( var529 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_46 ; } else {  var821 = var47 [ 0 ] ;  var822 = var821 == var51 ;  var823 = int var530 = var822 ; if ( var530 ) { var56 = 1 ; } else { int var531 = var56 ; if ( var531 ) { goto label_46 ; } else { goto label_46 ; } } } var55 = var55 + ( 1 ) ; goto label_45 ; } label_46:
      |                                                                                                                                                                                                                                     ^~
output.c:51:534: error: expected identifier or ‘(’ before ‘else’
   51 |   var812 = var55 % 8 ;  var813 = var812 > 0 ;  var814 = var47 [ 0 ] ;  var815 = var814 == 2 ;  var1309 = 0 ; if ( var56 ) { if ( var815 ) { var1309 = 1 ; } else { } } else { }  var816 = var1309 ;  var817 = int var528 = var816 ; if ( var528 ) {  var818 = var48 [ 0 ] ;  var1356 = var818 == 1 ;  var1454 = 0 ; if ( var1356 ) { var1454 = 1 ; } else { }  var1357 = var1454 ;  var1358 =  var819 = var1357 ;  var820 = int var529 = var819 ; if ( var529 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_46 ; } else {  var821 = var47 [ 0 ] ;  var822 = var821 == var51 ;  var823 = int var530 = var822 ; if ( var530 ) { var56 = 1 ; } else { int var531 = var56 ; if ( var531 ) { goto label_46 ; } else { goto label_46 ; } } } var55 = var55 + ( 1 ) ; goto label_45 ; } label_46:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ^~~~
output.c:51:746: warning: data definition has no type or storage class
   51 |   var812 = var55 % 8 ;  var813 = var812 > 0 ;  var814 = var47 [ 0 ] ;  var815 = var814 == 2 ;  var1309 = 0 ; if ( var56 ) { if ( var815 ) { var1309 = 1 ; } else { } } else { }  var816 = var1309 ;  var817 = int var528 = var816 ; if ( var528 ) {  var818 = var48 [ 0 ] ;  var1356 = var818 == 1 ;  var1454 = 0 ; if ( var1356 ) { var1454 = 1 ; } else { }  var1357 = var1454 ;  var1358 =  var819 = var1357 ;  var820 = int var529 = var819 ; if ( var529 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_46 ; } else {  var821 = var47 [ 0 ] ;  var822 = var821 == var51 ;  var823 = int var530 = var822 ; if ( var530 ) { var56 = 1 ; } else { int var531 = var56 ; if ( var531 ) { goto label_46 ; } else { goto label_46 ; } } } var55 = var55 + ( 1 ) ; goto label_45 ; } label_46:
      |~~~~
output.c:51:746: error: type defaults to ‘int’ in declaration of ‘var55’ [-Wimplicit-int]
output.c:51:746: error: redefinition of ‘var55’
output.c:49:1004: note: previous definition of ‘var55’ with type ‘int’
   49 |   var1350 = var55 < 0 ;  var1452 = 0 ; if ( var1350 ) { var1452 = 1 ; } else { }  var1351 = var1452 ;  var1352 =  var797 = var1351 ;  var798 = var55 % 8 ;  var799 = 8 - 1 ;  var800 = var798 < var799 ;  var1307 = 0 ; if ( var797 ) { if ( var800 ) { var1307 = 1 ; } else { } } else { }  var801 = var1307 ;  var802 = var47 [ 0 ] ;  var803 = var802 == 2 ;  var1308 = 0 ; if ( var56 ) { if ( var803 ) { var1308 = 1 ; } else { } } else { }  var804 = var1308 ;  var805 = int var524 = var804 ; if ( var524 ) {  var806 = var48 [ 0 ] ;  var1353 = var806 == 1 ;  var1453 = 0 ; if ( var1353 ) { var1453 = 1 ; } else { }  var1354 = var1453 ;  var1355 =  var807 = var1354 ;  var808 = int var525 = var807 ; if ( var525 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_44 ; } else {  var809 = var47 [ 0 ] ;  var810 = var809 == var51 ;  var811 = int var526 = var810 ; if ( var526 ) { var56 = 1 ; } else { int var527 = var56 ; if ( var527 ) { goto label_44 ; } else { goto label_44 ; } } } var55 = var55 - ( 1 ) ; goto label_43 ; } label_44:
      |~~~~
output.c:51:754: error: initializer element is not constant
   51 |   var812 = var55 % 8 ;  var813 = var812 > 0 ;  var814 = var47 [ 0 ] ;  var815 = var814 == 2 ;  var1309 = 0 ; if ( var56 ) { if ( var815 ) { var1309 = 1 ; } else { } } else { }  var816 = var1309 ;  var817 = int var528 = var816 ; if ( var528 ) {  var818 = var48 [ 0 ] ;  var1356 = var818 == 1 ;  var1454 = 0 ; if ( var1356 ) { var1454 = 1 ; } else { }  var1357 = var1454 ;  var1358 =  var819 = var1357 ;  var820 = int var529 = var819 ; if ( var529 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_46 ; } else {  var821 = var47 [ 0 ] ;  var822 = var821 == var51 ;  var823 = int var530 = var822 ; if ( var530 ) { var56 = 1 ; } else { int var531 = var56 ; if ( var531 ) { goto label_46 ; } else { goto label_46 ; } } } var55 = var55 + ( 1 ) ; goto label_45 ; } label_46:
      |~~~~
output.c:51:770: error: expected identifier or ‘(’ before ‘goto’
   51 |   var812 = var55 % 8 ;  var813 = var812 > 0 ;  var814 = var47 [ 0 ] ;  var815 = var814 == 2 ;  var1309 = 0 ; if ( var56 ) { if ( var815 ) { var1309 = 1 ; } else { } } else { }  var816 = var1309 ;  var817 = int var528 = var816 ; if ( var528 ) {  var818 = var48 [ 0 ] ;  var1356 = var818 == 1 ;  var1454 = 0 ; if ( var1356 ) { var1454 = 1 ; } else { }  var1357 = var1454 ;  var1358 =  var819 = var1357 ;  var820 = int var529 = var819 ; if ( var529 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_46 ; } else {  var821 = var47 [ 0 ] ;  var822 = var821 == var51 ;  var823 = int var530 = var822 ; if ( var530 ) { var56 = 1 ; } else { int var531 = var56 ; if ( var531 ) { goto label_46 ; } else { goto label_46 ; } } } var55 = var55 + ( 1 ) ; goto label_45 ; } label_46:
      |~~~
output.c:51:786: error: expected identifier or ‘(’ before ‘}’ token
   51 |   var812 = var55 % 8 ;  var813 = var812 > 0 ;  var814 = var47 [ 0 ] ;  var815 = var814 == 2 ;  var1309 = 0 ; if ( var56 ) { if ( var815 ) { var1309 = 1 ; } else { } } else { }  var816 = var1309 ;  var817 = int var528 = var816 ; if ( var528 ) {  var818 = var48 [ 0 ] ;  var1356 = var818 == 1 ;  var1454 = 0 ; if ( var1356 ) { var1454 = 1 ; } else { }  var1357 = var1454 ;  var1358 =  var819 = var1357 ;  var820 = int var529 = var819 ; if ( var529 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_46 ; } else {  var821 = var47 [ 0 ] ;  var822 = var821 == var51 ;  var823 = int var530 = var822 ; if ( var530 ) { var56 = 1 ; } else { int var531 = var56 ; if ( var531 ) { goto label_46 ; } else { goto label_46 ; } } } var55 = var55 + ( 1 ) ; goto label_45 ; } label_46:
      |
output.c:51:796: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘:’ token
   51 |   var812 = var55 % 8 ;  var813 = var812 > 0 ;  var814 = var47 [ 0 ] ;  var815 = var814 == 2 ;  var1309 = 0 ; if ( var56 ) { if ( var815 ) { var1309 = 1 ; } else { } } else { }  var816 = var1309 ;  var817 = int var528 = var816 ; if ( var528 ) {  var818 = var48 [ 0 ] ;  var1356 = var818 == 1 ;  var1454 = 0 ; if ( var1356 ) { var1454 = 1 ; } else { }  var1357 = var1454 ;  var1358 =  var819 = var1357 ;  var820 = int var529 = var819 ; if ( var529 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_46 ; } else {  var821 = var47 [ 0 ] ;  var822 = var821 == var51 ;  var823 = int var530 = var822 ; if ( var530 ) { var56 = 1 ; } else { int var531 = var56 ; if ( var531 ) { goto label_46 ; } else { goto label_46 ; } } } var55 = var55 + ( 1 ) ; goto label_45 ; } label_46:
      |
output.c:52:25: warning: data definition has no type or storage class
   52 |   var824 = var54 + 1 ;  var825 = var824 - 8 ;  var826 = var55 = var825 ; var56 = 0 ; label_47:
      |                         ^~~~~~
output.c:52:25: error: type defaults to ‘int’ in declaration of ‘var825’ [-Wimplicit-int]
output.c:52:34: error: ‘var824’ undeclared here (not in a function); did you mean ‘var825’?
   52 |   var824 = var54 + 1 ;  var825 = var824 - 8 ;  var826 = var55 = var825 ; var56 = 0 ; label_47:
      |                                  ^~~~~~
      |                                  var825
output.c:52:48: warning: data definition has no type or storage class
   52 |   var824 = var54 + 1 ;  var825 = var824 - 8 ;  var826 = var55 = var825 ; var56 = 0 ; label_47:
      |                                                ^~~~~~
output.c:52:48: error: type defaults to ‘int’ in declaration of ‘var826’ [-Wimplicit-int]
output.c:52:57: error: initializer element is not constant
   52 |   var824 = var54 + 1 ;  var825 = var824 - 8 ;  var826 = var55 = var825 ; var56 = 0 ; label_47:
      |                                                         ^~~~~
output.c:52:74: warning: data definition has no type or storage class
   52 |   var824 = var54 + 1 ;  var825 = var824 - 8 ;  var826 = var55 = var825 ; var56 = 0 ; label_47:
      |                                                                          ^~~~~
output.c:52:74: error: type defaults to ‘int’ in declaration of ‘var56’ [-Wimplicit-int]
output.c:52:74: error: redefinition of ‘var56’
output.c:48:22: note: previous definition of ‘var56’ with type ‘int’
   48 |  var55 = var54 - 1 ; var56 = 0 ; label_43:
      |                      ^~~~~
output.c:52:94: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘:’ token
   52 |   var824 = var54 + 1 ;  var825 = var824 - 8 ;  var826 = var55 = var825 ; var56 = 0 ; label_47:
      |                                                                                              ^
output.c:53:26: warning: data definition has no type or storage class
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |                          ^~~~~~~
output.c:53:26: error: type defaults to ‘int’ in declaration of ‘var1455’ [-Wimplicit-int]
output.c:53:40: error: expected identifier or ‘(’ before ‘if’
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |                                        ^~
output.c:53:73: error: expected identifier or ‘(’ before ‘else’
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |                                                                         ^~~~
output.c:53:83: warning: data definition has no type or storage class
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |                                                                                   ^~~~~~~
output.c:53:83: error: type defaults to ‘int’ in declaration of ‘var1360’ [-Wimplicit-int]
output.c:53:93: error: initializer element is not constant
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |                                                                                             ^~~~~~~
output.c:53:104: warning: data definition has no type or storage class
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |                                                                                                        ^~~~~~~
output.c:53:104: error: type defaults to ‘int’ in declaration of ‘var1361’ [-Wimplicit-int]
output.c:53:115: error: ‘var827’ undeclared here (not in a function); did you mean ‘var826’?
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |                                                                                                                   ^~~~~~
      |                                                                                                                   var826
output.c:53:135: warning: data definition has no type or storage class
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |                                                                                                                                       ^~~~~~
output.c:53:135: error: type defaults to ‘int’ in declaration of ‘var828’ [-Wimplicit-int]
output.c:53:144: error: initializer element is not constant
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |                                                                                                                                                ^~~~~
output.c:53:157: warning: data definition has no type or storage class
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |                                                                                                                                                             ^~~~~~
output.c:53:157: error: type defaults to ‘int’ in declaration of ‘var829’ [-Wimplicit-int]
output.c:53:166: error: initializer element is not constant
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |                                                                                                                                                                      ^~~~~~
output.c:53:180: warning: data definition has no type or storage class
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |                                                                                                                                                                                    ^~~~~~~
output.c:53:180: error: type defaults to ‘int’ in declaration of ‘var1310’ [-Wimplicit-int]
output.c:53:194: error: expected identifier or ‘(’ before ‘if’
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |                                                                                                                                                                                                  ^~
output.c:53:253: error: expected identifier or ‘(’ before ‘else’
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |                                                                                                                                                                                                                                                             ^~~~
output.c:53:263: warning: data definition has no type or storage class
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |                                                                                                                                                                                                                                                                       ^~~~~~
output.c:53:263: error: type defaults to ‘int’ in declaration of ‘var830’ [-Wimplicit-int]
output.c:53:272: error: initializer element is not constant
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |                                                                                                                                                                                                                                                                                ^~~~~~~
output.c:53:283: warning: data definition has no type or storage class
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |                                                                                                                                                                                                                                                                                           ^~~~~~
output.c:53:283: error: type defaults to ‘int’ in declaration of ‘var831’ [-Wimplicit-int]
output.c:53:307: warning: data definition has no type or storage class
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |                                                                                                                                                                                                                                                                                                                   ^~~~~~
output.c:53:307: error: type defaults to ‘int’ in declaration of ‘var832’ [-Wimplicit-int]
output.c:53:316: error: initializer element is not constant
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |                                                                                                                                                                                                                                                                                                                            ^~~~~~
output.c:53:331: warning: data definition has no type or storage class
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |                                                                                                                                                                                                                                                                                                                                           ^~~~~~~
output.c:53:331: error: type defaults to ‘int’ in declaration of ‘var1311’ [-Wimplicit-int]
output.c:53:345: error: expected identifier or ‘(’ before ‘if’
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |                                                                                                                                                                                                                                                                                                                                                         ^~
output.c:53:403: error: expected identifier or ‘(’ before ‘else’
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |                                                                                                                                                                                                                                                                                                                                                                                                                   ^~~~
output.c:53:413: warning: data definition has no type or storage class
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |                                                                                                                                                                                                                                                                                                                                                                                                                             ^~~~~~
output.c:53:413: error: type defaults to ‘int’ in declaration of ‘var833’ [-Wimplicit-int]
output.c:53:422: error: initializer element is not constant
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                      ^~~~~~~
output.c:53:433: warning: data definition has no type or storage class
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^~~~~~
output.c:53:433: error: type defaults to ‘int’ in declaration of ‘var834’ [-Wimplicit-int]
output.c:53:442: error: expected expression before ‘int’
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                          ^~~
output.c:53:464: error: expected identifier or ‘(’ before ‘if’
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ^~
output.c:53:769: error: expected identifier or ‘(’ before ‘else’
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |~~~
output.c:53:982: warning: data definition has no type or storage class
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |~~~~~
output.c:53:982: error: type defaults to ‘int’ in declaration of ‘var841’ [-Wimplicit-int]
output.c:53:1000: warning: data definition has no type or storage class
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |~~~~~
output.c:53:1000: error: type defaults to ‘int’ in declaration of ‘var842’ [-Wimplicit-int]
output.c:53:1009: error: initializer element is not constant
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^~~~~
output.c:53:1027: warning: data definition has no type or storage class
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |~~~~~
output.c:53:1027: error: type defaults to ‘int’ in declaration of ‘var843’ [-Wimplicit-int]
output.c:53:1036: error: initializer element is not constant
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |~~~~
output.c:53:1053: error: expected identifier or ‘(’ before ‘goto’
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |~~~
output.c:53:1069: error: expected identifier or ‘(’ before ‘}’ token
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ^
output.c:53:1079: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘:’ token
   53 |   var1359 = var55 < 0 ;  var1455 = 0 ; if ( var1359 ) { var1455 = 1 ; } else { }  var1360 = var1455 ;  var1361 =  var827 = var1360 ;  var828 = var55 % 8 ;  var829 = var828 > 0 ;  var1310 = 0 ; if ( var827 ) { if ( var829 ) { var1310 = 1 ; } else { } } else { }  var830 = var1310 ;  var831 = var47 [ 0 ] ;  var832 = var831 == 2 ;  var1311 = 0 ; if ( var56 ) { if ( var832 ) { var1311 = 1 ; } else { } } else { }  var833 = var1311 ;  var834 = int var532 = var833 ; if ( var532 ) {  var835 = var48 [ 0 ] ;  var1362 = var835 == 1 ;  var1456 = 0 ; if ( var1362 ) { var1456 = 1 ; } else { }  var1363 = var1456 ;  var1364 =  var836 = var1363 ;  var837 = int var533 = var836 ; if ( var533 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_48 ; } else {  var838 = var47 [ 0 ] ;  var839 = var838 == var51 ;  var840 = int var534 = var839 ; if ( var534 ) { var56 = 1 ; } else { int var535 = var56 ; if ( var535 ) { goto label_48 ; } else { goto label_48 ; } } }  var841 = 1 - 8 ;  var842 = var55 + var841 ;  var843 = var55 = var842 ; goto label_47 ; } label_48:
      |
output.c:54:25: warning: data definition has no type or storage class
   54 |   var844 = var54 + 1 ;  var845 = var844 + 8 ;  var846 = var55 = var845 ; var56 = 0 ; label_49:
      |                         ^~~~~~
output.c:54:25: error: type defaults to ‘int’ in declaration of ‘var845’ [-Wimplicit-int]
output.c:54:34: error: ‘var844’ undeclared here (not in a function); did you mean ‘var845’?
   54 |   var844 = var54 + 1 ;  var845 = var844 + 8 ;  var846 = var55 = var845 ; var56 = 0 ; label_49:
      |                                  ^~~~~~
      |                                  var845
output.c:54:48: warning: data definition has no type or storage class
   54 |   var844 = var54 + 1 ;  var845 = var844 + 8 ;  var846 = var55 = var845 ; var56 = 0 ; label_49:
      |                                                ^~~~~~
output.c:54:48: error: type defaults to ‘int’ in declaration of ‘var846’ [-Wimplicit-int]
output.c:54:57: error: initializer element is not constant
   54 |   var844 = var54 + 1 ;  var845 = var844 + 8 ;  var846 = var55 = var845 ; var56 = 0 ; label_49:
      |                                                         ^~~~~
output.c:54:74: warning: data definition has no type or storage class
   54 |   var844 = var54 + 1 ;  var845 = var844 + 8 ;  var846 = var55 = var845 ; var56 = 0 ; label_49:
      |                                                                          ^~~~~
output.c:54:74: error: type defaults to ‘int’ in declaration of ‘var56’ [-Wimplicit-int]
output.c:54:74: error: redefinition of ‘var56’
output.c:48:22: note: previous definition of ‘var56’ with type ‘int’
   48 |  var55 = var54 - 1 ; var56 = 0 ; label_43:
      |                      ^~~~~
output.c:54:94: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘:’ token
   54 |   var844 = var54 + 1 ;  var845 = var844 + 8 ;  var846 = var55 = var845 ; var56 = 0 ; label_49:
      |                                                                                              ^
output.c:55:21: warning: data definition has no type or storage class
   55 |   var847 = 8 * 8 ;  var848 = var55 < var847 ;  var849 = var55 % 8 ;  var850 = var849 > 0 ;  var1312 = 0 ; if ( var848 ) { if ( var850 ) { var1312 = 1 ; } else { } } else { }  var851 = var1312 ;  var852 = var47 [ 0 ] ;  var853 = var852 == 2 ;  var1313 = 0 ; if ( var56 ) { if ( var853 ) { var1313 = 1 ; } else { } } else { }  var854 = var1313 ;  var855 = int var536 = var854 ; if ( var536 ) {  var856 = var48 [ 0 ] ;  var1365 = var856 == 1 ;  var1457 = 0 ; if ( var1365 ) { var1457 = 1 ; } else { }  var1366 = var1457 ;  var1367 =  var857 = var1366 ;  var858 = int var537 = var857 ; if ( var537 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_50 ; } else {  var859 = var47 [ 0 ] ;  var860 = var859 == var51 ;  var861 = int var538 = var860 ; if ( var538 ) { var56 = 1 ; } else { int var539 = var56 ; if ( var539 ) { goto label_50 ; } else { goto label_50 ; } } }  var862 = 1 + 8 ;  var863 = var55 + var862 ;  var864 = var55 = var863 ; goto label_49 ; } label_50:
      |                     ^~~~~~
output.c:55:21: error: type defaults to ‘int’ in declaration of ‘var848’ [-Wimplicit-int]
output.c:55:38: error: ‘var847’ undeclared here (not in a function); did you mean ‘var848’?
   55 |   var847 = 8 * 8 ;  var848 = var55 < var847 ;  var849 = var55 % 8 ;  var850 = var849 > 0 ;  var1312 = 0 ; if ( var848 ) { if ( var850 ) { var1312 = 1 ; } else { } } else { }  var851 = var1312 ;  var852 = var47 [ 0 ] ;  var853 = var852 == 2 ;  var1313 = 0 ; if ( var56 ) { if ( var853 ) { var1313 = 1 ; } else { } } else { }  var854 = var1313 ;  var855 = int var536 = var854 ; if ( var536 ) {  var856 = var48 [ 0 ] ;  var1365 = var856 == 1 ;  var1457 = 0 ; if ( var1365 ) { var1457 = 1 ; } else { }  var1366 = var1457 ;  var1367 =  var857 = var1366 ;  var858 = int var537 = var857 ; if ( var537 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_50 ; } else {  var859 = var47 [ 0 ] ;  var860 = var859 == var51 ;  var861 = int var538 = var860 ; if ( var538 ) { var56 = 1 ; } else { int var539 = var56 ; if ( var539 ) { goto label_50 ; } else { goto label_50 ; } } }  var862 = 1 + 8 ;  var863 = var55 + var862 ;  var864 = var55 = var863 ; goto label_49 ; } label_50:
      |                                      ^~~~~~
      |                                      var848
output.c:55:48: warning: data definition has no type or storage class
   55 |   var847 = 8 * 8 ;  var848 = var55 < var847 ;  var849 = var55 % 8 ;  var850 = var849 > 0 ;  var1312 = 0 ; if ( var848 ) { if ( var850 ) { var1312 = 1 ; } else { } } else { }  var851 = var1312 ;  var852 = var47 [ 0 ] ;  var853 = var852 == 2 ;  var1313 = 0 ; if ( var56 ) { if ( var853 ) { var1313 = 1 ; } else { } } else { }  var854 = var1313 ;  var855 = int var536 = var854 ; if ( var536 ) {  var856 = var48 [ 0 ] ;  var1365 = var856 == 1 ;  var1457 = 0 ; if ( var1365 ) { var1457 = 1 ; } else { }  var1366 = var1457 ;  var1367 =  var857 = var1366 ;  var858 = int var537 = var857 ; if ( var537 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_50 ; } else {  var859 = var47 [ 0 ] ;  var860 = var859 == var51 ;  var861 = int var538 = var860 ; if ( var538 ) { var56 = 1 ; } else { int var539 = var56 ; if ( var539 ) { goto label_50 ; } else { goto label_50 ; } } }  var862 = 1 + 8 ;  var863 = var55 + var862 ;  var864 = var55 = var863 ; goto label_49 ; } label_50:
      |                                                ^~~~~~
output.c:55:48: error: type defaults to ‘int’ in declaration of ‘var849’ [-Wimplicit-int]
output.c:55:57: error: initializer element is not constant
   55 |   var847 = 8 * 8 ;  var848 = var55 < var847 ;  var849 = var55 % 8 ;  var850 = var849 > 0 ;  var1312 = 0 ; if ( var848 ) { if ( var850 ) { var1312 = 1 ; } else { } } else { }  var851 = var1312 ;  var852 = var47 [ 0 ] ;  var853 = var852 == 2 ;  var1313 = 0 ; if ( var56 ) { if ( var853 ) { var1313 = 1 ; } else { } } else { }  var854 = var1313 ;  var855 = int var536 = var854 ; if ( var536 ) {  var856 = var48 [ 0 ] ;  var1365 = var856 == 1 ;  var1457 = 0 ; if ( var1365 ) { var1457 = 1 ; } else { }  var1366 = var1457 ;  var1367 =  var857 = var1366 ;  var858 = int var537 = var857 ; if ( var537 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_50 ; } else {  var859 = var47 [ 0 ] ;  var860 = var859 == var51 ;  var861 = int var538 = var860 ; if ( var538 ) { var56 = 1 ; } else { int var539 = var56 ; if ( var539 ) { goto label_50 ; } else { goto label_50 ; } } }  var862 = 1 + 8 ;  var863 = var55 + var862 ;  var864 = var55 = var863 ; goto label_49 ; } label_50:
      |                                                         ^~~~~
output.c:55:70: warning: data definition has no type or storage class
   55 |   var847 = 8 * 8 ;  var848 = var55 < var847 ;  var849 = var55 % 8 ;  var850 = var849 > 0 ;  var1312 = 0 ; if ( var848 ) { if ( var850 ) { var1312 = 1 ; } else { } } else { }  var851 = var1312 ;  var852 = var47 [ 0 ] ;  var853 = var852 == 2 ;  var1313 = 0 ; if ( var56 ) { if ( var853 ) { var1313 = 1 ; } else { } } else { }  var854 = var1313 ;  var855 = int var536 = var854 ; if ( var536 ) {  var856 = var48 [ 0 ] ;  var1365 = var856 == 1 ;  var1457 = 0 ; if ( var1365 ) { var1457 = 1 ; } else { }  var1366 = var1457 ;  var1367 =  var857 = var1366 ;  var858 = int var537 = var857 ; if ( var537 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_50 ; } else {  var859 = var47 [ 0 ] ;  var860 = var859 == var51 ;  var861 = int var538 = var860 ; if ( var538 ) { var56 = 1 ; } else { int var539 = var56 ; if ( var539 ) { goto label_50 ; } else { goto label_50 ; } } }  var862 = 1 + 8 ;  var863 = var55 + var862 ;  var864 = var55 = var863 ; goto label_49 ; } label_50:
      |                                                                      ^~~~~~
output.c:55:70: error: type defaults to ‘int’ in declaration of ‘var850’ [-Wimplicit-int]
output.c:55:79: error: initializer element is not constant
   55 |   var847 = 8 * 8 ;  var848 = var55 < var847 ;  var849 = var55 % 8 ;  var850 = var849 > 0 ;  var1312 = 0 ; if ( var848 ) { if ( var850 ) { var1312 = 1 ; } else { } } else { }  var851 = var1312 ;  var852 = var47 [ 0 ] ;  var853 = var852 == 2 ;  var1313 = 0 ; if ( var56 ) { if ( var853 ) { var1313 = 1 ; } else { } } else { }  var854 = var1313 ;  var855 = int var536 = var854 ; if ( var536 ) {  var856 = var48 [ 0 ] ;  var1365 = var856 == 1 ;  var1457 = 0 ; if ( var1365 ) { var1457 = 1 ; } else { }  var1366 = var1457 ;  var1367 =  var857 = var1366 ;  var858 = int var537 = var857 ; if ( var537 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_50 ; } else {  var859 = var47 [ 0 ] ;  var860 = var859 == var51 ;  var861 = int var538 = var860 ; if ( var538 ) { var56 = 1 ; } else { int var539 = var56 ; if ( var539 ) { goto label_50 ; } else { goto label_50 ; } } }  var862 = 1 + 8 ;  var863 = var55 + var862 ;  var864 = var55 = var863 ; goto label_49 ; } label_50:
      |                                                                               ^~~~~~
output.c:55:93: warning: data definition has no type or storage class
   55 |   var847 = 8 * 8 ;  var848 = var55 < var847 ;  var849 = var55 % 8 ;  var850 = var849 > 0 ;  var1312 = 0 ; if ( var848 ) { if ( var850 ) { var1312 = 1 ; } else { } } else { }  var851 = var1312 ;  var852 = var47 [ 0 ] ;  var853 = var852 == 2 ;  var1313 = 0 ; if ( var56 ) { if ( var853 ) { var1313 = 1 ; } else { } } else { }  var854 = var1313 ;  var855 = int var536 = var854 ; if ( var536 ) {  var856 = var48 [ 0 ] ;  var1365 = var856 == 1 ;  var1457 = 0 ; if ( var1365 ) { var1457 = 1 ; } else { }  var1366 = var1457 ;  var1367 =  var857 = var1366 ;  var858 = int var537 = var857 ; if ( var537 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_50 ; } else {  var859 = var47 [ 0 ] ;  var860 = var859 == var51 ;  var861 = int var538 = var860 ; if ( var538 ) { var56 = 1 ; } else { int var539 = var56 ; if ( var539 ) { goto label_50 ; } else { goto label_50 ; } } }  var862 = 1 + 8 ;  var863 = var55 + var862 ;  var864 = var55 = var863 ; goto label_49 ; } label_50:
      |                                                                                             ^~~~~~~
output.c:55:93: error: type defaults to ‘int’ in declaration of ‘var1312’ [-Wimplicit-int]
output.c:55:107: error: expected identifier or ‘(’ before ‘if’
   55 |   var847 = 8 * 8 ;  var848 = var55 < var847 ;  var849 = var55 % 8 ;  var850 = var849 > 0 ;  var1312 = 0 ; if ( var848 ) { if ( var850 ) { var1312 = 1 ; } else { } } else { }  var851 = var1312 ;  var852 = var47 [ 0 ] ;  var853 = var852 == 2 ;  var1313 = 0 ; if ( var56 ) { if ( var853 ) { var1313 = 1 ; } else { } } else { }  var854 = var1313 ;  var855 = int var536 = var854 ; if ( var536 ) {  var856 = var48 [ 0 ] ;  var1365 = var856 == 1 ;  var1457 = 0 ; if ( var1365 ) { var1457 = 1 ; } else { }  var1366 = var1457 ;  var1367 =  var857 = var1366 ;  var858 = int var537 = var857 ; if ( var537 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_50 ; } else {  var859 = var47 [ 0 ] ;  var860 = var859 == var51 ;  var861 = int var538 = var860 ; if ( var538 ) { var56 = 1 ; } else { int var539 = var56 ; if ( var539 ) { goto label_50 ; } else { goto label_50 ; } } }  var862 = 1 + 8 ;  var863 = var55 + var862 ;  var864 = var55 = var863 ; goto label_49 ; } label_50:
      |                                                                                                           ^~
output.c:55:166: error: expected identifier or ‘(’ before ‘else’
   55 |   var847 = 8 * 8 ;  var848 = var55 < var847 ;  var849 = var55 % 8 ;  var850 = var849 > 0 ;  var1312 = 0 ; if ( var848 ) { if ( var850 ) { var1312 = 1 ; } else { } } else { }  var851 = var1312 ;  var852 = var47 [ 0 ] ;  var853 = var852 == 2 ;  var1313 = 0 ; if ( var56 ) { if ( var853 ) { var1313 = 1 ; } else { } } else { }  var854 = var1313 ;  var855 = int var536 = var854 ; if ( var536 ) {  var856 = var48 [ 0 ] ;  var1365 = var856 == 1 ;  var1457 = 0 ; if ( var1365 ) { var1457 = 1 ; } else { }  var1366 = var1457 ;  var1367 =  var857 = var1366 ;  var858 = int var537 = var857 ; if ( var537 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_50 ; } else {  var859 = var47 [ 0 ] ;  var860 = var859 == var51 ;  var861 = int var538 = var860 ; if ( var538 ) { var56 = 1 ; } else { int var539 = var56 ; if ( var539 ) { goto label_50 ; } else { goto label_50 ; } } }  var862 = 1 + 8 ;  var863 = var55 + var862 ;  var864 = var55 = var863 ; goto label_49 ; } label_50:
      |                                                                                                                                                                      ^~~~
output.c:55:176: warning: data definition has no type or storage class
   55 |   var847 = 8 * 8 ;  var848 = var55 < var847 ;  var849 = var55 % 8 ;  var850 = var849 > 0 ;  var1312 = 0 ; if ( var848 ) { if ( var850 ) { var1312 = 1 ; } else { } } else { }  var851 = var1312 ;  var852 = var47 [ 0 ] ;  var853 = var852 == 2 ;  var1313 = 0 ; if ( var56 ) { if ( var853 ) { var1313 = 1 ; } else { } } else { }  var854 = var1313 ;  var855 = int var536 = var854 ; if ( var536 ) {  var856 = var48 [ 0 ] ;  var1365 = var856 == 1 ;  var1457 = 0 ; if ( var1365 ) { var1457 = 1 ; } else { }  var1366 = var1457 ;  var1367 =  var857 = var1366 ;  var858 = int var537 = var857 ; if ( var537 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_50 ; } else {  var859 = var47 [ 0 ] ;  var860 = var859 == var51 ;  var861 = int var538 = var860 ; if ( var538 ) { var56 = 1 ; } else { int var539 = var56 ; if ( var539 ) { goto label_50 ; } else { goto label_50 ; } } }  var862 = 1 + 8 ;  var863 = var55 + var862 ;  var864 = var55 = var863 ; goto label_49 ; } label_50:
      |                                                                                                                                                                                ^~~~~~
output.c:55:176: error: type defaults to ‘int’ in declaration of ‘var851’ [-Wimplicit-int]
output.c:55:185: error: initializer element is not constant
   55 |   var847 = 8 * 8 ;  var848 = var55 < var847 ;  var849 = var55 % 8 ;  var850 = var849 > 0 ;  var1312 = 0 ; if ( var848 ) { if ( var850 ) { var1312 = 1 ; } else { } } else { }  var851 = var1312 ;  var852 = var47 [ 0 ] ;  var853 = var852 == 2 ;  var1313 = 0 ; if ( var56 ) { if ( var853 ) { var1313 = 1 ; } else { } } else { }  var854 = var1313 ;  var855 = int var536 = var854 ; if ( var536 ) {  var856 = var48 [ 0 ] ;  var1365 = var856 == 1 ;  var1457 = 0 ; if ( var1365 ) { var1457 = 1 ; } else { }  var1366 = var1457 ;  var1367 =  var857 = var1366 ;  var858 = int var537 = var857 ; if ( var537 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_50 ; } else {  var859 = var47 [ 0 ] ;  var860 = var859 == var51 ;  var861 = int var538 = var860 ; if ( var538 ) { var56 = 1 ; } else { int var539 = var56 ; if ( var539 ) { goto label_50 ; } else { goto label_50 ; } } }  var862 = 1 + 8 ;  var863 = var55 + var862 ;  var864 = var55 = var863 ; goto label_49 ; } label_50:
      |                                                                                                                                                                                         ^~~~~~~
output.c:55:196: warning: data definition has no type or storage class
   55 |   var847 = 8 * 8 ;  var848 = var55 < var847 ;  var849 = var55 % 8 ;  var850 = var849 > 0 ;  var1312 = 0 ; if ( var848 ) { if ( var850 ) { var1312 = 1 ; } else { } } else { }  var851 = var1312 ;  var852 = var47 [ 0 ] ;  var853 = var852 == 2 ;  var1313 = 0 ; if ( var56 ) { if ( var853 ) { var1313 = 1 ; } else { } } else { }  var854 = var1313 ;  var855 = int var536 = var854 ; if ( var536 ) {  var856 = var48 [ 0 ] ;  var1365 = var856 == 1 ;  var1457 = 0 ; if ( var1365 ) { var1457 = 1 ; } else { }  var1366 = var1457 ;  var1367 =  var857 = var1366 ;  var858 = int var537 = var857 ; if ( var537 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_50 ; } else {  var859 = var47 [ 0 ] ;  var860 = var859 == var51 ;  var861 = int var538 = var860 ; if ( var538 ) { var56 = 1 ; } else { int var539 = var56 ; if ( var539 ) { goto label_50 ; } else { goto label_50 ; } } }  var862 = 1 + 8 ;  var863 = var55 + var862 ;  var864 = var55 = var863 ; goto label_49 ; } label_50:
      |                                                                                                                                                                                                    ^~~~~~
output.c:55:196: error: type defaults to ‘int’ in declaration of ‘var852’ [-Wimplicit-int]
output.c:55:220: warning: data definition has no type or storage class
   55 |   var847 = 8 * 8 ;  var848 = var55 < var847 ;  var849 = var55 % 8 ;  var850 = var849 > 0 ;  var1312 = 0 ; if ( var848 ) { if ( var850 ) { var1312 = 1 ; } else { } } else { }  var851 = var1312 ;  var852 = var47 [ 0 ] ;  var853 = var852 == 2 ;  var1313 = 0 ; if ( var56 ) { if ( var853 ) { var1313 = 1 ; } else { } } else { }  var854 = var1313 ;  var855 = int var536 = var854 ; if ( var536 ) {  var856 = var48 [ 0 ] ;  var1365 = var856 == 1 ;  var1457 = 0 ; if ( var1365 ) { var1457 = 1 ; } else { }  var1366 = var1457 ;  var1367 =  var857 = var1366 ;  var858 = int var537 = var857 ; if ( var537 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_50 ; } else {  var859 = var47 [ 0 ] ;  var860 = var859 == var51 ;  var861 = int var538 = var860 ; if ( var538 ) { var56 = 1 ; } else { int var539 = var56 ; if ( var539 ) { goto label_50 ; } else { goto label_50 ; } } }  var862 = 1 + 8 ;  var863 = var55 + var862 ;  var864 = var55 = var863 ; goto label_49 ; } label_50:
      |                                                                                                                                                                                                                            ^~~~~~
output.c:55:220: error: type defaults to ‘int’ in declaration of ‘var853’ [-Wimplicit-int]
output.c:55:229: error: initializer element is not constant
   55 |   var847 = 8 * 8 ;  var848 = var55 < var847 ;  var849 = var55 % 8 ;  var850 = var849 > 0 ;  var1312 = 0 ; if ( var848 ) { if ( var850 ) { var1312 = 1 ; } else { } } else { }  var851 = var1312 ;  var852 = var47 [ 0 ] ;  var853 = var852 == 2 ;  var1313 = 0 ; if ( var56 ) { if ( var853 ) { var1313 = 1 ; } else { } } else { }  var854 = var1313 ;  var855 = int var536 = var854 ; if ( var536 ) {  var856 = var48 [ 0 ] ;  var1365 = var856 == 1 ;  var1457 = 0 ; if ( var1365 ) { var1457 = 1 ; } else { }  var1366 = var1457 ;  var1367 =  var857 = var1366 ;  var858 = int var537 = var857 ; if ( var537 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_50 ; } else {  var859 = var47 [ 0 ] ;  var860 = var859 == var51 ;  var861 = int var538 = var860 ; if ( var538 ) { var56 = 1 ; } else { int var539 = var56 ; if ( var539 ) { goto label_50 ; } else { goto label_50 ; } } }  var862 = 1 + 8 ;  var863 = var55 + var862 ;  var864 = var55 = var863 ; goto label_49 ; } label_50:
      |                                                                                                                                                                                                                                     ^~~~~~
output.c:55:244: warning: data definition has no type or storage class
   55 |   var847 = 8 * 8 ;  var848 = var55 < var847 ;  var849 = var55 % 8 ;  var850 = var849 > 0 ;  var1312 = 0 ; if ( var848 ) { if ( var850 ) { var1312 = 1 ; } else { } } else { }  var851 = var1312 ;  var852 = var47 [ 0 ] ;  var853 = var852 == 2 ;  var1313 = 0 ; if ( var56 ) { if ( var853 ) { var1313 = 1 ; } else { } } else { }  var854 = var1313 ;  var855 = int var536 = var854 ; if ( var536 ) {  var856 = var48 [ 0 ] ;  var1365 = var856 == 1 ;  var1457 = 0 ; if ( var1365 ) { var1457 = 1 ; } else { }  var1366 = var1457 ;  var1367 =  var857 = var1366 ;  var858 = int var537 = var857 ; if ( var537 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_50 ; } else {  var859 = var47 [ 0 ] ;  var860 = var859 == var51 ;  var861 = int var538 = var860 ; if ( var538 ) { var56 = 1 ; } else { int var539 = var56 ; if ( var539 ) { goto label_50 ; } else { goto label_50 ; } } }  var862 = 1 + 8 ;  var863 = var55 + var862 ;  var864 = var55 = var863 ; goto label_49 ; } label_50:
      |                                                                                                                                                                                                                                                    ^~~~~~~
output.c:55:244: error: type defaults to ‘int’ in declaration of ‘var1313’ [-Wimplicit-int]
output.c:55:258: error: expected identifier or ‘(’ before ‘if’
   55 |   var847 = 8 * 8 ;  var848 = var55 < var847 ;  var849 = var55 % 8 ;  var850 = var849 > 0 ;  var1312 = 0 ; if ( var848 ) { if ( var850 ) { var1312 = 1 ; } else { } } else { }  var851 = var1312 ;  var852 = var47 [ 0 ] ;  var853 = var852 == 2 ;  var1313 = 0 ; if ( var56 ) { if ( var853 ) { var1313 = 1 ; } else { } } else { }  var854 = var1313 ;  var855 = int var536 = var854 ; if ( var536 ) {  var856 = var48 [ 0 ] ;  var1365 = var856 == 1 ;  var1457 = 0 ; if ( var1365 ) { var1457 = 1 ; } else { }  var1366 = var1457 ;  var1367 =  var857 = var1366 ;  var858 = int var537 = var857 ; if ( var537 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_50 ; } else {  var859 = var47 [ 0 ] ;  var860 = var859 == var51 ;  var861 = int var538 = var860 ; if ( var538 ) { var56 = 1 ; } else { int var539 = var56 ; if ( var539 ) { goto label_50 ; } else { goto label_50 ; } } }  var862 = 1 + 8 ;  var863 = var55 + var862 ;  var864 = var55 = var863 ; goto label_49 ; } label_50:
      |                                                                                                                                                                                                                                                                  ^~
output.c:55:316: error: expected identifier or ‘(’ before ‘else’
   55 |   var847 = 8 * 8 ;  var848 = var55 < var847 ;  var849 = var55 % 8 ;  var850 = var849 > 0 ;  var1312 = 0 ; if ( var848 ) { if ( var850 ) { var1312 = 1 ; } else { } } else { }  var851 = var1312 ;  var852 = var47 [ 0 ] ;  var853 = var852 == 2 ;  var1313 = 0 ; if ( var56 ) { if ( var853 ) { var1313 = 1 ; } else { } } else { }  var854 = var1313 ;  var855 = int var536 = var854 ; if ( var536 ) {  var856 = var48 [ 0 ] ;  var1365 = var856 == 1 ;  var1457 = 0 ; if ( var1365 ) { var1457 = 1 ; } else { }  var1366 = var1457 ;  var1367 =  var857 = var1366 ;  var858 = int var537 = var857 ; if ( var537 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_50 ; } else {  var859 = var47 [ 0 ] ;  var860 = var859 == var51 ;  var861 = int var538 = var860 ; if ( var538 ) { var56 = 1 ; } else { int var539 = var56 ; if ( var539 ) { goto label_50 ; } else { goto label_50 ; } } }  var862 = 1 + 8 ;  var863 = var55 + var862 ;  var864 = var55 = var863 ; goto label_49 ; } label_50:
      |                                                                                                                                                                                                                                                                                                                            ^~~~
output.c:55:326: warning: data definition has no type or storage class
   55 |   var847 = 8 * 8 ;  var848 = var55 < var847 ;  var849 = var55 % 8 ;  var850 = var849 > 0 ;  var1312 = 0 ; if ( var848 ) { if ( var850 ) { var1312 = 1 ; } else { } } else { }  var851 = var1312 ;  var852 = var47 [ 0 ] ;  var853 = var852 == 2 ;  var1313 = 0 ; if ( var56 ) { if ( var853 ) { var1313 = 1 ; } else { } } else { }  var854 = var1313 ;  var855 = int var536 = var854 ; if ( var536 ) {  var856 = var48 [ 0 ] ;  var1365 = var856 == 1 ;  var1457 = 0 ; if ( var1365 ) { var1457 = 1 ; } else { }  var1366 = var1457 ;  var1367 =  var857 = var1366 ;  var858 = int var537 = var857 ; if ( var537 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_50 ; } else {  var859 = var47 [ 0 ] ;  var860 = var859 == var51 ;  var861 = int var538 = var860 ; if ( var538 ) { var56 = 1 ; } else { int var539 = var56 ; if ( var539 ) { goto label_50 ; } else { goto label_50 ; } } }  var862 = 1 + 8 ;  var863 = var55 + var862 ;  var864 = var55 = var863 ; goto label_49 ; } label_50:
      |                                                                                                                                                                                                                                                                                                                                      ^~~~~~
output.c:55:326: error: type defaults to ‘int’ in declaration of ‘var854’ [-Wimplicit-int]
output.c:55:335: error: initializer element is not constant
   55 |   var847 = 8 * 8 ;  var848 = var55 < var847 ;  var849 = var55 % 8 ;  var850 = var849 > 0 ;  var1312 = 0 ; if ( var848 ) { if ( var850 ) { var1312 = 1 ; } else { } } else { }  var851 = var1312 ;  var852 = var47 [ 0 ] ;  var853 = var852 == 2 ;  var1313 = 0 ; if ( var56 ) { if ( var853 ) { var1313 = 1 ; } else { } } else { }  var854 = var1313 ;  var855 = int var536 = var854 ; if ( var536 ) {  var856 = var48 [ 0 ] ;  var1365 = var856 == 1 ;  var1457 = 0 ; if ( var1365 ) { var1457 = 1 ; } else { }  var1366 = var1457 ;  var1367 =  var857 = var1366 ;  var858 = int var537 = var857 ; if ( var537 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_50 ; } else {  var859 = var47 [ 0 ] ;  var860 = var859 == var51 ;  var861 = int var538 = var860 ; if ( var538 ) { var56 = 1 ; } else { int var539 = var56 ; if ( var539 ) { goto label_50 ; } else { goto label_50 ; } } }  var862 = 1 + 8 ;  var863 = var55 + var862 ;  var864 = var55 = var863 ; goto label_49 ; } label_50:
      |                                                                                                                                                                                                                                                                                                                                               ^~~~~~~
output.c:55:346: warning: data definition has no type or storage class
   55 |   var847 = 8 * 8 ;  var848 = var55 < var847 ;  var849 = var55 % 8 ;  var850 = var849 > 0 ;  var1312 = 0 ; if ( var848 ) { if ( var850 ) { var1312 = 1 ; } else { } } else { }  var851 = var1312 ;  var852 = var47 [ 0 ] ;  var853 = var852 == 2 ;  var1313 = 0 ; if ( var56 ) { if ( var853 ) { var1313 = 1 ; } else { } } else { }  var854 = var1313 ;  var855 = int var536 = var854 ; if ( var536 ) {  var856 = var48 [ 0 ] ;  var1365 = var856 == 1 ;  var1457 = 0 ; if ( var1365 ) { var1457 = 1 ; } else { }  var1366 = var1457 ;  var1367 =  var857 = var1366 ;  var858 = int var537 = var857 ; if ( var537 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_50 ; } else {  var859 = var47 [ 0 ] ;  var860 = var859 == var51 ;  var861 = int var538 = var860 ; if ( var538 ) { var56 = 1 ; } else { int var539 = var56 ; if ( var539 ) { goto label_50 ; } else { goto label_50 ; } } }  var862 = 1 + 8 ;  var863 = var55 + var862 ;  var864 = var55 = var863 ; goto label_49 ; } label_50:
      |                                                                                                                                                                                                                                                                                                                                                          ^~~~~~
output.c:55:346: error: type defaults to ‘int’ in declaration of ‘var855’ [-Wimplicit-int]
output.c:55:355: error: expected expression before ‘int’
   55 |   var847 = 8 * 8 ;  var848 = var55 < var847 ;  var849 = var55 % 8 ;  var850 = var849 > 0 ;  var1312 = 0 ; if ( var848 ) { if ( var850 ) { var1312 = 1 ; } else { } } else { }  var851 = var1312 ;  var852 = var47 [ 0 ] ;  var853 = var852 == 2 ;  var1313 = 0 ; if ( var56 ) { if ( var853 ) { var1313 = 1 ; } else { } } else { }  var854 = var1313 ;  var855 = int var536 = var854 ; if ( var536 ) {  var856 = var48 [ 0 ] ;  var1365 = var856 == 1 ;  var1457 = 0 ; if ( var1365 ) { var1457 = 1 ; } else { }  var1366 = var1457 ;  var1367 =  var857 = var1366 ;  var858 = int var537 = var857 ; if ( var537 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_50 ; } else {  var859 = var47 [ 0 ] ;  var860 = var859 == var51 ;  var861 = int var538 = var860 ; if ( var538 ) { var56 = 1 ; } else { int var539 = var56 ; if ( var539 ) { goto label_50 ; } else { goto label_50 ; } } }  var862 = 1 + 8 ;  var863 = var55 + var862 ;  var864 = var55 = var863 ; goto label_49 ; } label_50:
      |                                                                                                                                                                                                                                                                                                                                                                   ^~~
output.c:55:377: error: expected identifier or ‘(’ before ‘if’
   55 |   var847 = 8 * 8 ;  var848 = var55 < var847 ;  var849 = var55 % 8 ;  var850 = var849 > 0 ;  var1312 = 0 ; if ( var848 ) { if ( var850 ) { var1312 = 1 ; } else { } } else { }  var851 = var1312 ;  var852 = var47 [ 0 ] ;  var853 = var852 == 2 ;  var1313 = 0 ; if ( var56 ) { if ( var853 ) { var1313 = 1 ; } else { } } else { }  var854 = var1313 ;  var855 = int var536 = var854 ; if ( var536 ) {  var856 = var48 [ 0 ] ;  var1365 = var856 == 1 ;  var1457 = 0 ; if ( var1365 ) { var1457 = 1 ; } else { }  var1366 = var1457 ;  var1367 =  var857 = var1366 ;  var858 = int var537 = var857 ; if ( var537 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_50 ; } else {  var859 = var47 [ 0 ] ;  var860 = var859 == var51 ;  var861 = int var538 = var860 ; if ( var538 ) { var56 = 1 ; } else { int var539 = var56 ; if ( var539 ) { goto label_50 ; } else { goto label_50 ; } } }  var862 = 1 + 8 ;  var863 = var55 + var862 ;  var864 = var55 = var863 ; goto label_49 ; } label_50:
      |                                                                                                                                                                                                                                                                                                                                                                                         ^~
output.c:55:682: error: expected identifier or ‘(’ before ‘else’
   55 |   var847 = 8 * 8 ;  var848 = var55 < var847 ;  var849 = var55 % 8 ;  var850 = var849 > 0 ;  var1312 = 0 ; if ( var848 ) { if ( var850 ) { var1312 = 1 ; } else { } } else { }  var851 = var1312 ;  var852 = var47 [ 0 ] ;  var853 = var852 == 2 ;  var1313 = 0 ; if ( var56 ) { if ( var853 ) { var1313 = 1 ; } else { } } else { }  var854 = var1313 ;  var855 = int var536 = var854 ; if ( var536 ) {  var856 = var48 [ 0 ] ;  var1365 = var856 == 1 ;  var1457 = 0 ; if ( var1365 ) { var1457 = 1 ; } else { }  var1366 = var1457 ;  var1367 =  var857 = var1366 ;  var858 = int var537 = var857 ; if ( var537 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_50 ; } else {  var859 = var47 [ 0 ] ;  var860 = var859 == var51 ;  var861 = int var538 = var860 ; if ( var538 ) { var56 = 1 ; } else { int var539 = var56 ; if ( var539 ) { goto label_50 ; } else { goto label_50 ; } } }  var862 = 1 + 8 ;  var863 = var55 + var862 ;  var864 = var55 = var863 ; goto label_49 ; } label_50:
      |~~~
output.c:55:895: warning: data definition has no type or storage class
   55 |   var847 = 8 * 8 ;  var848 = var55 < var847 ;  var849 = var55 % 8 ;  var850 = var849 > 0 ;  var1312 = 0 ; if ( var848 ) { if ( var850 ) { var1312 = 1 ; } else { } } else { }  var851 = var1312 ;  var852 = var47 [ 0 ] ;  var853 = var852 == 2 ;  var1313 = 0 ; if ( var56 ) { if ( var853 ) { var1313 = 1 ; } else { } } else { }  var854 = var1313 ;  var855 = int var536 = var854 ; if ( var536 ) {  var856 = var48 [ 0 ] ;  var1365 = var856 == 1 ;  var1457 = 0 ; if ( var1365 ) { var1457 = 1 ; } else { }  var1366 = var1457 ;  var1367 =  var857 = var1366 ;  var858 = int var537 = var857 ; if ( var537 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_50 ; } else {  var859 = var47 [ 0 ] ;  var860 = var859 == var51 ;  var861 = int var538 = var860 ; if ( var538 ) { var56 = 1 ; } else { int var539 = var56 ; if ( var539 ) { goto label_50 ; } else { goto label_50 ; } } }  var862 = 1 + 8 ;  var863 = var55 + var862 ;  var864 = var55 = var863 ; goto label_49 ; } label_50:
      |~~~~~
output.c:55:895: error: type defaults to ‘int’ in declaration of ‘var862’ [-Wimplicit-int]
output.c:55:913: warning: data definition has no type or storage class
   55 |   var847 = 8 * 8 ;  var848 = var55 < var847 ;  var849 = var55 % 8 ;  var850 = var849 > 0 ;  var1312 = 0 ; if ( var848 ) { if ( var850 ) { var1312 = 1 ; } else { } } else { }  var851 = var1312 ;  var852 = var47 [ 0 ] ;  var853 = var852 == 2 ;  var1313 = 0 ; if ( var56 ) { if ( var853 ) { var1313 = 1 ; } else { } } else { }  var854 = var1313 ;  var855 = int var536 = var854 ; if ( var536 ) {  var856 = var48 [ 0 ] ;  var1365 = var856 == 1 ;  var1457 = 0 ; if ( var1365 ) { var1457 = 1 ; } else { }  var1366 = var1457 ;  var1367 =  var857 = var1366 ;  var858 = int var537 = var857 ; if ( var537 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_50 ; } else {  var859 = var47 [ 0 ] ;  var860 = var859 == var51 ;  var861 = int var538 = var860 ; if ( var538 ) { var56 = 1 ; } else { int var539 = var56 ; if ( var539 ) { goto label_50 ; } else { goto label_50 ; } } }  var862 = 1 + 8 ;  var863 = var55 + var862 ;  var864 = var55 = var863 ; goto label_49 ; } label_50:
      |~~~~~
output.c:55:913: error: type defaults to ‘int’ in declaration of ‘var863’ [-Wimplicit-int]
output.c:55:922: error: initializer element is not constant
   55 |   var847 = 8 * 8 ;  var848 = var55 < var847 ;  var849 = var55 % 8 ;  var850 = var849 > 0 ;  var1312 = 0 ; if ( var848 ) { if ( var850 ) { var1312 = 1 ; } else { } } else { }  var851 = var1312 ;  var852 = var47 [ 0 ] ;  var853 = var852 == 2 ;  var1313 = 0 ; if ( var56 ) { if ( var853 ) { var1313 = 1 ; } else { } } else { }  var854 = var1313 ;  var855 = int var536 = var854 ; if ( var536 ) {  var856 = var48 [ 0 ] ;  var1365 = var856 == 1 ;  var1457 = 0 ; if ( var1365 ) { var1457 = 1 ; } else { }  var1366 = var1457 ;  var1367 =  var857 = var1366 ;  var858 = int var537 = var857 ; if ( var537 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_50 ; } else {  var859 = var47 [ 0 ] ;  var860 = var859 == var51 ;  var861 = int var538 = var860 ; if ( var538 ) { var56 = 1 ; } else { int var539 = var56 ; if ( var539 ) { goto label_50 ; } else { goto label_50 ; } } }  var862 = 1 + 8 ;  var863 = var55 + var862 ;  var864 = var55 = var863 ; goto label_49 ; } label_50:
      |~~~~
output.c:55:940: warning: data definition has no type or storage class
   55 |   var847 = 8 * 8 ;  var848 = var55 < var847 ;  var849 = var55 % 8 ;  var850 = var849 > 0 ;  var1312 = 0 ; if ( var848 ) { if ( var850 ) { var1312 = 1 ; } else { } } else { }  var851 = var1312 ;  var852 = var47 [ 0 ] ;  var853 = var852 == 2 ;  var1313 = 0 ; if ( var56 ) { if ( var853 ) { var1313 = 1 ; } else { } } else { }  var854 = var1313 ;  var855 = int var536 = var854 ; if ( var536 ) {  var856 = var48 [ 0 ] ;  var1365 = var856 == 1 ;  var1457 = 0 ; if ( var1365 ) { var1457 = 1 ; } else { }  var1366 = var1457 ;  var1367 =  var857 = var1366 ;  var858 = int var537 = var857 ; if ( var537 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_50 ; } else {  var859 = var47 [ 0 ] ;  var860 = var859 == var51 ;  var861 = int var538 = var860 ; if ( var538 ) { var56 = 1 ; } else { int var539 = var56 ; if ( var539 ) { goto label_50 ; } else { goto label_50 ; } } }  var862 = 1 + 8 ;  var863 = var55 + var862 ;  var864 = var55 = var863 ; goto label_49 ; } label_50:
      |~~~~~
output.c:55:940: error: type defaults to ‘int’ in declaration of ‘var864’ [-Wimplicit-int]
output.c:55:949: error: initializer element is not constant
   55 |   var847 = 8 * 8 ;  var848 = var55 < var847 ;  var849 = var55 % 8 ;  var850 = var849 > 0 ;  var1312 = 0 ; if ( var848 ) { if ( var850 ) { var1312 = 1 ; } else { } } else { }  var851 = var1312 ;  var852 = var47 [ 0 ] ;  var853 = var852 == 2 ;  var1313 = 0 ; if ( var56 ) { if ( var853 ) { var1313 = 1 ; } else { } } else { }  var854 = var1313 ;  var855 = int var536 = var854 ; if ( var536 ) {  var856 = var48 [ 0 ] ;  var1365 = var856 == 1 ;  var1457 = 0 ; if ( var1365 ) { var1457 = 1 ; } else { }  var1366 = var1457 ;  var1367 =  var857 = var1366 ;  var858 = int var537 = var857 ; if ( var537 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_50 ; } else {  var859 = var47 [ 0 ] ;  var860 = var859 == var51 ;  var861 = int var538 = var860 ; if ( var538 ) { var56 = 1 ; } else { int var539 = var56 ; if ( var539 ) { goto label_50 ; } else { goto label_50 ; } } }  var862 = 1 + 8 ;  var863 = var55 + var862 ;  var864 = var55 = var863 ; goto label_49 ; } label_50:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     ^~~~~
output.c:55:966: error: expected identifier or ‘(’ before ‘goto’
   55 |   var847 = 8 * 8 ;  var848 = var55 < var847 ;  var849 = var55 % 8 ;  var850 = var849 > 0 ;  var1312 = 0 ; if ( var848 ) { if ( var850 ) { var1312 = 1 ; } else { } } else { }  var851 = var1312 ;  var852 = var47 [ 0 ] ;  var853 = var852 == 2 ;  var1313 = 0 ; if ( var56 ) { if ( var853 ) { var1313 = 1 ; } else { } } else { }  var854 = var1313 ;  var855 = int var536 = var854 ; if ( var536 ) {  var856 = var48 [ 0 ] ;  var1365 = var856 == 1 ;  var1457 = 0 ; if ( var1365 ) { var1457 = 1 ; } else { }  var1366 = var1457 ;  var1367 =  var857 = var1366 ;  var858 = int var537 = var857 ; if ( var537 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_50 ; } else {  var859 = var47 [ 0 ] ;  var860 = var859 == var51 ;  var861 = int var538 = var860 ; if ( var538 ) { var56 = 1 ; } else { int var539 = var56 ; if ( var539 ) { goto label_50 ; } else { goto label_50 ; } } }  var862 = 1 + 8 ;  var863 = var55 + var862 ;  var864 = var55 = var863 ; goto label_49 ; } label_50:
      |~~~
output.c:55:982: error: expected identifier or ‘(’ before ‘}’ token
   55 |   var847 = 8 * 8 ;  var848 = var55 < var847 ;  var849 = var55 % 8 ;  var850 = var849 > 0 ;  var1312 = 0 ; if ( var848 ) { if ( var850 ) { var1312 = 1 ; } else { } } else { }  var851 = var1312 ;  var852 = var47 [ 0 ] ;  var853 = var852 == 2 ;  var1313 = 0 ; if ( var56 ) { if ( var853 ) { var1313 = 1 ; } else { } } else { }  var854 = var1313 ;  var855 = int var536 = var854 ; if ( var536 ) {  var856 = var48 [ 0 ] ;  var1365 = var856 == 1 ;  var1457 = 0 ; if ( var1365 ) { var1457 = 1 ; } else { }  var1366 = var1457 ;  var1367 =  var857 = var1366 ;  var858 = int var537 = var857 ; if ( var537 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_50 ; } else {  var859 = var47 [ 0 ] ;  var860 = var859 == var51 ;  var861 = int var538 = var860 ; if ( var538 ) { var56 = 1 ; } else { int var539 = var56 ; if ( var539 ) { goto label_50 ; } else { goto label_50 ; } } }  var862 = 1 + 8 ;  var863 = var55 + var862 ;  var864 = var55 = var863 ; goto label_49 ; } label_50:
      |
output.c:55:992: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘:’ token
   55 |   var847 = 8 * 8 ;  var848 = var55 < var847 ;  var849 = var55 % 8 ;  var850 = var849 > 0 ;  var1312 = 0 ; if ( var848 ) { if ( var850 ) { var1312 = 1 ; } else { } } else { }  var851 = var1312 ;  var852 = var47 [ 0 ] ;  var853 = var852 == 2 ;  var1313 = 0 ; if ( var56 ) { if ( var853 ) { var1313 = 1 ; } else { } } else { }  var854 = var1313 ;  var855 = int var536 = var854 ; if ( var536 ) {  var856 = var48 [ 0 ] ;  var1365 = var856 == 1 ;  var1457 = 0 ; if ( var1365 ) { var1457 = 1 ; } else { }  var1366 = var1457 ;  var1367 =  var857 = var1366 ;  var858 = int var537 = var857 ; if ( var537 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_50 ; } else {  var859 = var47 [ 0 ] ;  var860 = var859 == var51 ;  var861 = int var538 = var860 ; if ( var538 ) { var56 = 1 ; } else { int var539 = var56 ; if ( var539 ) { goto label_50 ; } else { goto label_50 ; } } }  var862 = 1 + 8 ;  var863 = var55 + var862 ;  var864 = var55 = var863 ; goto label_49 ; } label_50:
      |
output.c:56:25: warning: data definition has no type or storage class
   56 |   var865 = var54 - 1 ;  var866 = var865 + 8 ;  var867 = var55 = var866 ; var56 = 0 ; label_51:
      |                         ^~~~~~
output.c:56:25: error: type defaults to ‘int’ in declaration of ‘var866’ [-Wimplicit-int]
output.c:56:34: error: ‘var865’ undeclared here (not in a function); did you mean ‘var866’?
   56 |   var865 = var54 - 1 ;  var866 = var865 + 8 ;  var867 = var55 = var866 ; var56 = 0 ; label_51:
      |                                  ^~~~~~
      |                                  var866
output.c:56:48: warning: data definition has no type or storage class
   56 |   var865 = var54 - 1 ;  var866 = var865 + 8 ;  var867 = var55 = var866 ; var56 = 0 ; label_51:
      |                                                ^~~~~~
output.c:56:48: error: type defaults to ‘int’ in declaration of ‘var867’ [-Wimplicit-int]
output.c:56:57: error: initializer element is not constant
   56 |   var865 = var54 - 1 ;  var866 = var865 + 8 ;  var867 = var55 = var866 ; var56 = 0 ; label_51:
      |                                                         ^~~~~
output.c:56:74: warning: data definition has no type or storage class
   56 |   var865 = var54 - 1 ;  var866 = var865 + 8 ;  var867 = var55 = var866 ; var56 = 0 ; label_51:
      |                                                                          ^~~~~
output.c:56:74: error: type defaults to ‘int’ in declaration of ‘var56’ [-Wimplicit-int]
output.c:56:74: error: redefinition of ‘var56’
output.c:48:22: note: previous definition of ‘var56’ with type ‘int’
   48 |  var55 = var54 - 1 ; var56 = 0 ; label_43:
      |                      ^~~~~
output.c:56:94: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘:’ token
   56 |   var865 = var54 - 1 ;  var866 = var865 + 8 ;  var867 = var55 = var866 ; var56 = 0 ; label_51:
      |                                                                                              ^
output.c:57:21: warning: data definition has no type or storage class
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |                     ^~~~~~
output.c:57:21: error: type defaults to ‘int’ in declaration of ‘var869’ [-Wimplicit-int]
output.c:57:38: error: ‘var868’ undeclared here (not in a function); did you mean ‘var869’?
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |                                      ^~~~~~
      |                                      var869
output.c:57:48: warning: data definition has no type or storage class
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |                                                ^~~~~~
output.c:57:48: error: type defaults to ‘int’ in declaration of ‘var870’ [-Wimplicit-int]
output.c:57:57: error: initializer element is not constant
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |                                                         ^~~~~
output.c:57:70: warning: data definition has no type or storage class
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |                                                                      ^~~~~~
output.c:57:70: error: type defaults to ‘int’ in declaration of ‘var871’ [-Wimplicit-int]
output.c:57:88: warning: data definition has no type or storage class
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |                                                                                        ^~~~~~
output.c:57:88: error: type defaults to ‘int’ in declaration of ‘var872’ [-Wimplicit-int]
output.c:57:97: error: initializer element is not constant
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |                                                                                                 ^~~~~~
output.c:57:116: warning: data definition has no type or storage class
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |                                                                                                                    ^~~~~~~
output.c:57:116: error: type defaults to ‘int’ in declaration of ‘var1314’ [-Wimplicit-int]
output.c:57:130: error: expected identifier or ‘(’ before ‘if’
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |                                                                                                                                  ^~
output.c:57:189: error: expected identifier or ‘(’ before ‘else’
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |                                                                                                                                                                                             ^~~~
output.c:57:199: warning: data definition has no type or storage class
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |                                                                                                                                                                                                       ^~~~~~
output.c:57:199: error: type defaults to ‘int’ in declaration of ‘var873’ [-Wimplicit-int]
output.c:57:208: error: initializer element is not constant
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |                                                                                                                                                                                                                ^~~~~~~
output.c:57:219: warning: data definition has no type or storage class
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |                                                                                                                                                                                                                           ^~~~~~
output.c:57:219: error: type defaults to ‘int’ in declaration of ‘var874’ [-Wimplicit-int]
output.c:57:243: warning: data definition has no type or storage class
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |                                                                                                                                                                                                                                                   ^~~~~~
output.c:57:243: error: type defaults to ‘int’ in declaration of ‘var875’ [-Wimplicit-int]
output.c:57:252: error: initializer element is not constant
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |                                                                                                                                                                                                                                                            ^~~~~~
output.c:57:267: warning: data definition has no type or storage class
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |                                                                                                                                                                                                                                                                           ^~~~~~~
output.c:57:267: error: type defaults to ‘int’ in declaration of ‘var1315’ [-Wimplicit-int]
output.c:57:281: error: expected identifier or ‘(’ before ‘if’
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |                                                                                                                                                                                                                                                                                         ^~
output.c:57:339: error: expected identifier or ‘(’ before ‘else’
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |                                                                                                                                                                                                                                                                                                                                                   ^~~~
output.c:57:349: warning: data definition has no type or storage class
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |                                                                                                                                                                                                                                                                                                                                                             ^~~~~~
output.c:57:349: error: type defaults to ‘int’ in declaration of ‘var876’ [-Wimplicit-int]
output.c:57:358: error: initializer element is not constant
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |                                                                                                                                                                                                                                                                                                                                                                      ^~~~~~~
output.c:57:369: warning: data definition has no type or storage class
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |                                                                                                                                                                                                                                                                                                                                                                                 ^~~~~~
output.c:57:369: error: type defaults to ‘int’ in declaration of ‘var877’ [-Wimplicit-int]
output.c:57:378: error: expected expression before ‘int’
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |                                                                                                                                                                                                                                                                                                                                                                                          ^~~
output.c:57:400: error: expected identifier or ‘(’ before ‘if’
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |                                                                                                                                                                                                                                                                                                                                                                                                                ^~
output.c:57:705: error: expected identifier or ‘(’ before ‘else’
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |~~~
output.c:57:918: warning: data definition has no type or storage class
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |~~~~~
output.c:57:918: error: type defaults to ‘int’ in declaration of ‘var884’ [-Wimplicit-int]
output.c:57:936: warning: data definition has no type or storage class
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |~~~~~
output.c:57:936: error: type defaults to ‘int’ in declaration of ‘var885’ [-Wimplicit-int]
output.c:57:945: error: initializer element is not constant
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |~~~~~
output.c:57:959: warning: data definition has no type or storage class
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |~~~~~
output.c:57:959: error: type defaults to ‘int’ in declaration of ‘var886’ [-Wimplicit-int]
output.c:57:968: error: initializer element is not constant
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |~~~~
output.c:57:986: warning: data definition has no type or storage class
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |~~~~~
output.c:57:986: error: type defaults to ‘int’ in declaration of ‘var887’ [-Wimplicit-int]
output.c:57:995: error: initializer element is not constant
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |~~~~
output.c:57:1012: error: expected identifier or ‘(’ before ‘goto’
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |~~~
output.c:57:1028: error: expected identifier or ‘(’ before ‘}’ token
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |
output.c:57:1038: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘:’ token
   57 |   var868 = 8 * 8 ;  var869 = var55 < var868 ;  var870 = var55 % 8 ;  var871 = 8 - 1 ;  var872 = var870 < var871 ;  var1314 = 0 ; if ( var869 ) { if ( var872 ) { var1314 = 1 ; } else { } } else { }  var873 = var1314 ;  var874 = var47 [ 0 ] ;  var875 = var874 == 2 ;  var1315 = 0 ; if ( var56 ) { if ( var875 ) { var1315 = 1 ; } else { } } else { }  var876 = var1315 ;  var877 = int var540 = var876 ; if ( var540 ) {  var878 = var48 [ 0 ] ;  var1368 = var878 == 1 ;  var1458 = 0 ; if ( var1368 ) { var1458 = 1 ; } else { }  var1369 = var1458 ;  var1370 =  var879 = var1369 ;  var880 = int var541 = var879 ; if ( var541 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_52 ; } else {  var881 = var47 [ 0 ] ;  var882 = var881 == var51 ;  var883 = int var542 = var882 ; if ( var542 ) { var56 = 1 ; } else { int var543 = var56 ; if ( var543 ) { goto label_52 ; } else { goto label_52 ; } } }  var884 = 0 - 1 ;  var885 = var884 + 8 ;  var886 = var55 + var885 ;  var887 = var55 = var886 ; goto label_51 ; } label_52:
      |
output.c:58:25: warning: data definition has no type or storage class
   58 |   var888 = var54 - 1 ;  var889 = var888 - 8 ;  var890 = var55 = var889 ; var56 = 0 ; label_53:
      |                         ^~~~~~
output.c:58:25: error: type defaults to ‘int’ in declaration of ‘var889’ [-Wimplicit-int]
output.c:58:34: error: ‘var888’ undeclared here (not in a function); did you mean ‘var889’?
   58 |   var888 = var54 - 1 ;  var889 = var888 - 8 ;  var890 = var55 = var889 ; var56 = 0 ; label_53:
      |                                  ^~~~~~
      |                                  var889
output.c:58:48: warning: data definition has no type or storage class
   58 |   var888 = var54 - 1 ;  var889 = var888 - 8 ;  var890 = var55 = var889 ; var56 = 0 ; label_53:
      |                                                ^~~~~~
output.c:58:48: error: type defaults to ‘int’ in declaration of ‘var890’ [-Wimplicit-int]
output.c:58:57: error: initializer element is not constant
   58 |   var888 = var54 - 1 ;  var889 = var888 - 8 ;  var890 = var55 = var889 ; var56 = 0 ; label_53:
      |                                                         ^~~~~
output.c:58:74: warning: data definition has no type or storage class
   58 |   var888 = var54 - 1 ;  var889 = var888 - 8 ;  var890 = var55 = var889 ; var56 = 0 ; label_53:
      |                                                                          ^~~~~
output.c:58:74: error: type defaults to ‘int’ in declaration of ‘var56’ [-Wimplicit-int]
output.c:58:74: error: redefinition of ‘var56’
output.c:48:22: note: previous definition of ‘var56’ with type ‘int’
   48 |  var55 = var54 - 1 ; var56 = 0 ; label_43:
      |                      ^~~~~
output.c:58:94: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘:’ token
   58 |   var888 = var54 - 1 ;  var889 = var888 - 8 ;  var890 = var55 = var889 ; var56 = 0 ; label_53:
      |                                                                                              ^
output.c:59:26: warning: data definition has no type or storage class
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |                          ^~~~~~~
output.c:59:26: error: type defaults to ‘int’ in declaration of ‘var1459’ [-Wimplicit-int]
output.c:59:40: error: expected identifier or ‘(’ before ‘if’
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |                                        ^~
output.c:59:73: error: expected identifier or ‘(’ before ‘else’
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |                                                                         ^~~~
output.c:59:83: warning: data definition has no type or storage class
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |                                                                                   ^~~~~~~
output.c:59:83: error: type defaults to ‘int’ in declaration of ‘var1372’ [-Wimplicit-int]
output.c:59:93: error: initializer element is not constant
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |                                                                                             ^~~~~~~
output.c:59:104: warning: data definition has no type or storage class
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |                                                                                                        ^~~~~~~
output.c:59:104: error: type defaults to ‘int’ in declaration of ‘var1373’ [-Wimplicit-int]
output.c:59:115: error: ‘var891’ undeclared here (not in a function); did you mean ‘var890’?
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |                                                                                                                   ^~~~~~
      |                                                                                                                   var890
output.c:59:135: warning: data definition has no type or storage class
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |                                                                                                                                       ^~~~~~
output.c:59:135: error: type defaults to ‘int’ in declaration of ‘var892’ [-Wimplicit-int]
output.c:59:144: error: initializer element is not constant
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |                                                                                                                                                ^~~~~
output.c:59:157: warning: data definition has no type or storage class
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |                                                                                                                                                             ^~~~~~
output.c:59:157: error: type defaults to ‘int’ in declaration of ‘var893’ [-Wimplicit-int]
output.c:59:175: warning: data definition has no type or storage class
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |                                                                                                                                                                               ^~~~~~
output.c:59:175: error: type defaults to ‘int’ in declaration of ‘var894’ [-Wimplicit-int]
output.c:59:184: error: initializer element is not constant
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |                                                                                                                                                                                        ^~~~~~
output.c:59:203: warning: data definition has no type or storage class
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |                                                                                                                                                                                                           ^~~~~~~
output.c:59:203: error: type defaults to ‘int’ in declaration of ‘var1316’ [-Wimplicit-int]
output.c:59:217: error: expected identifier or ‘(’ before ‘if’
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |                                                                                                                                                                                                                         ^~
output.c:59:276: error: expected identifier or ‘(’ before ‘else’
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |                                                                                                                                                                                                                                                                                    ^~~~
output.c:59:286: warning: data definition has no type or storage class
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |                                                                                                                                                                                                                                                                                              ^~~~~~
output.c:59:286: error: type defaults to ‘int’ in declaration of ‘var895’ [-Wimplicit-int]
output.c:59:295: error: initializer element is not constant
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |                                                                                                                                                                                                                                                                                                       ^~~~~~~
output.c:59:306: warning: data definition has no type or storage class
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |                                                                                                                                                                                                                                                                                                                  ^~~~~~
output.c:59:306: error: type defaults to ‘int’ in declaration of ‘var896’ [-Wimplicit-int]
output.c:59:330: warning: data definition has no type or storage class
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |                                                                                                                                                                                                                                                                                                                                          ^~~~~~
output.c:59:330: error: type defaults to ‘int’ in declaration of ‘var897’ [-Wimplicit-int]
output.c:59:339: error: initializer element is not constant
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |                                                                                                                                                                                                                                                                                                                                                   ^~~~~~
output.c:59:354: warning: data definition has no type or storage class
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |                                                                                                                                                                                                                                                                                                                                                                  ^~~~~~~
output.c:59:354: error: type defaults to ‘int’ in declaration of ‘var1317’ [-Wimplicit-int]
output.c:59:368: error: expected identifier or ‘(’ before ‘if’
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |                                                                                                                                                                                                                                                                                                                                                                                ^~
output.c:59:426: error: expected identifier or ‘(’ before ‘else’
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                          ^~~~
output.c:59:436: warning: data definition has no type or storage class
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                    ^~~~~~
output.c:59:436: error: type defaults to ‘int’ in declaration of ‘var898’ [-Wimplicit-int]
output.c:59:445: error: initializer element is not constant
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                             ^~~~~~~
output.c:59:456: warning: data definition has no type or storage class
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ^~~~~~
output.c:59:456: error: type defaults to ‘int’ in declaration of ‘var899’ [-Wimplicit-int]
output.c:59:465: error: expected expression before ‘int’
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^~~
output.c:59:487: error: expected identifier or ‘(’ before ‘if’
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ^~
output.c:59:792: error: expected identifier or ‘(’ before ‘else’
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |~~~
output.c:59:1005: warning: data definition has no type or storage class
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |~~~~~
output.c:59:1005: error: type defaults to ‘int’ in declaration of ‘var906’ [-Wimplicit-int]
output.c:59:1023: warning: data definition has no type or storage class
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |~~~~~
output.c:59:1023: error: type defaults to ‘int’ in declaration of ‘var907’ [-Wimplicit-int]
output.c:59:1032: error: initializer element is not constant
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |~~~~~
output.c:59:1046: warning: data definition has no type or storage class
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |~~~~~
output.c:59:1046: error: type defaults to ‘int’ in declaration of ‘var908’ [-Wimplicit-int]
output.c:59:1055: error: initializer element is not constant
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |~~~~
output.c:59:1073: warning: data definition has no type or storage class
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |~~~~~
output.c:59:1073: error: type defaults to ‘int’ in declaration of ‘var909’ [-Wimplicit-int]
output.c:59:1082: error: initializer element is not constant
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |~~~~
output.c:59:1099: error: expected identifier or ‘(’ before ‘goto’
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |~~~
output.c:59:1115: error: expected identifier or ‘(’ before ‘}’ token
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |
output.c:59:1125: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘:’ token
   59 |   var1371 = var55 < 0 ;  var1459 = 0 ; if ( var1371 ) { var1459 = 1 ; } else { }  var1372 = var1459 ;  var1373 =  var891 = var1372 ;  var892 = var55 % 8 ;  var893 = 8 - 1 ;  var894 = var892 < var893 ;  var1316 = 0 ; if ( var891 ) { if ( var894 ) { var1316 = 1 ; } else { } } else { }  var895 = var1316 ;  var896 = var47 [ 0 ] ;  var897 = var896 == 2 ;  var1317 = 0 ; if ( var56 ) { if ( var897 ) { var1317 = 1 ; } else { } } else { }  var898 = var1317 ;  var899 = int var544 = var898 ; if ( var544 ) {  var900 = var48 [ 0 ] ;  var1374 = var900 == 1 ;  var1460 = 0 ; if ( var1374 ) { var1460 = 1 ; } else { }  var1375 = var1460 ;  var1376 =  var901 = var1375 ;  var902 = int var545 = var901 ; if ( var545 ) { var50 ; var50 = var50 + 1 ; } else { } var48 [ 0 ] var55 ) = 1 ; goto label_54 ; } else {  var903 = var47 [ 0 ] ;  var904 = var903 == var51 ;  var905 = int var546 = var904 ; if ( var546 ) { var56 = 1 ; } else { int var547 = var56 ; if ( var547 ) { goto label_54 ; } else { goto label_54 ; } } }  var906 = 0 - 1 ;  var907 = var906 - 8 ;  var908 = var55 + var907 ;  var909 = var55 = var908 ; goto label_53 ; } label_54:
      |
output.c:60:10: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘<’ token
   60 |  } var54 <++ 0 ; goto label_37 ; } label_38:
      |          ^
output.c:60:18: error: expected identifier or ‘(’ before ‘goto’
   60 |  } var54 <++ 0 ; goto label_37 ; } label_38:
      |                  ^~~~
output.c:60:34: error: expected identifier or ‘(’ before ‘}’ token
   60 |  } var54 <++ 0 ; goto label_37 ; } label_38:
      |                                  ^
output.c:60:44: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘:’ token
   60 |  } var54 <++ 0 ; goto label_37 ; } label_38:
      |                                            ^
output.c:61:17: error: ‘var50’ undeclared here (not in a function); did you mean ‘var56’?
   61 |  } int var228 = var50 ; return var228 ; } int runCommand ( char * var58 ) {  var1461 = 0 ; if ( strcmp ( var58 , "debug on\n" ) ) { var1461 = 1 ; } else { } int var548 = var1461 ; ; if ( var548 ) { int var0 = 1 ; printf ( "Turning on debug mode!\n" ) ; ; int var229 = 1 ; return var229 ; } else { } else {  var1462 = 0 ; if ( strcmp ( var58 , "debug off\n" ) ) { var1462 = 1 ; } else { } int var549 = var1462 ; ; if ( var549 ) { var0 = 0 ; printf ( "Turning off debug mode!\n" ) ; ; int var230 = 1 ; return var230 ; } else { } } else {  var1463 = 0 ; if ( strcmp ( var58 , "pruning on\n" ) ) { var1463 = 1 ; } else { } int var550 = var1463 ; ; if ( var550 ) { int var1 = 1 ; printf ( "Turning on alpha-beta pruning!\n" ) ; ; int var231 = 1 ; return var231 ; } else { } } else {  var1464 = 0 ; if ( strcmp ( var58 , "pruning off\n" ) ) { var1464 = 1 ; } else { } int var551 = var1464 ; ; if ( var551 ) { var1 = 0 ; printf ( "Turning off alpha-beta pruning!\n" ) ; ; int var232 = 1 ; return var232 ; } else { } } else {  var1465 = 0 ; if ( strcmp ( var58 , "depth\n" ) ) { var1465 = 1 ; } else { } int var552 = var1465 ; ; if ( var552 ) { printf ( "Changing the depth!\n" ) ; ; int var65 = 1 ; label_55:
      |                 ^~~~~
      |                 var56
output.c:61:25: error: expected identifier or ‘(’ before ‘return’
   61 |  } int var228 = var50 ; return var228 ; } int runCommand ( char * var58 ) {  var1461 = 0 ; if ( strcmp ( var58 , "debug on\n" ) ) { var1461 = 1 ; } else { } int var548 = var1461 ; ; if ( var548 ) { int var0 = 1 ; printf ( "Turning on debug mode!\n" ) ; ; int var229 = 1 ; return var229 ; } else { } else {  var1462 = 0 ; if ( strcmp ( var58 , "debug off\n" ) ) { var1462 = 1 ; } else { } int var549 = var1462 ; ; if ( var549 ) { var0 = 0 ; printf ( "Turning off debug mode!\n" ) ; ; int var230 = 1 ; return var230 ; } else { } } else {  var1463 = 0 ; if ( strcmp ( var58 , "pruning on\n" ) ) { var1463 = 1 ; } else { } int var550 = var1463 ; ; if ( var550 ) { int var1 = 1 ; printf ( "Turning on alpha-beta pruning!\n" ) ; ; int var231 = 1 ; return var231 ; } else { } } else {  var1464 = 0 ; if ( strcmp ( var58 , "pruning off\n" ) ) { var1464 = 1 ; } else { } int var551 = var1464 ; ; if ( var551 ) { var1 = 0 ; printf ( "Turning off alpha-beta pruning!\n" ) ; ; int var232 = 1 ; return var232 ; } else { } } else {  var1465 = 0 ; if ( strcmp ( var58 , "depth\n" ) ) { var1465 = 1 ; } else { } int var552 = var1465 ; ; if ( var552 ) { printf ( "Changing the depth!\n" ) ; ; int var65 = 1 ; label_55:
      |                         ^~~~~~
output.c:61:41: error: expected identifier or ‘(’ before ‘}’ token
   61 |  } int var228 = var50 ; return var228 ; } int runCommand ( char * var58 ) {  var1461 = 0 ; if ( strcmp ( var58 , "debug on\n" ) ) { var1461 = 1 ; } else { } int var548 = var1461 ; ; if ( var548 ) { int var0 = 1 ; printf ( "Turning on debug mode!\n" ) ; ; int var229 = 1 ; return var229 ; } else { } else {  var1462 = 0 ; if ( strcmp ( var58 , "debug off\n" ) ) { var1462 = 1 ; } else { } int var549 = var1462 ; ; if ( var549 ) { var0 = 0 ; printf ( "Turning off debug mode!\n" ) ; ; int var230 = 1 ; return var230 ; } else { } } else {  var1463 = 0 ; if ( strcmp ( var58 , "pruning on\n" ) ) { var1463 = 1 ; } else { } int var550 = var1463 ; ; if ( var550 ) { int var1 = 1 ; printf ( "Turning on alpha-beta pruning!\n" ) ; ; int var231 = 1 ; return var231 ; } else { } } else {  var1464 = 0 ; if ( strcmp ( var58 , "pruning off\n" ) ) { var1464 = 1 ; } else { } int var551 = var1464 ; ; if ( var551 ) { var1 = 0 ; printf ( "Turning off alpha-beta pruning!\n" ) ; ; int var232 = 1 ; return var232 ; } else { } } else {  var1465 = 0 ; if ( strcmp ( var58 , "depth\n" ) ) { var1465 = 1 ; } else { } int var552 = var1465 ; ; if ( var552 ) { printf ( "Changing the depth!\n" ) ; ; int var65 = 1 ; label_55:
      |                                         ^
output.c: In function ‘runCommand’:
output.c:61:78: error: ‘var1461’ undeclared (first use in this function); did you mean ‘var1361’?
   61 |  } int var228 = var50 ; return var228 ; } int runCommand ( char * var58 ) {  var1461 = 0 ; if ( strcmp ( var58 , "debug on\n" ) ) { var1461 = 1 ; } else { } int var548 = var1461 ; ; if ( var548 ) { int var0 = 1 ; printf ( "Turning on debug mode!\n" ) ; ; int var229 = 1 ; return var229 ; } else { } else {  var1462 = 0 ; if ( strcmp ( var58 , "debug off\n" ) ) { var1462 = 1 ; } else { } int var549 = var1462 ; ; if ( var549 ) { var0 = 0 ; printf ( "Turning off debug mode!\n" ) ; ; int var230 = 1 ; return var230 ; } else { } } else {  var1463 = 0 ; if ( strcmp ( var58 , "pruning on\n" ) ) { var1463 = 1 ; } else { } int var550 = var1463 ; ; if ( var550 ) { int var1 = 1 ; printf ( "Turning on alpha-beta pruning!\n" ) ; ; int var231 = 1 ; return var231 ; } else { } } else {  var1464 = 0 ; if ( strcmp ( var58 , "pruning off\n" ) ) { var1464 = 1 ; } else { } int var551 = var1464 ; ; if ( var551 ) { var1 = 0 ; printf ( "Turning off alpha-beta pruning!\n" ) ; ; int var232 = 1 ; return var232 ; } else { } } else {  var1465 = 0 ; if ( strcmp ( var58 , "depth\n" ) ) { var1465 = 1 ; } else { } int var552 = var1465 ; ; if ( var552 ) { printf ( "Changing the depth!\n" ) ; ; int var65 = 1 ; label_55:
      |                                                                              ^~~~~~~
      |                                                                              var1361
output.c:61:300: error: ‘else’ without a previous ‘if’
   61 |  } int var228 = var50 ; return var228 ; } int runCommand ( char * var58 ) {  var1461 = 0 ; if ( strcmp ( var58 , "debug on\n" ) ) { var1461 = 1 ; } else { } int var548 = var1461 ; ; if ( var548 ) { int var0 = 1 ; printf ( "Turning on debug mode!\n" ) ; ; int var229 = 1 ; return var229 ; } else { } else {  var1462 = 0 ; if ( strcmp ( var58 , "debug off\n" ) ) { var1462 = 1 ; } else { } int var549 = var1462 ; ; if ( var549 ) { var0 = 0 ; printf ( "Turning off debug mode!\n" ) ; ; int var230 = 1 ; return var230 ; } else { } } else {  var1463 = 0 ; if ( strcmp ( var58 , "pruning on\n" ) ) { var1463 = 1 ; } else { } int var550 = var1463 ; ; if ( var550 ) { int var1 = 1 ; printf ( "Turning on alpha-beta pruning!\n" ) ; ; int var231 = 1 ; return var231 ; } else { } } else {  var1464 = 0 ; if ( strcmp ( var58 , "pruning off\n" ) ) { var1464 = 1 ; } else { } int var551 = var1464 ; ; if ( var551 ) { var1 = 0 ; printf ( "Turning off alpha-beta pruning!\n" ) ; ; int var232 = 1 ; return var232 ; } else { } } else {  var1465 = 0 ; if ( strcmp ( var58 , "depth\n" ) ) { var1465 = 1 ; } else { } int var552 = var1465 ; ; if ( var552 ) { printf ( "Changing the depth!\n" ) ; ; int var65 = 1 ; label_55:
      |                                                                                                                                                                                                                                                                                                            ^~~~
output.c:61:308: error: ‘var1462’ undeclared (first use in this function); did you mean ‘var1452’?
   61 |  } int var228 = var50 ; return var228 ; } int runCommand ( char * var58 ) {  var1461 = 0 ; if ( strcmp ( var58 , "debug on\n" ) ) { var1461 = 1 ; } else { } int var548 = var1461 ; ; if ( var548 ) { int var0 = 1 ; printf ( "Turning on debug mode!\n" ) ; ; int var229 = 1 ; return var229 ; } else { } else {  var1462 = 0 ; if ( strcmp ( var58 , "debug off\n" ) ) { var1462 = 1 ; } else { } int var549 = var1462 ; ; if ( var549 ) { var0 = 0 ; printf ( "Turning off debug mode!\n" ) ; ; int var230 = 1 ; return var230 ; } else { } } else {  var1463 = 0 ; if ( strcmp ( var58 , "pruning on\n" ) ) { var1463 = 1 ; } else { } int var550 = var1463 ; ; if ( var550 ) { int var1 = 1 ; printf ( "Turning on alpha-beta pruning!\n" ) ; ; int var231 = 1 ; return var231 ; } else { } } else {  var1464 = 0 ; if ( strcmp ( var58 , "pruning off\n" ) ) { var1464 = 1 ; } else { } int var551 = var1464 ; ; if ( var551 ) { var1 = 0 ; printf ( "Turning off alpha-beta pruning!\n" ) ; ; int var232 = 1 ; return var232 ; } else { } } else {  var1465 = 0 ; if ( strcmp ( var58 , "depth\n" ) ) { var1465 = 1 ; } else { } int var552 = var1465 ; ; if ( var552 ) { printf ( "Changing the depth!\n" ) ; ; int var65 = 1 ; label_55:
      |                                                                                                                                                                                                                                                                                                                    ^~~~~~~
      |                                                                                                                                                                                                                                                                                                                    var1452
output.c:61:430: error: ‘var0’ undeclared (first use in this function)
   61 |  } int var228 = var50 ; return var228 ; } int runCommand ( char * var58 ) {  var1461 = 0 ; if ( strcmp ( var58 , "debug on\n" ) ) { var1461 = 1 ; } else { } int var548 = var1461 ; ; if ( var548 ) { int var0 = 1 ; printf ( "Turning on debug mode!\n" ) ; ; int var229 = 1 ; return var229 ; } else { } else {  var1462 = 0 ; if ( strcmp ( var58 , "debug off\n" ) ) { var1462 = 1 ; } else { } int var549 = var1462 ; ; if ( var549 ) { var0 = 0 ; printf ( "Turning off debug mode!\n" ) ; ; int var230 = 1 ; return var230 ; } else { } } else {  var1463 = 0 ; if ( strcmp ( var58 , "pruning on\n" ) ) { var1463 = 1 ; } else { } int var550 = var1463 ; ; if ( var550 ) { int var1 = 1 ; printf ( "Turning on alpha-beta pruning!\n" ) ; ; int var231 = 1 ; return var231 ; } else { } } else {  var1464 = 0 ; if ( strcmp ( var58 , "pruning off\n" ) ) { var1464 = 1 ; } else { } int var551 = var1464 ; ; if ( var551 ) { var1 = 0 ; printf ( "Turning off alpha-beta pruning!\n" ) ; ; int var232 = 1 ; return var232 ; } else { } } else {  var1465 = 0 ; if ( strcmp ( var58 , "depth\n" ) ) { var1465 = 1 ; } else { } int var552 = var1465 ; ; if ( var552 ) { printf ( "Changing the depth!\n" ) ; ; int var65 = 1 ; label_55:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                              ^~~~
output.c:61:530: error: ‘else’ without a previous ‘if’
   61 |  } int var228 = var50 ; return var228 ; } int runCommand ( char * var58 ) {  var1461 = 0 ; if ( strcmp ( var58 , "debug on\n" ) ) { var1461 = 1 ; } else { } int var548 = var1461 ; ; if ( var548 ) { int var0 = 1 ; printf ( "Turning on debug mode!\n" ) ; ; int var229 = 1 ; return var229 ; } else { } else {  var1462 = 0 ; if ( strcmp ( var58 , "debug off\n" ) ) { var1462 = 1 ; } else { } int var549 = var1462 ; ; if ( var549 ) { var0 = 0 ; printf ( "Turning off debug mode!\n" ) ; ; int var230 = 1 ; return var230 ; } else { } } else {  var1463 = 0 ; if ( strcmp ( var58 , "pruning on\n" ) ) { var1463 = 1 ; } else { } int var550 = var1463 ; ; if ( var550 ) { int var1 = 1 ; printf ( "Turning on alpha-beta pruning!\n" ) ; ; int var231 = 1 ; return var231 ; } else { } } else {  var1464 = 0 ; if ( strcmp ( var58 , "pruning off\n" ) ) { var1464 = 1 ; } else { } int var551 = var1464 ; ; if ( var551 ) { var1 = 0 ; printf ( "Turning off alpha-beta pruning!\n" ) ; ; int var232 = 1 ; return var232 ; } else { } } else {  var1465 = 0 ; if ( strcmp ( var58 , "depth\n" ) ) { var1465 = 1 ; } else { } int var552 = var1465 ; ; if ( var552 ) { printf ( "Changing the depth!\n" ) ; ; int var65 = 1 ; label_55:
      |~~~
output.c:61:538: error: ‘var1463’ undeclared (first use in this function); did you mean ‘var1373’?
   61 |  } int var228 = var50 ; return var228 ; } int runCommand ( char * var58 ) {  var1461 = 0 ; if ( strcmp ( var58 , "debug on\n" ) ) { var1461 = 1 ; } else { } int var548 = var1461 ; ; if ( var548 ) { int var0 = 1 ; printf ( "Turning on debug mode!\n" ) ; ; int var229 = 1 ; return var229 ; } else { } else {  var1462 = 0 ; if ( strcmp ( var58 , "debug off\n" ) ) { var1462 = 1 ; } else { } int var549 = var1462 ; ; if ( var549 ) { var0 = 0 ; printf ( "Turning off debug mode!\n" ) ; ; int var230 = 1 ; return var230 ; } else { } } else {  var1463 = 0 ; if ( strcmp ( var58 , "pruning on\n" ) ) { var1463 = 1 ; } else { } int var550 = var1463 ; ; if ( var550 ) { int var1 = 1 ; printf ( "Turning on alpha-beta pruning!\n" ) ; ; int var231 = 1 ; return var231 ; } else { } } else {  var1464 = 0 ; if ( strcmp ( var58 , "pruning off\n" ) ) { var1464 = 1 ; } else { } int var551 = var1464 ; ; if ( var551 ) { var1 = 0 ; printf ( "Turning off alpha-beta pruning!\n" ) ; ; int var232 = 1 ; return var232 ; } else { } } else {  var1465 = 0 ; if ( strcmp ( var58 , "depth\n" ) ) { var1465 = 1 ; } else { } int var552 = var1465 ; ; if ( var552 ) { printf ( "Changing the depth!\n" ) ; ; int var65 = 1 ; label_55:
      |~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          var1373
output.c:61:772: error: ‘else’ without a previous ‘if’
   61 |  } int var228 = var50 ; return var228 ; } int runCommand ( char * var58 ) {  var1461 = 0 ; if ( strcmp ( var58 , "debug on\n" ) ) { var1461 = 1 ; } else { } int var548 = var1461 ; ; if ( var548 ) { int var0 = 1 ; printf ( "Turning on debug mode!\n" ) ; ; int var229 = 1 ; return var229 ; } else { } else {  var1462 = 0 ; if ( strcmp ( var58 , "debug off\n" ) ) { var1462 = 1 ; } else { } int var549 = var1462 ; ; if ( var549 ) { var0 = 0 ; printf ( "Turning off debug mode!\n" ) ; ; int var230 = 1 ; return var230 ; } else { } } else {  var1463 = 0 ; if ( strcmp ( var58 , "pruning on\n" ) ) { var1463 = 1 ; } else { } int var550 = var1463 ; ; if ( var550 ) { int var1 = 1 ; printf ( "Turning on alpha-beta pruning!\n" ) ; ; int var231 = 1 ; return var231 ; } else { } } else {  var1464 = 0 ; if ( strcmp ( var58 , "pruning off\n" ) ) { var1464 = 1 ; } else { } int var551 = var1464 ; ; if ( var551 ) { var1 = 0 ; printf ( "Turning off alpha-beta pruning!\n" ) ; ; int var232 = 1 ; return var232 ; } else { } } else {  var1465 = 0 ; if ( strcmp ( var58 , "depth\n" ) ) { var1465 = 1 ; } else { } int var552 = var1465 ; ; if ( var552 ) { printf ( "Changing the depth!\n" ) ; ; int var65 = 1 ; label_55:
      |~~~
output.c:61:780: error: ‘var1464’ undeclared (first use in this function); did you mean ‘var1459’?
   61 |  } int var228 = var50 ; return var228 ; } int runCommand ( char * var58 ) {  var1461 = 0 ; if ( strcmp ( var58 , "debug on\n" ) ) { var1461 = 1 ; } else { } int var548 = var1461 ; ; if ( var548 ) { int var0 = 1 ; printf ( "Turning on debug mode!\n" ) ; ; int var229 = 1 ; return var229 ; } else { } else {  var1462 = 0 ; if ( strcmp ( var58 , "debug off\n" ) ) { var1462 = 1 ; } else { } int var549 = var1462 ; ; if ( var549 ) { var0 = 0 ; printf ( "Turning off debug mode!\n" ) ; ; int var230 = 1 ; return var230 ; } else { } } else {  var1463 = 0 ; if ( strcmp ( var58 , "pruning on\n" ) ) { var1463 = 1 ; } else { } int var550 = var1463 ; ; if ( var550 ) { int var1 = 1 ; printf ( "Turning on alpha-beta pruning!\n" ) ; ; int var231 = 1 ; return var231 ; } else { } } else {  var1464 = 0 ; if ( strcmp ( var58 , "pruning off\n" ) ) { var1464 = 1 ; } else { } int var551 = var1464 ; ; if ( var551 ) { var1 = 0 ; printf ( "Turning off alpha-beta pruning!\n" ) ; ; int var232 = 1 ; return var232 ; } else { } } else {  var1465 = 0 ; if ( strcmp ( var58 , "depth\n" ) ) { var1465 = 1 ; } else { } int var552 = var1465 ; ; if ( var552 ) { printf ( "Changing the depth!\n" ) ; ; int var65 = 1 ; label_55:
      |~~~~~~
      |var1459
output.c:61:904: error: ‘var1’ undeclared (first use in this function); did you mean ‘var551’?
   61 |  } int var228 = var50 ; return var228 ; } int runCommand ( char * var58 ) {  var1461 = 0 ; if ( strcmp ( var58 , "debug on\n" ) ) { var1461 = 1 ; } else { } int var548 = var1461 ; ; if ( var548 ) { int var0 = 1 ; printf ( "Turning on debug mode!\n" ) ; ; int var229 = 1 ; return var229 ; } else { } else {  var1462 = 0 ; if ( strcmp ( var58 , "debug off\n" ) ) { var1462 = 1 ; } else { } int var549 = var1462 ; ; if ( var549 ) { var0 = 0 ; printf ( "Turning off debug mode!\n" ) ; ; int var230 = 1 ; return var230 ; } else { } } else {  var1463 = 0 ; if ( strcmp ( var58 , "pruning on\n" ) ) { var1463 = 1 ; } else { } int var550 = var1463 ; ; if ( var550 ) { int var1 = 1 ; printf ( "Turning on alpha-beta pruning!\n" ) ; ; int var231 = 1 ; return var231 ; } else { } } else {  var1464 = 0 ; if ( strcmp ( var58 , "pruning off\n" ) ) { var1464 = 1 ; } else { } int var551 = var1464 ; ; if ( var551 ) { var1 = 0 ; printf ( "Turning off alpha-beta pruning!\n" ) ; ; int var232 = 1 ; return var232 ; } else { } } else {  var1465 = 0 ; if ( strcmp ( var58 , "depth\n" ) ) { var1465 = 1 ; } else { } int var552 = var1465 ; ; if ( var552 ) { printf ( "Changing the depth!\n" ) ; ; int var65 = 1 ; label_55:
      |~~~
      |var551
output.c:61:1012: error: ‘else’ without a previous ‘if’
   61 |  } int var228 = var50 ; return var228 ; } int runCommand ( char * var58 ) {  var1461 = 0 ; if ( strcmp ( var58 , "debug on\n" ) ) { var1461 = 1 ; } else { } int var548 = var1461 ; ; if ( var548 ) { int var0 = 1 ; printf ( "Turning on debug mode!\n" ) ; ; int var229 = 1 ; return var229 ; } else { } else {  var1462 = 0 ; if ( strcmp ( var58 , "debug off\n" ) ) { var1462 = 1 ; } else { } int var549 = var1462 ; ; if ( var549 ) { var0 = 0 ; printf ( "Turning off debug mode!\n" ) ; ; int var230 = 1 ; return var230 ; } else { } } else {  var1463 = 0 ; if ( strcmp ( var58 , "pruning on\n" ) ) { var1463 = 1 ; } else { } int var550 = var1463 ; ; if ( var550 ) { int var1 = 1 ; printf ( "Turning on alpha-beta pruning!\n" ) ; ; int var231 = 1 ; return var231 ; } else { } } else {  var1464 = 0 ; if ( strcmp ( var58 , "pruning off\n" ) ) { var1464 = 1 ; } else { } int var551 = var1464 ; ; if ( var551 ) { var1 = 0 ; printf ( "Turning off alpha-beta pruning!\n" ) ; ; int var232 = 1 ; return var232 ; } else { } } else {  var1465 = 0 ; if ( strcmp ( var58 , "depth\n" ) ) { var1465 = 1 ; } else { } int var552 = var1465 ; ; if ( var552 ) { printf ( "Changing the depth!\n" ) ; ; int var65 = 1 ; label_55:
      |~~~
output.c:61:1020: error: ‘var1465’ undeclared (first use in this function); did you mean ‘var1455’?
   61 |  } int var228 = var50 ; return var228 ; } int runCommand ( char * var58 ) {  var1461 = 0 ; if ( strcmp ( var58 , "debug on\n" ) ) { var1461 = 1 ; } else { } int var548 = var1461 ; ; if ( var548 ) { int var0 = 1 ; printf ( "Turning on debug mode!\n" ) ; ; int var229 = 1 ; return var229 ; } else { } else {  var1462 = 0 ; if ( strcmp ( var58 , "debug off\n" ) ) { var1462 = 1 ; } else { } int var549 = var1462 ; ; if ( var549 ) { var0 = 0 ; printf ( "Turning off debug mode!\n" ) ; ; int var230 = 1 ; return var230 ; } else { } } else {  var1463 = 0 ; if ( strcmp ( var58 , "pruning on\n" ) ) { var1463 = 1 ; } else { } int var550 = var1463 ; ; if ( var550 ) { int var1 = 1 ; printf ( "Turning on alpha-beta pruning!\n" ) ; ; int var231 = 1 ; return var231 ; } else { } } else {  var1464 = 0 ; if ( strcmp ( var58 , "pruning off\n" ) ) { var1464 = 1 ; } else { } int var551 = var1464 ; ; if ( var551 ) { var1 = 0 ; printf ( "Turning off alpha-beta pruning!\n" ) ; ; int var232 = 1 ; return var232 ; } else { } } else {  var1465 = 0 ; if ( strcmp ( var58 , "depth\n" ) ) { var1465 = 1 ; } else { } int var552 = var1465 ; ; if ( var552 ) { printf ( "Changing the depth!\n" ) ; ; int var65 = 1 ; label_55:
      |~~~~~~
      |var1455
output.c:62:120: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before numeric constant
   62 |  if ( var65 ) { printf ( "What would you like the new depth to be? (odd to end on min layer): " ) ; ; char var66 [ 0 ] 64 ) ; fgets ( var66 , 64 , var68 ) ; ; int var69 = atoi ( var66 ) ; ;  var1377 = var69 > 0 ;  var1466 = 0 ; if ( var1377 ) { var1466 = 1 ; } else { }  var1378 = var1466 ;  var1379 = int var553 = var1378 ; if ( var553 ) { printf ( "Invalid Depth! Please try again.\n" ) ; ; } else { int var2 = var69 ; printf ( "Search depth has been changed to %d!\n" , var2 ) ; ; var65 = 0 ; } goto label_55 ; } else { } label_56:
      |                                                                                                                        ^~
output.c:62:122: error: expected ‘;’ before ‘)’ token
   62 |  if ( var65 ) { printf ( "What would you like the new depth to be? (odd to end on min layer): " ) ; ; char var66 [ 0 ] 64 ) ; fgets ( var66 , 64 , var68 ) ; ; int var69 = atoi ( var66 ) ; ;  var1377 = var69 > 0 ;  var1466 = 0 ; if ( var1377 ) { var1466 = 1 ; } else { }  var1378 = var1466 ;  var1379 = int var553 = var1378 ; if ( var553 ) { printf ( "Invalid Depth! Please try again.\n" ) ; ; } else { int var2 = var69 ; printf ( "Search depth has been changed to %d!\n" , var2 ) ; ; var65 = 0 ; } goto label_55 ; } else { } label_56:
      |                                                                                                                          ^~
      |                                                                                                                          ;
output.c:62:123: error: expected statement before ‘)’ token
   62 |  if ( var65 ) { printf ( "What would you like the new depth to be? (odd to end on min layer): " ) ; ; char var66 [ 0 ] 64 ) ; fgets ( var66 , 64 , var68 ) ; ; int var69 = atoi ( var66 ) ; ;  var1377 = var69 > 0 ;  var1466 = 0 ; if ( var1377 ) { var1466 = 1 ; } else { }  var1378 = var1466 ;  var1379 = int var553 = var1378 ; if ( var553 ) { printf ( "Invalid Depth! Please try again.\n" ) ; ; } else { int var2 = var69 ; printf ( "Search depth has been changed to %d!\n" , var2 ) ; ; var65 = 0 ; } goto label_55 ; } else { } label_56:
      |                                                                                                                           ^
output.c:62:135: error: ‘var66’ undeclared (first use in this function); did you mean ‘var65’?
   62 |  if ( var65 ) { printf ( "What would you like the new depth to be? (odd to end on min layer): " ) ; ; char var66 [ 0 ] 64 ) ; fgets ( var66 , 64 , var68 ) ; ; int var69 = atoi ( var66 ) ; ;  var1377 = var69 > 0 ;  var1466 = 0 ; if ( var1377 ) { var1466 = 1 ; } else { }  var1378 = var1466 ;  var1379 = int var553 = var1378 ; if ( var553 ) { printf ( "Invalid Depth! Please try again.\n" ) ; ; } else { int var2 = var69 ; printf ( "Search depth has been changed to %d!\n" , var2 ) ; ; var65 = 0 ; } goto label_55 ; } else { } label_56:
      |                                                                                                                                       ^~~~~
      |                                                                                                                                       var65
output.c:62:148: error: ‘var68’ undeclared (first use in this function); did you mean ‘var65’?
   62 |  if ( var65 ) { printf ( "What would you like the new depth to be? (odd to end on min layer): " ) ; ; char var66 [ 0 ] 64 ) ; fgets ( var66 , 64 , var68 ) ; ; int var69 = atoi ( var66 ) ; ;  var1377 = var69 > 0 ;  var1466 = 0 ; if ( var1377 ) { var1466 = 1 ; } else { }  var1378 = var1466 ;  var1379 = int var553 = var1378 ; if ( var553 ) { printf ( "Invalid Depth! Please try again.\n" ) ; ; } else { int var2 = var69 ; printf ( "Search depth has been changed to %d!\n" , var2 ) ; ; var65 = 0 ; } goto label_55 ; } else { } label_56:
      |                                                                                                                                                    ^~~~~
      |                                                                                                                                                    var65
output.c:62:192: error: ‘var1377’ undeclared (first use in this function); did you mean ‘var1317’?
   62 |  if ( var65 ) { printf ( "What would you like the new depth to be? (odd to end on min layer): " ) ; ; char var66 [ 0 ] 64 ) ; fgets ( var66 , 64 , var68 ) ; ; int var69 = atoi ( var66 ) ; ;  var1377 = var69 > 0 ;  var1466 = 0 ; if ( var1377 ) { var1466 = 1 ; } else { }  var1378 = var1466 ;  var1379 = int var553 = var1378 ; if ( var553 ) { printf ( "Invalid Depth! Please try again.\n" ) ; ; } else { int var2 = var69 ; printf ( "Search depth has been changed to %d!\n" , var2 ) ; ; var65 = 0 ; } goto label_55 ; } else { } label_56:
      |                                                                                                                                                                                                ^~~~~~~
      |                                                                                                                                                                                                var1317
output.c:62:215: error: ‘var1466’ undeclared (first use in this function); did you mean ‘var1316’?
   62 |  if ( var65 ) { printf ( "What would you like the new depth to be? (odd to end on min layer): " ) ; ; char var66 [ 0 ] 64 ) ; fgets ( var66 , 64 , var68 ) ; ; int var69 = atoi ( var66 ) ; ;  var1377 = var69 > 0 ;  var1466 = 0 ; if ( var1377 ) { var1466 = 1 ; } else { }  var1378 = var1466 ;  var1379 = int var553 = var1378 ; if ( var553 ) { printf ( "Invalid Depth! Please try again.\n" ) ; ; } else { int var2 = var69 ; printf ( "Search depth has been changed to %d!\n" , var2 ) ; ; var65 = 0 ; } goto label_55 ; } else { } label_56:
      |                                                                                                                                                                                                                       ^~~~~~~
      |                                                                                                                                                                                                                       var1316
output.c:62:272: error: ‘var1378’ undeclared (first use in this function); did you mean ‘var1373’?
   62 |  if ( var65 ) { printf ( "What would you like the new depth to be? (odd to end on min layer): " ) ; ; char var66 [ 0 ] 64 ) ; fgets ( var66 , 64 , var68 ) ; ; int var69 = atoi ( var66 ) ; ;  var1377 = var69 > 0 ;  var1466 = 0 ; if ( var1377 ) { var1466 = 1 ; } else { }  var1378 = var1466 ;  var1379 = int var553 = var1378 ; if ( var553 ) { printf ( "Invalid Depth! Please try again.\n" ) ; ; } else { int var2 = var69 ; printf ( "Search depth has been changed to %d!\n" , var2 ) ; ; var65 = 0 ; } goto label_55 ; } else { } label_56:
      |                                                                                                                                                                                                                                                                                ^~~~~~~
      |                                                                                                                                                                                                                                                                                var1373
output.c:62:293: error: ‘var1379’ undeclared (first use in this function); did you mean ‘var1373’?
   62 |  if ( var65 ) { printf ( "What would you like the new depth to be? (odd to end on min layer): " ) ; ; char var66 [ 0 ] 64 ) ; fgets ( var66 , 64 , var68 ) ; ; int var69 = atoi ( var66 ) ; ;  var1377 = var69 > 0 ;  var1466 = 0 ; if ( var1377 ) { var1466 = 1 ; } else { }  var1378 = var1466 ;  var1379 = int var553 = var1378 ; if ( var553 ) { printf ( "Invalid Depth! Please try again.\n" ) ; ; } else { int var2 = var69 ; printf ( "Search depth has been changed to %d!\n" , var2 ) ; ; var65 = 0 ; } goto label_55 ; } else { } label_56:
      |                                                                                                                                                                                                                                                                                                     ^~~~~~~
      |                                                                                                                                                                                                                                                                                                     var1373
output.c:62:303: error: expected expression before ‘int’
   62 |  if ( var65 ) { printf ( "What would you like the new depth to be? (odd to end on min layer): " ) ; ; char var66 [ 0 ] 64 ) ; fgets ( var66 , 64 , var68 ) ; ; int var69 = atoi ( var66 ) ; ;  var1377 = var69 > 0 ;  var1466 = 0 ; if ( var1377 ) { var1466 = 1 ; } else { }  var1378 = var1466 ;  var1379 = int var553 = var1378 ; if ( var553 ) { printf ( "Invalid Depth! Please try again.\n" ) ; ; } else { int var2 = var69 ; printf ( "Search depth has been changed to %d!\n" , var2 ) ; ; var65 = 0 ; } goto label_55 ; } else { } label_56:
      |                                                                                                                                                                                                                                                                                                               ^~~
output.c:62:331: error: ‘var553’ undeclared (first use in this function); did you mean ‘var552’?
   62 |  if ( var65 ) { printf ( "What would you like the new depth to be? (odd to end on min layer): " ) ; ; char var66 [ 0 ] 64 ) ; fgets ( var66 , 64 , var68 ) ; ; int var69 = atoi ( var66 ) ; ;  var1377 = var69 > 0 ;  var1466 = 0 ; if ( var1377 ) { var1466 = 1 ; } else { }  var1378 = var1466 ;  var1379 = int var553 = var1378 ; if ( var553 ) { printf ( "Invalid Depth! Please try again.\n" ) ; ; } else { int var2 = var69 ; printf ( "Search depth has been changed to %d!\n" , var2 ) ; ; var65 = 0 ; } goto label_55 ; } else { } label_56:
      |                                                                                                                                                                                                                                                                                                                                           ^~~~~~
      |                                                                                                                                                                                                                                                                                                                                           var552
output.c:63:48: error: ‘else’ without a previous ‘if’
   63 |  int var233 = 1 ; return var233 ; } else { } } else {  var1467 = 0 ; if ( strcmp ( var58 , "help\n" ) ) { var1467 = 1 ; } else { } int var554 = var1467 ; ; if ( var554 ) { printf ( "Printing Help!\n" ) ; ; printf ( "debug [on/off] - change debug level\n" ) ; ; printf ( "pruning [on/off] - turn alpha-beta pruning on/off\n" ) ; ; printf ( "depth - change the depth of the search\n" ) ; ; printf ( "help - print this information\n" ) ; ; int var234 = 1 ; return var234 ; } else { } } else {  var1468 = 0 ; if ( strcmp ( var58 , "settings\n" ) ) { var1468 = 1 ; } else { } int var555 = var1468 ; ; if ( var555 ) { printf ( "Displaying settings!\n" ) ; ; printf ( "DEBUG: %d\n" , var0 ) ; ; printf ( "PRUNING: %d\n" , var1 ) ; ; printf ( "DEPTH: %d\n" , var2 ) ; ; int var235 = 1 ; return var235 ; } else { } } int var236 = 0 ; return var236 ; } int humanPlayer ( int var74 , int * var75 ) { int var76 ; char var77 [ 0 ] 64 ) ; label_57:
      |                                                ^~~~
output.c:63:56: error: ‘var1467’ undeclared (first use in this function); did you mean ‘var1317’?
   63 |  int var233 = 1 ; return var233 ; } else { } } else {  var1467 = 0 ; if ( strcmp ( var58 , "help\n" ) ) { var1467 = 1 ; } else { } int var554 = var1467 ; ; if ( var554 ) { printf ( "Printing Help!\n" ) ; ; printf ( "debug [on/off] - change debug level\n" ) ; ; printf ( "pruning [on/off] - turn alpha-beta pruning on/off\n" ) ; ; printf ( "depth - change the depth of the search\n" ) ; ; printf ( "help - print this information\n" ) ; ; int var234 = 1 ; return var234 ; } else { } } else {  var1468 = 0 ; if ( strcmp ( var58 , "settings\n" ) ) { var1468 = 1 ; } else { } int var555 = var1468 ; ; if ( var555 ) { printf ( "Displaying settings!\n" ) ; ; printf ( "DEBUG: %d\n" , var0 ) ; ; printf ( "PRUNING: %d\n" , var1 ) ; ; printf ( "DEPTH: %d\n" , var2 ) ; ; int var235 = 1 ; return var235 ; } else { } } int var236 = 0 ; return var236 ; } int humanPlayer ( int var74 , int * var75 ) { int var76 ; char var77 [ 0 ] 64 ) ; label_57:
      |                                                        ^~~~~~~
      |                                                        var1317
output.c:63:484: error: ‘else’ without a previous ‘if’
   63 |  int var233 = 1 ; return var233 ; } else { } } else {  var1467 = 0 ; if ( strcmp ( var58 , "help\n" ) ) { var1467 = 1 ; } else { } int var554 = var1467 ; ; if ( var554 ) { printf ( "Printing Help!\n" ) ; ; printf ( "debug [on/off] - change debug level\n" ) ; ; printf ( "pruning [on/off] - turn alpha-beta pruning on/off\n" ) ; ; printf ( "depth - change the depth of the search\n" ) ; ; printf ( "help - print this information\n" ) ; ; int var234 = 1 ; return var234 ; } else { } } else {  var1468 = 0 ; if ( strcmp ( var58 , "settings\n" ) ) { var1468 = 1 ; } else { } int var555 = var1468 ; ; if ( var555 ) { printf ( "Displaying settings!\n" ) ; ; printf ( "DEBUG: %d\n" , var0 ) ; ; printf ( "PRUNING: %d\n" , var1 ) ; ; printf ( "DEPTH: %d\n" , var2 ) ; ; int var235 = 1 ; return var235 ; } else { } } int var236 = 0 ; return var236 ; } int humanPlayer ( int var74 , int * var75 ) { int var76 ; char var77 [ 0 ] 64 ) ; label_57:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ^~~~
output.c:63:492: error: ‘var1468’ undeclared (first use in this function); did you mean ‘var548’?
   63 |  int var233 = 1 ; return var233 ; } else { } } else {  var1467 = 0 ; if ( strcmp ( var58 , "help\n" ) ) { var1467 = 1 ; } else { } int var554 = var1467 ; ; if ( var554 ) { printf ( "Printing Help!\n" ) ; ; printf ( "debug [on/off] - change debug level\n" ) ; ; printf ( "pruning [on/off] - turn alpha-beta pruning on/off\n" ) ; ; printf ( "depth - change the depth of the search\n" ) ; ; printf ( "help - print this information\n" ) ; ; int var234 = 1 ; return var234 ; } else { } } else {  var1468 = 0 ; if ( strcmp ( var58 , "settings\n" ) ) { var1468 = 1 ; } else { } int var555 = var1468 ; ; if ( var555 ) { printf ( "Displaying settings!\n" ) ; ; printf ( "DEBUG: %d\n" , var0 ) ; ; printf ( "PRUNING: %d\n" , var1 ) ; ; printf ( "DEPTH: %d\n" , var2 ) ; ; int var235 = 1 ; return var235 ; } else { } } int var236 = 0 ; return var236 ; } int humanPlayer ( int var74 , int * var75 ) { int var76 ; char var77 [ 0 ] 64 ) ; label_57:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ^~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            var548
output.c:63:752: error: ‘var2’ undeclared (first use in this function); did you mean ‘var32’?
   63 |  int var233 = 1 ; return var233 ; } else { } } else {  var1467 = 0 ; if ( strcmp ( var58 , "help\n" ) ) { var1467 = 1 ; } else { } int var554 = var1467 ; ; if ( var554 ) { printf ( "Printing Help!\n" ) ; ; printf ( "debug [on/off] - change debug level\n" ) ; ; printf ( "pruning [on/off] - turn alpha-beta pruning on/off\n" ) ; ; printf ( "depth - change the depth of the search\n" ) ; ; printf ( "help - print this information\n" ) ; ; int var234 = 1 ; return var234 ; } else { } } else {  var1468 = 0 ; if ( strcmp ( var58 , "settings\n" ) ) { var1468 = 1 ; } else { } int var555 = var1468 ; ; if ( var555 ) { printf ( "Displaying settings!\n" ) ; ; printf ( "DEBUG: %d\n" , var0 ) ; ; printf ( "PRUNING: %d\n" , var1 ) ; ; printf ( "DEPTH: %d\n" , var2 ) ; ; int var235 = 1 ; return var235 ; } else { } } int var236 = 0 ; return var236 ; } int humanPlayer ( int var74 , int * var75 ) { int var76 ; char var77 [ 0 ] 64 ) ; label_57:
      |~~~
      |var32
output.c: In function ‘humanPlayer’:
output.c:63:919: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before numeric constant
   63 |  int var233 = 1 ; return var233 ; } else { } } else {  var1467 = 0 ; if ( strcmp ( var58 , "help\n" ) ) { var1467 = 1 ; } else { } int var554 = var1467 ; ; if ( var554 ) { printf ( "Printing Help!\n" ) ; ; printf ( "debug [on/off] - change debug level\n" ) ; ; printf ( "pruning [on/off] - turn alpha-beta pruning on/off\n" ) ; ; printf ( "depth - change the depth of the search\n" ) ; ; printf ( "help - print this information\n" ) ; ; int var234 = 1 ; return var234 ; } else { } } else {  var1468 = 0 ; if ( strcmp ( var58 , "settings\n" ) ) { var1468 = 1 ; } else { } int var555 = var1468 ; ; if ( var555 ) { printf ( "Displaying settings!\n" ) ; ; printf ( "DEBUG: %d\n" , var0 ) ; ; printf ( "PRUNING: %d\n" , var1 ) ; ; printf ( "DEPTH: %d\n" , var2 ) ; ; int var235 = 1 ; return var235 ; } else { } } int var236 = 0 ; return var236 ; } int humanPlayer ( int var74 , int * var75 ) { int var76 ; char var77 [ 0 ] 64 ) ; label_57:
      |~
output.c:63:921: error: expected ‘;’ before ‘)’ token
   63 |  int var233 = 1 ; return var233 ; } else { } } else {  var1467 = 0 ; if ( strcmp ( var58 , "help\n" ) ) { var1467 = 1 ; } else { } int var554 = var1467 ; ; if ( var554 ) { printf ( "Printing Help!\n" ) ; ; printf ( "debug [on/off] - change debug level\n" ) ; ; printf ( "pruning [on/off] - turn alpha-beta pruning on/off\n" ) ; ; printf ( "depth - change the depth of the search\n" ) ; ; printf ( "help - print this information\n" ) ; ; int var234 = 1 ; return var234 ; } else { } } else {  var1468 = 0 ; if ( strcmp ( var58 , "settings\n" ) ) { var1468 = 1 ; } else { } int var555 = var1468 ; ; if ( var555 ) { printf ( "Displaying settings!\n" ) ; ; printf ( "DEBUG: %d\n" , var0 ) ; ; printf ( "PRUNING: %d\n" , var1 ) ; ; printf ( "DEPTH: %d\n" , var2 ) ; ; int var235 = 1 ; return var235 ; } else { } } int var236 = 0 ; return var236 ; } int humanPlayer ( int var74 , int * var75 ) { int var76 ; char var77 [ 0 ] 64 ) ; label_57:
      |~
      |
output.c:63:922: error: expected statement before ‘)’ token
   63 |  int var233 = 1 ; return var233 ; } else { } } else {  var1467 = 0 ; if ( strcmp ( var58 , "help\n" ) ) { var1467 = 1 ; } else { } int var554 = var1467 ; ; if ( var554 ) { printf ( "Printing Help!\n" ) ; ; printf ( "debug [on/off] - change debug level\n" ) ; ; printf ( "pruning [on/off] - turn alpha-beta pruning on/off\n" ) ; ; printf ( "depth - change the depth of the search\n" ) ; ; printf ( "help - print this information\n" ) ; ; int var234 = 1 ; return var234 ; } else { } } else {  var1468 = 0 ; if ( strcmp ( var58 , "settings\n" ) ) { var1468 = 1 ; } else { } int var555 = var1468 ; ; if ( var555 ) { printf ( "Displaying settings!\n" ) ; ; printf ( "DEBUG: %d\n" , var0 ) ; ; printf ( "PRUNING: %d\n" , var1 ) ; ; printf ( "DEPTH: %d\n" , var2 ) ; ; int var235 = 1 ; return var235 ; } else { } } int var236 = 0 ; return var236 ; } int humanPlayer ( int var74 , int * var75 ) { int var76 ; char var77 [ 0 ] 64 ) ; label_57:
      |
output.c:64:87: error: ‘var77’ undeclared (first use in this function); did you mean ‘var76’?
   64 |  if ( 1 ) { printf ( "It is your turn! Where would you like to play?: " ) ; ; fgets ( var77 , 64 , var80 ) ; ; var77 [ 0 ] 63 ) = '\0' ; var76 = atoi ( var77 ) ; ; int var556 = var76 == 0 ; if ( var556 ) { int var82 = runCommand ( var77 ) ; ;  var1469 = 0 ; if ( var82 ) { var1469 = 1 ; } else { } int var557 = var1469 ; if ( var557 ) { printf ( "Invalid Response. Please try again...\n" ) ; ; } else { } } else { int var237 = var76 - 1 ; return var237 ; } goto label_57 ; } else { } label_58:
      |                                                                                       ^~~~~
      |                                                                                       var76
output.c:64:100: error: ‘var80’ undeclared (first use in this function); did you mean ‘var890’?
   64 |  if ( 1 ) { printf ( "It is your turn! Where would you like to play?: " ) ; ; fgets ( var77 , 64 , var80 ) ; ; var77 [ 0 ] 63 ) = '\0' ; var76 = atoi ( var77 ) ; ; int var556 = var76 == 0 ; if ( var556 ) { int var82 = runCommand ( var77 ) ; ;  var1469 = 0 ; if ( var82 ) { var1469 = 1 ; } else { } int var557 = var1469 ; if ( var557 ) { printf ( "Invalid Response. Please try again...\n" ) ; ; } else { } } else { int var237 = var76 - 1 ; return var237 ; } goto label_57 ; } else { } label_58:
      |                                                                                                    ^~~~~
      |                                                                                                    var890
output.c:64:123: error: expected ‘;’ before numeric constant
   64 |  if ( 1 ) { printf ( "It is your turn! Where would you like to play?: " ) ; ; fgets ( var77 , 64 , var80 ) ; ; var77 [ 0 ] 63 ) = '\0' ; var76 = atoi ( var77 ) ; ; int var556 = var76 == 0 ; if ( var556 ) { int var82 = runCommand ( var77 ) ; ;  var1469 = 0 ; if ( var82 ) { var1469 = 1 ; } else { } int var557 = var1469 ; if ( var557 ) { printf ( "Invalid Response. Please try again...\n" ) ; ; } else { } } else { int var237 = var76 - 1 ; return var237 ; } goto label_57 ; } else { } label_58:
      |                                                                                                                           ^~~
      |                                                                                                                           ;
output.c:64:127: error: expected statement before ‘)’ token
   64 |  if ( 1 ) { printf ( "It is your turn! Where would you like to play?: " ) ; ; fgets ( var77 , 64 , var80 ) ; ; var77 [ 0 ] 63 ) = '\0' ; var76 = atoi ( var77 ) ; ; int var556 = var76 == 0 ; if ( var556 ) { int var82 = runCommand ( var77 ) ; ;  var1469 = 0 ; if ( var82 ) { var1469 = 1 ; } else { } int var557 = var1469 ; if ( var557 ) { printf ( "Invalid Response. Please try again...\n" ) ; ; } else { } } else { int var237 = var76 - 1 ; return var237 ; } goto label_57 ; } else { } label_58:
      |                                                                                                                               ^
output.c:64:129: error: expected expression before ‘=’ token
   64 |  if ( 1 ) { printf ( "It is your turn! Where would you like to play?: " ) ; ; fgets ( var77 , 64 , var80 ) ; ; var77 [ 0 ] 63 ) = '\0' ; var76 = atoi ( var77 ) ; ; int var556 = var76 == 0 ; if ( var556 ) { int var82 = runCommand ( var77 ) ; ;  var1469 = 0 ; if ( var82 ) { var1469 = 1 ; } else { } int var557 = var1469 ; if ( var557 ) { printf ( "Invalid Response. Please try again...\n" ) ; ; } else { } } else { int var237 = var76 - 1 ; return var237 ; } goto label_57 ; } else { } label_58:
      |                                                                                                                                 ^
output.c:64:245: error: ‘var1469’ undeclared (first use in this function); did you mean ‘var1459’?
   64 |  if ( 1 ) { printf ( "It is your turn! Where would you like to play?: " ) ; ; fgets ( var77 , 64 , var80 ) ; ; var77 [ 0 ] 63 ) = '\0' ; var76 = atoi ( var77 ) ; ; int var556 = var76 == 0 ; if ( var556 ) { int var82 = runCommand ( var77 ) ; ;  var1469 = 0 ; if ( var82 ) { var1469 = 1 ; } else { } int var557 = var1469 ; if ( var557 ) { printf ( "Invalid Response. Please try again...\n" ) ; ; } else { } } else { int var237 = var76 - 1 ; return var237 ; } goto label_57 ; } else { } label_58:
      |                                                                                                                                                                                                                                                     ^~~~~~~
      |                                                                                                                                                                                                                                                     var1459
output.c: In function ‘placePiece’:
output.c:65:192: error: expected ‘;’ before ‘var85’
   65 |  } int placePiece ( int * var84 , int var85 , int var86 ) { int var87 = 0 ; int var88 = var86 ^ 1 ; int var89 = var85 ; int var90 = var89 - 8 ; int var91 = var90 ; int var92 = 0 ; var84 [ 0 ] var85 ) = var86 ; label_59:
      |                                                                                                                                                                                                ^~~~~~
      |                                                                                                                                                                                                ;
output.c:65:199: error: expected statement before ‘)’ token
   65 |  } int placePiece ( int * var84 , int var85 , int var86 ) { int var87 = 0 ; int var88 = var86 ^ 1 ; int var89 = var85 ; int var90 = var89 - 8 ; int var91 = var90 ; int var92 = 0 ; var84 [ 0 ] var85 ) = var86 ; label_59:
      |                                                                                                                                                                                                       ^
output.c:65:201: error: expected expression before ‘=’ token
   65 |  } int placePiece ( int * var84 , int var85 , int var86 ) { int var87 = 0 ; int var88 = var86 ^ 1 ; int var89 = var85 ; int var90 = var89 - 8 ; int var91 = var90 ; int var92 = 0 ; var84 [ 0 ] var85 ) = var86 ; label_59:
      |                                                                                                                                                                                                         ^
output.c:66:3: error: ‘var1380’ undeclared (first use in this function); did you mean ‘var1310’?
   66 |   var1380 = var90 < 0 ;  var1470 = 0 ; if ( var1380 ) { var1470 = 1 ; } else { }  var1381 = var1470 ;  var910 = var84 [ 0 ] ;  var911 = var910 == var86 ;  var1318 = 0 ; if ( var92 ) { if ( var911 ) { var1318 = 1 ; } else { } } else { }  var912 = var1318 ;  var913 = int var558 = var912 ; if ( var558 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 8 ) ; var87 ; var87 = var87 + 1 ; } label_61:
      |   ^~~~~~~
      |   var1310
output.c:66:26: error: ‘var1470’ undeclared (first use in this function); did you mean ‘var1373’?
   66 |   var1380 = var90 < 0 ;  var1470 = 0 ; if ( var1380 ) { var1470 = 1 ; } else { }  var1381 = var1470 ;  var910 = var84 [ 0 ] ;  var911 = var910 == var86 ;  var1318 = 0 ; if ( var92 ) { if ( var911 ) { var1318 = 1 ; } else { } } else { }  var912 = var1318 ;  var913 = int var558 = var912 ; if ( var558 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 8 ) ; var87 ; var87 = var87 + 1 ; } label_61:
      |                          ^~~~~~~
      |                          var1373
output.c:66:83: error: ‘var1381’ undeclared (first use in this function); did you mean ‘var1311’?
   66 |   var1380 = var90 < 0 ;  var1470 = 0 ; if ( var1380 ) { var1470 = 1 ; } else { }  var1381 = var1470 ;  var910 = var84 [ 0 ] ;  var911 = var910 == var86 ;  var1318 = 0 ; if ( var92 ) { if ( var911 ) { var1318 = 1 ; } else { } } else { }  var912 = var1318 ;  var913 = int var558 = var912 ; if ( var558 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 8 ) ; var87 ; var87 = var87 + 1 ; } label_61:
      |                                                                                   ^~~~~~~
      |                                                                                   var1311
output.c:66:104: error: ‘var910’ undeclared (first use in this function); did you mean ‘var91’?
   66 |   var1380 = var90 < 0 ;  var1470 = 0 ; if ( var1380 ) { var1470 = 1 ; } else { }  var1381 = var1470 ;  var910 = var84 [ 0 ] ;  var911 = var910 == var86 ;  var1318 = 0 ; if ( var92 ) { if ( var911 ) { var1318 = 1 ; } else { } } else { }  var912 = var1318 ;  var913 = int var558 = var912 ; if ( var558 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 8 ) ; var87 ; var87 = var87 + 1 ; } label_61:
      |                                                                                                        ^~~~~~
      |                                                                                                        var91
output.c:66:128: error: ‘var911’ undeclared (first use in this function); did you mean ‘var91’?
   66 |   var1380 = var90 < 0 ;  var1470 = 0 ; if ( var1380 ) { var1470 = 1 ; } else { }  var1381 = var1470 ;  var910 = var84 [ 0 ] ;  var911 = var910 == var86 ;  var1318 = 0 ; if ( var92 ) { if ( var911 ) { var1318 = 1 ; } else { } } else { }  var912 = var1318 ;  var913 = int var558 = var912 ; if ( var558 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 8 ) ; var87 ; var87 = var87 + 1 ; } label_61:
      |                                                                                                                                ^~~~~~
      |                                                                                                                                var91
output.c:66:156: error: ‘var1318’ undeclared (first use in this function); did you mean ‘var1317’?
   66 |   var1380 = var90 < 0 ;  var1470 = 0 ; if ( var1380 ) { var1470 = 1 ; } else { }  var1381 = var1470 ;  var910 = var84 [ 0 ] ;  var911 = var910 == var86 ;  var1318 = 0 ; if ( var92 ) { if ( var911 ) { var1318 = 1 ; } else { } } else { }  var912 = var1318 ;  var913 = int var558 = var912 ; if ( var558 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 8 ) ; var87 ; var87 = var87 + 1 ; } label_61:
      |                                                                                                                                                            ^~~~~~~
      |                                                                                                                                                            var1317
output.c:66:238: error: ‘var912’ undeclared (first use in this function); did you mean ‘var92’?
   66 |   var1380 = var90 < 0 ;  var1470 = 0 ; if ( var1380 ) { var1470 = 1 ; } else { }  var1381 = var1470 ;  var910 = var84 [ 0 ] ;  var911 = var910 == var86 ;  var1318 = 0 ; if ( var92 ) { if ( var911 ) { var1318 = 1 ; } else { } } else { }  var912 = var1318 ;  var913 = int var558 = var912 ; if ( var558 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 8 ) ; var87 ; var87 = var87 + 1 ; } label_61:
      |                                                                                                                                                                                                                                              ^~~~~~
      |                                                                                                                                                                                                                                              var92
output.c:66:258: error: ‘var913’ undeclared (first use in this function); did you mean ‘var91’?
   66 |   var1380 = var90 < 0 ;  var1470 = 0 ; if ( var1380 ) { var1470 = 1 ; } else { }  var1381 = var1470 ;  var910 = var84 [ 0 ] ;  var911 = var910 == var86 ;  var1318 = 0 ; if ( var92 ) { if ( var911 ) { var1318 = 1 ; } else { } } else { }  var912 = var1318 ;  var913 = int var558 = var912 ; if ( var558 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 8 ) ; var87 ; var87 = var87 + 1 ; } label_61:
      |                                                                                                                                                                                                                                                                  ^~~~~~
      |                                                                                                                                                                                                                                                                  var91
output.c:66:267: error: expected expression before ‘int’
   66 |   var1380 = var90 < 0 ;  var1470 = 0 ; if ( var1380 ) { var1470 = 1 ; } else { }  var1381 = var1470 ;  var910 = var84 [ 0 ] ;  var911 = var910 == var86 ;  var1318 = 0 ; if ( var92 ) { if ( var911 ) { var1318 = 1 ; } else { } } else { }  var912 = var1318 ;  var913 = int var558 = var912 ; if ( var558 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 8 ) ; var87 ; var87 = var87 + 1 ; } label_61:
      |                                                                                                                                                                                                                                                                           ^~~
output.c:66:294: error: ‘var558’ undeclared (first use in this function); did you mean ‘var55’?
   66 |   var1380 = var90 < 0 ;  var1470 = 0 ; if ( var1380 ) { var1470 = 1 ; } else { }  var1381 = var1470 ;  var910 = var84 [ 0 ] ;  var911 = var910 == var86 ;  var1318 = 0 ; if ( var92 ) { if ( var911 ) { var1318 = 1 ; } else { } } else { }  var912 = var1318 ;  var913 = int var558 = var912 ; if ( var558 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 8 ) ; var87 ; var87 = var87 + 1 ; } label_61:
      |                                                                                                                                                                                                                                                                                                      ^~~~~~
      |                                                                                                                                                                                                                                                                                                      var55
output.c:66:320: error: expected ‘;’ before ‘var91’
   66 |   var1380 = var90 < 0 ;  var1470 = 0 ; if ( var1380 ) { var1470 = 1 ; } else { }  var1381 = var1470 ;  var910 = var84 [ 0 ] ;  var911 = var910 == var86 ;  var1318 = 0 ; if ( var92 ) { if ( var911 ) { var1318 = 1 ; } else { } } else { }  var912 = var1318 ;  var913 = int var558 = var912 ; if ( var558 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 8 ) ; var87 ; var87 = var87 + 1 ; } label_61:
      |                                                                                                                                                                                                                                                                                                                                ^~~~~~
      |                                                                                                                                                                                                                                                                                                                                ;
output.c:66:327: error: expected statement before ‘)’ token
   66 |   var1380 = var90 < 0 ;  var1470 = 0 ; if ( var1380 ) { var1470 = 1 ; } else { }  var1381 = var1470 ;  var910 = var84 [ 0 ] ;  var911 = var910 == var86 ;  var1318 = 0 ; if ( var92 ) { if ( var911 ) { var1318 = 1 ; } else { } } else { }  var912 = var1318 ;  var913 = int var558 = var912 ; if ( var558 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 8 ) ; var87 ; var87 = var87 + 1 ; } label_61:
      |                                                                                                                                                                                                                                                                                                                                       ^
output.c:66:329: error: expected expression before ‘=’ token
   66 |   var1380 = var90 < 0 ;  var1470 = 0 ; if ( var1380 ) { var1470 = 1 ; } else { }  var1381 = var1470 ;  var910 = var84 [ 0 ] ;  var911 = var910 == var86 ;  var1318 = 0 ; if ( var92 ) { if ( var911 ) { var1318 = 1 ; } else { } } else { }  var912 = var1318 ;  var913 = int var558 = var912 ; if ( var558 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 8 ) ; var87 ; var87 = var87 + 1 ; } label_61:
      |                                                                                                                                                                                                                                                                                                                                         ^
output.c:67:3: error: ‘var914’ undeclared (first use in this function); did you mean ‘var91’?
   67 |   var914 = var90 - 1 ;  var1382 = var91 < var914 ;  var1471 = 0 ; if ( var1382 ) { var1471 = 1 ; } else { }  var1383 = var1471 ;  var1384 =  var915 = var1383 ; #83 ( var91 ) ; = var86 ; var91 = = 8 ; var87 + ; goto label_61 ; } label_62:
      |   ^~~~~~
      |   var91
output.c:67:25: error: ‘var1382’ undeclared (first use in this function); did you mean ‘var1372’?
   67 |   var914 = var90 - 1 ;  var1382 = var91 < var914 ;  var1471 = 0 ; if ( var1382 ) { var1471 = 1 ; } else { }  var1383 = var1471 ;  var1384 =  var915 = var1383 ; #83 ( var91 ) ; = var86 ; var91 = = 8 ; var87 + ; goto label_61 ; } label_62:
      |                         ^~~~~~~
      |                         var1372
output.c:67:53: error: ‘var1471’ undeclared (first use in this function); did you mean ‘var1317’?
   67 |   var914 = var90 - 1 ;  var1382 = var91 < var914 ;  var1471 = 0 ; if ( var1382 ) { var1471 = 1 ; } else { }  var1383 = var1471 ;  var1384 =  var915 = var1383 ; #83 ( var91 ) ; = var86 ; var91 = = 8 ; var87 + ; goto label_61 ; } label_62:
      |                                                     ^~~~~~~
      |                                                     var1317
output.c:67:110: error: ‘var1383’ undeclared (first use in this function); did you mean ‘var1373’?
   67 |   var914 = var90 - 1 ;  var1382 = var91 < var914 ;  var1471 = 0 ; if ( var1382 ) { var1471 = 1 ; } else { }  var1383 = var1471 ;  var1384 =  var915 = var1383 ; #83 ( var91 ) ; = var86 ; var91 = = 8 ; var87 + ; goto label_61 ; } label_62:
      |                                                                                                              ^~~~~~~
      |                                                                                                              var1373
output.c:67:131: error: ‘var1384’ undeclared (first use in this function); did you mean ‘var1314’?
   67 |   var914 = var90 - 1 ;  var1382 = var91 < var914 ;  var1471 = 0 ; if ( var1382 ) { var1471 = 1 ; } else { }  var1383 = var1471 ;  var1384 =  var915 = var1383 ; #83 ( var91 ) ; = var86 ; var91 = = 8 ; var87 + ; goto label_61 ; } label_62:
      |                                                                                                                                   ^~~~~~~
      |                                                                                                                                   var1314
output.c:67:142: error: ‘var915’ undeclared (first use in this function); did you mean ‘var91’?
   67 |   var914 = var90 - 1 ;  var1382 = var91 < var914 ;  var1471 = 0 ; if ( var1382 ) { var1471 = 1 ; } else { }  var1383 = var1471 ;  var1384 =  var915 = var1383 ; #83 ( var91 ) ; = var86 ; var91 = = 8 ; var87 + ; goto label_61 ; } label_62:
      |                                                                                                                                              ^~~~~~
      |                                                                                                                                              var91
output.c:67:161: error: stray ‘#’ in program
   67 |   var914 = var90 - 1 ;  var1382 = var91 < var914 ;  var1471 = 0 ; if ( var1382 ) { var1471 = 1 ; } else { }  var1383 = var1471 ;  var1384 =  var915 = var1383 ; #83 ( var91 ) ; = var86 ; var91 = = 8 ; var87 + ; goto label_61 ; } label_62:
      |                                                                                                                                                                 ^
output.c:67:162: error: called object is not a function or function pointer
   67 |   var914 = var90 - 1 ;  var1382 = var91 < var914 ;  var1471 = 0 ; if ( var1382 ) { var1471 = 1 ; } else { }  var1383 = var1471 ;  var1384 =  var915 = var1383 ; #83 ( var91 ) ; = var86 ; var91 = = 8 ; var87 + ; goto label_61 ; } label_62:
      |                                                                                                                                                                  ^~
output.c:67:177: error: expected expression before ‘=’ token
   67 |   var914 = var90 - 1 ;  var1382 = var91 < var914 ;  var1471 = 0 ; if ( var1382 ) { var1471 = 1 ; } else { }  var1383 = var1471 ;  var1384 =  var915 = var1383 ; #83 ( var91 ) ; = var86 ; var91 = = 8 ; var87 + ; goto label_61 ; } label_62:
      |                                                                                                                                                                                 ^
output.c:67:195: error: expected expression before ‘=’ token
   67 |   var914 = var90 - 1 ;  var1382 = var91 < var914 ;  var1471 = 0 ; if ( var1382 ) { var1471 = 1 ; } else { }  var1383 = var1471 ;  var1384 =  var915 = var1383 ; #83 ( var91 ) ; = var86 ; var91 = = 8 ; var87 + ; goto label_61 ; } label_62:
      |                                                                                                                                                                                                   ^
output.c:67:209: error: expected expression before ‘;’ token
   67 |   var914 = var90 - 1 ;  var1382 = var91 < var914 ;  var1471 = 0 ; if ( var1382 ) { var1471 = 1 ; } else { }  var1383 = var1471 ;  var1384 =  var915 = var1383 ; #83 ( var91 ) ; = var86 ; var91 = = 8 ; var87 + ; goto label_61 ; } label_62:
      |                                                                                                                                                                                                                 ^
output.c:68:2: error: label ‘label_60’ used but not defined
   68 |  } else { } goto label_60 ; } else {  var916 = var84 [ 0 ] ;  var917 = var916 == var88 ;  var918 = int var559 = var917 ; if ( var559 ) { var92 = 1 ; } else { goto label_60 ; } } var90 = var90 - ( 8 ) ; goto label_59 ; } label_60:
      |  ^
output.c: At top level:
output.c:68:31: error: expected identifier or ‘(’ before ‘else’
   68 |  } else { } goto label_60 ; } else {  var916 = var84 [ 0 ] ;  var917 = var916 == var88 ;  var918 = int var559 = var917 ; if ( var559 ) { var92 = 1 ; } else { goto label_60 ; } } var90 = var90 - ( 8 ) ; goto label_59 ; } label_60:
      |                               ^~~~
output.c:68:179: warning: data definition has no type or storage class
   68 |  } else { } goto label_60 ; } else {  var916 = var84 [ 0 ] ;  var917 = var916 == var88 ;  var918 = int var559 = var917 ; if ( var559 ) { var92 = 1 ; } else { goto label_60 ; } } var90 = var90 - ( 8 ) ; goto label_59 ; } label_60:
      |                                                                                                                                                                                   ^~~~~
output.c:68:179: error: type defaults to ‘int’ in declaration of ‘var90’ [-Wimplicit-int]
output.c:68:187: error: initializer element is not constant
   68 |  } else { } goto label_60 ; } else {  var916 = var84 [ 0 ] ;  var917 = var916 == var88 ;  var918 = int var559 = var917 ; if ( var559 ) { var92 = 1 ; } else { goto label_60 ; } } var90 = var90 - ( 8 ) ; goto label_59 ; } label_60:
      |                                                                                                                                                                                           ^~~~~
output.c:68:203: error: expected identifier or ‘(’ before ‘goto’
   68 |  } else { } goto label_60 ; } else {  var916 = var84 [ 0 ] ;  var917 = var916 == var88 ;  var918 = int var559 = var917 ; if ( var559 ) { var92 = 1 ; } else { goto label_60 ; } } var90 = var90 - ( 8 ) ; goto label_59 ; } label_60:
      |                                                                                                                                                                                                           ^~~~
output.c:68:219: error: expected identifier or ‘(’ before ‘}’ token
   68 |  } else { } goto label_60 ; } else {  var916 = var84 [ 0 ] ;  var917 = var916 == var88 ;  var918 = int var559 = var917 ; if ( var559 ) { var92 = 1 ; } else { goto label_60 ; } } var90 = var90 - ( 8 ) ; goto label_59 ; } label_60:
      |                                                                                                                                                                                                                           ^
output.c:68:229: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘:’ token
   68 |  } else { } goto label_60 ; } else {  var916 = var84 [ 0 ] ;  var917 = var916 == var88 ;  var918 = int var559 = var917 ; if ( var559 ) { var92 = 1 ; } else { goto label_60 ; } } var90 = var90 - ( 8 ) ; goto label_59 ; } label_60:
      |                                                                                                                                                                                                                                     ^
output.c:69:22: warning: data definition has no type or storage class
   69 |  var90 = var89 + 8 ; var91 = var90 ; var92 = 0 ; label_63:
      |                      ^~~~~
output.c:69:22: error: type defaults to ‘int’ in declaration of ‘var91’ [-Wimplicit-int]
output.c:69:30: error: initializer element is not constant
   69 |  var90 = var89 + 8 ; var91 = var90 ; var92 = 0 ; label_63:
      |                              ^~~~~
output.c:69:38: warning: data definition has no type or storage class
   69 |  var90 = var89 + 8 ; var91 = var90 ; var92 = 0 ; label_63:
      |                                      ^~~~~
output.c:69:38: error: type defaults to ‘int’ in declaration of ‘var92’ [-Wimplicit-int]
output.c:69:58: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘:’ token
   69 |  var90 = var89 + 8 ; var91 = var90 ; var92 = 0 ; label_63:
      |                                                          ^
output.c:70:21: warning: data definition has no type or storage class
   70 |   var919 = 8 * 8 ;  var920 = var90 < var919 ;  var921 = var84 [ 0 ] ;  var922 = var921 == var86 ;  var1319 = 0 ; if ( var92 ) { if ( var922 ) { var1319 = 1 ; } else { } } else { }  var923 = var1319 ;  var924 = int var560 = var923 ; if ( var560 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 + ( 8 ) ; var87 ; var87 = var87 + 1 ; } label_65:
      |                     ^~~~~~
output.c:70:21: error: type defaults to ‘int’ in declaration of ‘var920’ [-Wimplicit-int]
output.c:70:38: error: ‘var919’ undeclared here (not in a function); did you mean ‘var91’?
   70 |   var919 = 8 * 8 ;  var920 = var90 < var919 ;  var921 = var84 [ 0 ] ;  var922 = var921 == var86 ;  var1319 = 0 ; if ( var92 ) { if ( var922 ) { var1319 = 1 ; } else { } } else { }  var923 = var1319 ;  var924 = int var560 = var923 ; if ( var560 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 + ( 8 ) ; var87 ; var87 = var87 + 1 ; } label_65:
      |                                      ^~~~~~
      |                                      var91
output.c:70:48: warning: data definition has no type or storage class
   70 |   var919 = 8 * 8 ;  var920 = var90 < var919 ;  var921 = var84 [ 0 ] ;  var922 = var921 == var86 ;  var1319 = 0 ; if ( var92 ) { if ( var922 ) { var1319 = 1 ; } else { } } else { }  var923 = var1319 ;  var924 = int var560 = var923 ; if ( var560 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 + ( 8 ) ; var87 ; var87 = var87 + 1 ; } label_65:
      |                                                ^~~~~~
output.c:70:48: error: type defaults to ‘int’ in declaration of ‘var921’ [-Wimplicit-int]
output.c:70:57: error: ‘var84’ undeclared here (not in a function); did you mean ‘var894’?
   70 |   var919 = 8 * 8 ;  var920 = var90 < var919 ;  var921 = var84 [ 0 ] ;  var922 = var921 == var86 ;  var1319 = 0 ; if ( var92 ) { if ( var922 ) { var1319 = 1 ; } else { } } else { }  var923 = var1319 ;  var924 = int var560 = var923 ; if ( var560 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 + ( 8 ) ; var87 ; var87 = var87 + 1 ; } label_65:
      |                                                         ^~~~~
      |                                                         var894
output.c:70:72: warning: data definition has no type or storage class
   70 |   var919 = 8 * 8 ;  var920 = var90 < var919 ;  var921 = var84 [ 0 ] ;  var922 = var921 == var86 ;  var1319 = 0 ; if ( var92 ) { if ( var922 ) { var1319 = 1 ; } else { } } else { }  var923 = var1319 ;  var924 = int var560 = var923 ; if ( var560 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 + ( 8 ) ; var87 ; var87 = var87 + 1 ; } label_65:
      |                                                                        ^~~~~~
output.c:70:72: error: type defaults to ‘int’ in declaration of ‘var922’ [-Wimplicit-int]
output.c:70:91: error: ‘var86’ undeclared here (not in a function); did you mean ‘var896’?
   70 |   var919 = 8 * 8 ;  var920 = var90 < var919 ;  var921 = var84 [ 0 ] ;  var922 = var921 == var86 ;  var1319 = 0 ; if ( var92 ) { if ( var922 ) { var1319 = 1 ; } else { } } else { }  var923 = var1319 ;  var924 = int var560 = var923 ; if ( var560 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 + ( 8 ) ; var87 ; var87 = var87 + 1 ; } label_65:
      |                                                                                           ^~~~~
      |                                                                                           var896
output.c:70:100: warning: data definition has no type or storage class
   70 |   var919 = 8 * 8 ;  var920 = var90 < var919 ;  var921 = var84 [ 0 ] ;  var922 = var921 == var86 ;  var1319 = 0 ; if ( var92 ) { if ( var922 ) { var1319 = 1 ; } else { } } else { }  var923 = var1319 ;  var924 = int var560 = var923 ; if ( var560 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 + ( 8 ) ; var87 ; var87 = var87 + 1 ; } label_65:
      |                                                                                                    ^~~~~~~
output.c:70:100: error: type defaults to ‘int’ in declaration of ‘var1319’ [-Wimplicit-int]
output.c:70:114: error: expected identifier or ‘(’ before ‘if’
   70 |   var919 = 8 * 8 ;  var920 = var90 < var919 ;  var921 = var84 [ 0 ] ;  var922 = var921 == var86 ;  var1319 = 0 ; if ( var92 ) { if ( var922 ) { var1319 = 1 ; } else { } } else { }  var923 = var1319 ;  var924 = int var560 = var923 ; if ( var560 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 + ( 8 ) ; var87 ; var87 = var87 + 1 ; } label_65:
      |                                                                                                                  ^~
output.c:70:172: error: expected identifier or ‘(’ before ‘else’
   70 |   var919 = 8 * 8 ;  var920 = var90 < var919 ;  var921 = var84 [ 0 ] ;  var922 = var921 == var86 ;  var1319 = 0 ; if ( var92 ) { if ( var922 ) { var1319 = 1 ; } else { } } else { }  var923 = var1319 ;  var924 = int var560 = var923 ; if ( var560 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 + ( 8 ) ; var87 ; var87 = var87 + 1 ; } label_65:
      |                                                                                                                                                                            ^~~~
output.c:70:182: warning: data definition has no type or storage class
   70 |   var919 = 8 * 8 ;  var920 = var90 < var919 ;  var921 = var84 [ 0 ] ;  var922 = var921 == var86 ;  var1319 = 0 ; if ( var92 ) { if ( var922 ) { var1319 = 1 ; } else { } } else { }  var923 = var1319 ;  var924 = int var560 = var923 ; if ( var560 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 + ( 8 ) ; var87 ; var87 = var87 + 1 ; } label_65:
      |                                                                                                                                                                                      ^~~~~~
output.c:70:182: error: type defaults to ‘int’ in declaration of ‘var923’ [-Wimplicit-int]
output.c:70:191: error: initializer element is not constant
   70 |   var919 = 8 * 8 ;  var920 = var90 < var919 ;  var921 = var84 [ 0 ] ;  var922 = var921 == var86 ;  var1319 = 0 ; if ( var92 ) { if ( var922 ) { var1319 = 1 ; } else { } } else { }  var923 = var1319 ;  var924 = int var560 = var923 ; if ( var560 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 + ( 8 ) ; var87 ; var87 = var87 + 1 ; } label_65:
      |                                                                                                                                                                                               ^~~~~~~
output.c:70:202: warning: data definition has no type or storage class
   70 |   var919 = 8 * 8 ;  var920 = var90 < var919 ;  var921 = var84 [ 0 ] ;  var922 = var921 == var86 ;  var1319 = 0 ; if ( var92 ) { if ( var922 ) { var1319 = 1 ; } else { } } else { }  var923 = var1319 ;  var924 = int var560 = var923 ; if ( var560 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 + ( 8 ) ; var87 ; var87 = var87 + 1 ; } label_65:
      |                                                                                                                                                                                                          ^~~~~~
output.c:70:202: error: type defaults to ‘int’ in declaration of ‘var924’ [-Wimplicit-int]
output.c:70:211: error: expected expression before ‘int’
   70 |   var919 = 8 * 8 ;  var920 = var90 < var919 ;  var921 = var84 [ 0 ] ;  var922 = var921 == var86 ;  var1319 = 0 ; if ( var92 ) { if ( var922 ) { var1319 = 1 ; } else { } } else { }  var923 = var1319 ;  var924 = int var560 = var923 ; if ( var560 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 + ( 8 ) ; var87 ; var87 = var87 + 1 ; } label_65:
      |                                                                                                                                                                                                                   ^~~
output.c:70:233: error: expected identifier or ‘(’ before ‘if’
   70 |   var919 = 8 * 8 ;  var920 = var90 < var919 ;  var921 = var84 [ 0 ] ;  var922 = var921 == var86 ;  var1319 = 0 ; if ( var92 ) { if ( var922 ) { var1319 = 1 ; } else { } } else { }  var923 = var1319 ;  var924 = int var560 = var923 ; if ( var560 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 + ( 8 ) ; var87 ; var87 = var87 + 1 ; } label_65:
      |                                                                                                                                                                                                                                         ^~
output.c:71:107: error: stray ‘#’ in program
   71 |   var1385 = var91 > var90 ;  var1472 = 0 ; if ( var1385 ) { var1472 = 1 ; } else { }  var1386 = var1472 ; #83 ( var91 ) ; = var86 ; var91 = = 8 ; var87 + ; goto label_65 ; } else { } label_66:
      |                                                                                                           ^
output.c:72:4: error: expected identifier or ‘(’ before ‘goto’
   72 |  } goto label_64 ; } else {  var925 = var84 [ 0 ] ;  var926 = var925 == var88 ;  var927 = int var561 = var926 ; if ( var561 ) { var92 = 1 ; } else { goto label_64 ; } } var90 = var90 + ( 8 ) ; goto label_63 ; } label_64:
      |    ^~~~
output.c:72:20: error: expected identifier or ‘(’ before ‘}’ token
   72 |  } goto label_64 ; } else {  var925 = var84 [ 0 ] ;  var926 = var925 == var88 ;  var927 = int var561 = var926 ; if ( var561 ) { var92 = 1 ; } else { goto label_64 ; } } var90 = var90 + ( 8 ) ; goto label_63 ; } label_64:
      |                    ^
output.c:72:22: error: expected identifier or ‘(’ before ‘else’
   72 |  } goto label_64 ; } else {  var925 = var84 [ 0 ] ;  var926 = var925 == var88 ;  var927 = int var561 = var926 ; if ( var561 ) { var92 = 1 ; } else { goto label_64 ; } } var90 = var90 + ( 8 ) ; goto label_63 ; } label_64:
      |                      ^~~~
output.c:72:170: warning: data definition has no type or storage class
   72 |  } goto label_64 ; } else {  var925 = var84 [ 0 ] ;  var926 = var925 == var88 ;  var927 = int var561 = var926 ; if ( var561 ) { var92 = 1 ; } else { goto label_64 ; } } var90 = var90 + ( 8 ) ; goto label_63 ; } label_64:
      |                                                                                                                                                                          ^~~~~
output.c:72:170: error: type defaults to ‘int’ in declaration of ‘var90’ [-Wimplicit-int]
output.c:72:170: error: redefinition of ‘var90’
output.c:68:179: note: previous definition of ‘var90’ with type ‘int’
   68 |  } else { } goto label_60 ; } else {  var916 = var84 [ 0 ] ;  var917 = var916 == var88 ;  var918 = int var559 = var917 ; if ( var559 ) { var92 = 1 ; } else { goto label_60 ; } } var90 = var90 - ( 8 ) ; goto label_59 ; } label_60:
      |                                                                                                                                                                                   ^~~~~
output.c:72:178: error: initializer element is not constant
   72 |  } goto label_64 ; } else {  var925 = var84 [ 0 ] ;  var926 = var925 == var88 ;  var927 = int var561 = var926 ; if ( var561 ) { var92 = 1 ; } else { goto label_64 ; } } var90 = var90 + ( 8 ) ; goto label_63 ; } label_64:
      |                                                                                                                                                                                  ^~~~~
output.c:72:194: error: expected identifier or ‘(’ before ‘goto’
   72 |  } goto label_64 ; } else {  var925 = var84 [ 0 ] ;  var926 = var925 == var88 ;  var927 = int var561 = var926 ; if ( var561 ) { var92 = 1 ; } else { goto label_64 ; } } var90 = var90 + ( 8 ) ; goto label_63 ; } label_64:
      |                                                                                                                                                                                                  ^~~~
output.c:72:210: error: expected identifier or ‘(’ before ‘}’ token
   72 |  } goto label_64 ; } else {  var925 = var84 [ 0 ] ;  var926 = var925 == var88 ;  var927 = int var561 = var926 ; if ( var561 ) { var92 = 1 ; } else { goto label_64 ; } } var90 = var90 + ( 8 ) ; goto label_63 ; } label_64:
      |                                                                                                                                                                                                                  ^
output.c:72:220: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘:’ token
   72 |  } goto label_64 ; } else {  var925 = var84 [ 0 ] ;  var926 = var925 == var88 ;  var927 = int var561 = var926 ; if ( var561 ) { var92 = 1 ; } else { goto label_64 ; } } var90 = var90 + ( 8 ) ; goto label_63 ; } label_64:
      |                                                                                                                                                                                                                            ^
output.c:73:22: warning: data definition has no type or storage class
   73 |  var90 = var89 - 1 ; var91 = var90 ; var92 = 0 ; label_67:
      |                      ^~~~~
output.c:73:22: error: type defaults to ‘int’ in declaration of ‘var91’ [-Wimplicit-int]
output.c:73:22: error: redefinition of ‘var91’
output.c:69:22: note: previous definition of ‘var91’ with type ‘int’
   69 |  var90 = var89 + 8 ; var91 = var90 ; var92 = 0 ; label_63:
      |                      ^~~~~
output.c:73:30: error: initializer element is not constant
   73 |  var90 = var89 - 1 ; var91 = var90 ; var92 = 0 ; label_67:
      |                              ^~~~~
output.c:73:38: warning: data definition has no type or storage class
   73 |  var90 = var89 - 1 ; var91 = var90 ; var92 = 0 ; label_67:
      |                                      ^~~~~
output.c:73:38: error: type defaults to ‘int’ in declaration of ‘var92’ [-Wimplicit-int]
output.c:73:38: error: redefinition of ‘var92’
output.c:69:38: note: previous definition of ‘var92’ with type ‘int’
   69 |  var90 = var89 + 8 ; var91 = var90 ; var92 = 0 ; label_63:
      |                                      ^~~~~
output.c:73:58: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘:’ token
   73 |  var90 = var89 - 1 ; var91 = var90 ; var92 = 0 ; label_67:
      |                                                          ^
output.c:74:26: warning: data definition has no type or storage class
   74 |   var1387 = var90 < 0 ;  var1473 = 0 ; if ( var1387 ) { var1473 = 1 ; } else { }  var1388 = var1473 ;  var1389 =  var928 = var1388 ;  var929 = var90 % 8 ;  var930 = 8 - 1 ;  var931 = var929 < var930 ;  var1320 = 0 ; if ( var928 ) { if ( var931 ) { var1320 = 1 ; } else { } } else { }  var932 = var1320 ;  var933 = var84 [ 0 ] ;  var934 = var933 == var86 ;  var1321 = 0 ; if ( var92 ) { if ( var934 ) { var1321 = 1 ; } else { } } else { }  var935 = var1321 ;  var936 = int var562 = var935 ; if ( var562 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_69:
      |                          ^~~~~~~
output.c:74:26: error: type defaults to ‘int’ in declaration of ‘var1473’ [-Wimplicit-int]
output.c:74:40: error: expected identifier or ‘(’ before ‘if’
   74 |   var1387 = var90 < 0 ;  var1473 = 0 ; if ( var1387 ) { var1473 = 1 ; } else { }  var1388 = var1473 ;  var1389 =  var928 = var1388 ;  var929 = var90 % 8 ;  var930 = 8 - 1 ;  var931 = var929 < var930 ;  var1320 = 0 ; if ( var928 ) { if ( var931 ) { var1320 = 1 ; } else { } } else { }  var932 = var1320 ;  var933 = var84 [ 0 ] ;  var934 = var933 == var86 ;  var1321 = 0 ; if ( var92 ) { if ( var934 ) { var1321 = 1 ; } else { } } else { }  var935 = var1321 ;  var936 = int var562 = var935 ; if ( var562 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_69:
      |                                        ^~
output.c:74:73: error: expected identifier or ‘(’ before ‘else’
   74 |   var1387 = var90 < 0 ;  var1473 = 0 ; if ( var1387 ) { var1473 = 1 ; } else { }  var1388 = var1473 ;  var1389 =  var928 = var1388 ;  var929 = var90 % 8 ;  var930 = 8 - 1 ;  var931 = var929 < var930 ;  var1320 = 0 ; if ( var928 ) { if ( var931 ) { var1320 = 1 ; } else { } } else { }  var932 = var1320 ;  var933 = var84 [ 0 ] ;  var934 = var933 == var86 ;  var1321 = 0 ; if ( var92 ) { if ( var934 ) { var1321 = 1 ; } else { } } else { }  var935 = var1321 ;  var936 = int var562 = var935 ; if ( var562 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_69:
      |                                                                         ^~~~
output.c:74:83: warning: data definition has no type or storage class
   74 |   var1387 = var90 < 0 ;  var1473 = 0 ; if ( var1387 ) { var1473 = 1 ; } else { }  var1388 = var1473 ;  var1389 =  var928 = var1388 ;  var929 = var90 % 8 ;  var930 = 8 - 1 ;  var931 = var929 < var930 ;  var1320 = 0 ; if ( var928 ) { if ( var931 ) { var1320 = 1 ; } else { } } else { }  var932 = var1320 ;  var933 = var84 [ 0 ] ;  var934 = var933 == var86 ;  var1321 = 0 ; if ( var92 ) { if ( var934 ) { var1321 = 1 ; } else { } } else { }  var935 = var1321 ;  var936 = int var562 = var935 ; if ( var562 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_69:
      |                                                                                   ^~~~~~~
output.c:74:83: error: type defaults to ‘int’ in declaration of ‘var1388’ [-Wimplicit-int]
output.c:74:93: error: initializer element is not constant
   74 |   var1387 = var90 < 0 ;  var1473 = 0 ; if ( var1387 ) { var1473 = 1 ; } else { }  var1388 = var1473 ;  var1389 =  var928 = var1388 ;  var929 = var90 % 8 ;  var930 = 8 - 1 ;  var931 = var929 < var930 ;  var1320 = 0 ; if ( var928 ) { if ( var931 ) { var1320 = 1 ; } else { } } else { }  var932 = var1320 ;  var933 = var84 [ 0 ] ;  var934 = var933 == var86 ;  var1321 = 0 ; if ( var92 ) { if ( var934 ) { var1321 = 1 ; } else { } } else { }  var935 = var1321 ;  var936 = int var562 = var935 ; if ( var562 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_69:
      |                                                                                             ^~~~~~~
output.c:74:104: warning: data definition has no type or storage class
   74 |   var1387 = var90 < 0 ;  var1473 = 0 ; if ( var1387 ) { var1473 = 1 ; } else { }  var1388 = var1473 ;  var1389 =  var928 = var1388 ;  var929 = var90 % 8 ;  var930 = 8 - 1 ;  var931 = var929 < var930 ;  var1320 = 0 ; if ( var928 ) { if ( var931 ) { var1320 = 1 ; } else { } } else { }  var932 = var1320 ;  var933 = var84 [ 0 ] ;  var934 = var933 == var86 ;  var1321 = 0 ; if ( var92 ) { if ( var934 ) { var1321 = 1 ; } else { } } else { }  var935 = var1321 ;  var936 = int var562 = var935 ; if ( var562 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_69:
      |                                                                                                        ^~~~~~~
output.c:74:104: error: type defaults to ‘int’ in declaration of ‘var1389’ [-Wimplicit-int]
output.c:74:115: error: ‘var928’ undeclared here (not in a function); did you mean ‘var92’?
   74 |   var1387 = var90 < 0 ;  var1473 = 0 ; if ( var1387 ) { var1473 = 1 ; } else { }  var1388 = var1473 ;  var1389 =  var928 = var1388 ;  var929 = var90 % 8 ;  var930 = 8 - 1 ;  var931 = var929 < var930 ;  var1320 = 0 ; if ( var928 ) { if ( var931 ) { var1320 = 1 ; } else { } } else { }  var932 = var1320 ;  var933 = var84 [ 0 ] ;  var934 = var933 == var86 ;  var1321 = 0 ; if ( var92 ) { if ( var934 ) { var1321 = 1 ; } else { } } else { }  var935 = var1321 ;  var936 = int var562 = var935 ; if ( var562 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_69:
      |                                                                                                                   ^~~~~~
      |                                                                                                                   var92
output.c:74:135: warning: data definition has no type or storage class
   74 |   var1387 = var90 < 0 ;  var1473 = 0 ; if ( var1387 ) { var1473 = 1 ; } else { }  var1388 = var1473 ;  var1389 =  var928 = var1388 ;  var929 = var90 % 8 ;  var930 = 8 - 1 ;  var931 = var929 < var930 ;  var1320 = 0 ; if ( var928 ) { if ( var931 ) { var1320 = 1 ; } else { } } else { }  var932 = var1320 ;  var933 = var84 [ 0 ] ;  var934 = var933 == var86 ;  var1321 = 0 ; if ( var92 ) { if ( var934 ) { var1321 = 1 ; } else { } } else { }  var935 = var1321 ;  var936 = int var562 = var935 ; if ( var562 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_69:
      |                                                                                                                                       ^~~~~~
output.c:74:135: error: type defaults to ‘int’ in declaration of ‘var929’ [-Wimplicit-int]
output.c:74:144: error: initializer element is not constant
   74 |   var1387 = var90 < 0 ;  var1473 = 0 ; if ( var1387 ) { var1473 = 1 ; } else { }  var1388 = var1473 ;  var1389 =  var928 = var1388 ;  var929 = var90 % 8 ;  var930 = 8 - 1 ;  var931 = var929 < var930 ;  var1320 = 0 ; if ( var928 ) { if ( var931 ) { var1320 = 1 ; } else { } } else { }  var932 = var1320 ;  var933 = var84 [ 0 ] ;  var934 = var933 == var86 ;  var1321 = 0 ; if ( var92 ) { if ( var934 ) { var1321 = 1 ; } else { } } else { }  var935 = var1321 ;  var936 = int var562 = var935 ; if ( var562 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_69:
      |                                                                                                                                                ^~~~~
output.c:74:157: warning: data definition has no type or storage class
   74 |   var1387 = var90 < 0 ;  var1473 = 0 ; if ( var1387 ) { var1473 = 1 ; } else { }  var1388 = var1473 ;  var1389 =  var928 = var1388 ;  var929 = var90 % 8 ;  var930 = 8 - 1 ;  var931 = var929 < var930 ;  var1320 = 0 ; if ( var928 ) { if ( var931 ) { var1320 = 1 ; } else { } } else { }  var932 = var1320 ;  var933 = var84 [ 0 ] ;  var934 = var933 == var86 ;  var1321 = 0 ; if ( var92 ) { if ( var934 ) { var1321 = 1 ; } else { } } else { }  var935 = var1321 ;  var936 = int var562 = var935 ; if ( var562 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_69:
      |                                                                                                                                                             ^~~~~~
output.c:74:157: error: type defaults to ‘int’ in declaration of ‘var930’ [-Wimplicit-int]
output.c:74:175: warning: data definition has no type or storage class
   74 |   var1387 = var90 < 0 ;  var1473 = 0 ; if ( var1387 ) { var1473 = 1 ; } else { }  var1388 = var1473 ;  var1389 =  var928 = var1388 ;  var929 = var90 % 8 ;  var930 = 8 - 1 ;  var931 = var929 < var930 ;  var1320 = 0 ; if ( var928 ) { if ( var931 ) { var1320 = 1 ; } else { } } else { }  var932 = var1320 ;  var933 = var84 [ 0 ] ;  var934 = var933 == var86 ;  var1321 = 0 ; if ( var92 ) { if ( var934 ) { var1321 = 1 ; } else { } } else { }  var935 = var1321 ;  var936 = int var562 = var935 ; if ( var562 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_69:
      |                                                                                                                                                                               ^~~~~~
output.c:74:175: error: type defaults to ‘int’ in declaration of ‘var931’ [-Wimplicit-int]
output.c:74:184: error: initializer element is not constant
   74 |   var1387 = var90 < 0 ;  var1473 = 0 ; if ( var1387 ) { var1473 = 1 ; } else { }  var1388 = var1473 ;  var1389 =  var928 = var1388 ;  var929 = var90 % 8 ;  var930 = 8 - 1 ;  var931 = var929 < var930 ;  var1320 = 0 ; if ( var928 ) { if ( var931 ) { var1320 = 1 ; } else { } } else { }  var932 = var1320 ;  var933 = var84 [ 0 ] ;  var934 = var933 == var86 ;  var1321 = 0 ; if ( var92 ) { if ( var934 ) { var1321 = 1 ; } else { } } else { }  var935 = var1321 ;  var936 = int var562 = var935 ; if ( var562 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_69:
      |                                                                                                                                                                                        ^~~~~~
output.c:74:203: warning: data definition has no type or storage class
   74 |   var1387 = var90 < 0 ;  var1473 = 0 ; if ( var1387 ) { var1473 = 1 ; } else { }  var1388 = var1473 ;  var1389 =  var928 = var1388 ;  var929 = var90 % 8 ;  var930 = 8 - 1 ;  var931 = var929 < var930 ;  var1320 = 0 ; if ( var928 ) { if ( var931 ) { var1320 = 1 ; } else { } } else { }  var932 = var1320 ;  var933 = var84 [ 0 ] ;  var934 = var933 == var86 ;  var1321 = 0 ; if ( var92 ) { if ( var934 ) { var1321 = 1 ; } else { } } else { }  var935 = var1321 ;  var936 = int var562 = var935 ; if ( var562 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_69:
      |                                                                                                                                                                                                           ^~~~~~~
output.c:74:203: error: type defaults to ‘int’ in declaration of ‘var1320’ [-Wimplicit-int]
output.c:74:217: error: expected identifier or ‘(’ before ‘if’
   74 |   var1387 = var90 < 0 ;  var1473 = 0 ; if ( var1387 ) { var1473 = 1 ; } else { }  var1388 = var1473 ;  var1389 =  var928 = var1388 ;  var929 = var90 % 8 ;  var930 = 8 - 1 ;  var931 = var929 < var930 ;  var1320 = 0 ; if ( var928 ) { if ( var931 ) { var1320 = 1 ; } else { } } else { }  var932 = var1320 ;  var933 = var84 [ 0 ] ;  var934 = var933 == var86 ;  var1321 = 0 ; if ( var92 ) { if ( var934 ) { var1321 = 1 ; } else { } } else { }  var935 = var1321 ;  var936 = int var562 = var935 ; if ( var562 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_69:
      |                                                                                                                                                                                                                         ^~
output.c:74:276: error: expected identifier or ‘(’ before ‘else’
   74 |   var1387 = var90 < 0 ;  var1473 = 0 ; if ( var1387 ) { var1473 = 1 ; } else { }  var1388 = var1473 ;  var1389 =  var928 = var1388 ;  var929 = var90 % 8 ;  var930 = 8 - 1 ;  var931 = var929 < var930 ;  var1320 = 0 ; if ( var928 ) { if ( var931 ) { var1320 = 1 ; } else { } } else { }  var932 = var1320 ;  var933 = var84 [ 0 ] ;  var934 = var933 == var86 ;  var1321 = 0 ; if ( var92 ) { if ( var934 ) { var1321 = 1 ; } else { } } else { }  var935 = var1321 ;  var936 = int var562 = var935 ; if ( var562 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_69:
      |                                                                                                                                                                                                                                                                                    ^~~~
output.c:74:286: warning: data definition has no type or storage class
   74 |   var1387 = var90 < 0 ;  var1473 = 0 ; if ( var1387 ) { var1473 = 1 ; } else { }  var1388 = var1473 ;  var1389 =  var928 = var1388 ;  var929 = var90 % 8 ;  var930 = 8 - 1 ;  var931 = var929 < var930 ;  var1320 = 0 ; if ( var928 ) { if ( var931 ) { var1320 = 1 ; } else { } } else { }  var932 = var1320 ;  var933 = var84 [ 0 ] ;  var934 = var933 == var86 ;  var1321 = 0 ; if ( var92 ) { if ( var934 ) { var1321 = 1 ; } else { } } else { }  var935 = var1321 ;  var936 = int var562 = var935 ; if ( var562 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_69:
      |                                                                                                                                                                                                                                                                                              ^~~~~~
output.c:74:286: error: type defaults to ‘int’ in declaration of ‘var932’ [-Wimplicit-int]
output.c:74:295: error: initializer element is not constant
   74 |   var1387 = var90 < 0 ;  var1473 = 0 ; if ( var1387 ) { var1473 = 1 ; } else { }  var1388 = var1473 ;  var1389 =  var928 = var1388 ;  var929 = var90 % 8 ;  var930 = 8 - 1 ;  var931 = var929 < var930 ;  var1320 = 0 ; if ( var928 ) { if ( var931 ) { var1320 = 1 ; } else { } } else { }  var932 = var1320 ;  var933 = var84 [ 0 ] ;  var934 = var933 == var86 ;  var1321 = 0 ; if ( var92 ) { if ( var934 ) { var1321 = 1 ; } else { } } else { }  var935 = var1321 ;  var936 = int var562 = var935 ; if ( var562 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_69:
      |                                                                                                                                                                                                                                                                                                       ^~~~~~~
output.c:74:306: warning: data definition has no type or storage class
   74 |   var1387 = var90 < 0 ;  var1473 = 0 ; if ( var1387 ) { var1473 = 1 ; } else { }  var1388 = var1473 ;  var1389 =  var928 = var1388 ;  var929 = var90 % 8 ;  var930 = 8 - 1 ;  var931 = var929 < var930 ;  var1320 = 0 ; if ( var928 ) { if ( var931 ) { var1320 = 1 ; } else { } } else { }  var932 = var1320 ;  var933 = var84 [ 0 ] ;  var934 = var933 == var86 ;  var1321 = 0 ; if ( var92 ) { if ( var934 ) { var1321 = 1 ; } else { } } else { }  var935 = var1321 ;  var936 = int var562 = var935 ; if ( var562 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_69:
      |                                                                                                                                                                                                                                                                                                                  ^~~~~~
output.c:74:306: error: type defaults to ‘int’ in declaration of ‘var933’ [-Wimplicit-int]
output.c:74:330: warning: data definition has no type or storage class
   74 |   var1387 = var90 < 0 ;  var1473 = 0 ; if ( var1387 ) { var1473 = 1 ; } else { }  var1388 = var1473 ;  var1389 =  var928 = var1388 ;  var929 = var90 % 8 ;  var930 = 8 - 1 ;  var931 = var929 < var930 ;  var1320 = 0 ; if ( var928 ) { if ( var931 ) { var1320 = 1 ; } else { } } else { }  var932 = var1320 ;  var933 = var84 [ 0 ] ;  var934 = var933 == var86 ;  var1321 = 0 ; if ( var92 ) { if ( var934 ) { var1321 = 1 ; } else { } } else { }  var935 = var1321 ;  var936 = int var562 = var935 ; if ( var562 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_69:
      |                                                                                                                                                                                                                                                                                                                                          ^~~~~~
output.c:74:330: error: type defaults to ‘int’ in declaration of ‘var934’ [-Wimplicit-int]
output.c:74:358: warning: data definition has no type or storage class
   74 |   var1387 = var90 < 0 ;  var1473 = 0 ; if ( var1387 ) { var1473 = 1 ; } else { }  var1388 = var1473 ;  var1389 =  var928 = var1388 ;  var929 = var90 % 8 ;  var930 = 8 - 1 ;  var931 = var929 < var930 ;  var1320 = 0 ; if ( var928 ) { if ( var931 ) { var1320 = 1 ; } else { } } else { }  var932 = var1320 ;  var933 = var84 [ 0 ] ;  var934 = var933 == var86 ;  var1321 = 0 ; if ( var92 ) { if ( var934 ) { var1321 = 1 ; } else { } } else { }  var935 = var1321 ;  var936 = int var562 = var935 ; if ( var562 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_69:
      |                                                                                                                                                                                                                                                                                                                                                                      ^~~~~~~
output.c:74:358: error: type defaults to ‘int’ in declaration of ‘var1321’ [-Wimplicit-int]
output.c:74:372: error: expected identifier or ‘(’ before ‘if’
   74 |   var1387 = var90 < 0 ;  var1473 = 0 ; if ( var1387 ) { var1473 = 1 ; } else { }  var1388 = var1473 ;  var1389 =  var928 = var1388 ;  var929 = var90 % 8 ;  var930 = 8 - 1 ;  var931 = var929 < var930 ;  var1320 = 0 ; if ( var928 ) { if ( var931 ) { var1320 = 1 ; } else { } } else { }  var932 = var1320 ;  var933 = var84 [ 0 ] ;  var934 = var933 == var86 ;  var1321 = 0 ; if ( var92 ) { if ( var934 ) { var1321 = 1 ; } else { } } else { }  var935 = var1321 ;  var936 = int var562 = var935 ; if ( var562 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_69:
      |                                                                                                                                                                                                                                                                                                                                                                                    ^~
output.c:74:430: error: expected identifier or ‘(’ before ‘else’
   74 |   var1387 = var90 < 0 ;  var1473 = 0 ; if ( var1387 ) { var1473 = 1 ; } else { }  var1388 = var1473 ;  var1389 =  var928 = var1388 ;  var929 = var90 % 8 ;  var930 = 8 - 1 ;  var931 = var929 < var930 ;  var1320 = 0 ; if ( var928 ) { if ( var931 ) { var1320 = 1 ; } else { } } else { }  var932 = var1320 ;  var933 = var84 [ 0 ] ;  var934 = var933 == var86 ;  var1321 = 0 ; if ( var92 ) { if ( var934 ) { var1321 = 1 ; } else { } } else { }  var935 = var1321 ;  var936 = int var562 = var935 ; if ( var562 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_69:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                              ^~~~
output.c:74:440: warning: data definition has no type or storage class
   74 |   var1387 = var90 < 0 ;  var1473 = 0 ; if ( var1387 ) { var1473 = 1 ; } else { }  var1388 = var1473 ;  var1389 =  var928 = var1388 ;  var929 = var90 % 8 ;  var930 = 8 - 1 ;  var931 = var929 < var930 ;  var1320 = 0 ; if ( var928 ) { if ( var931 ) { var1320 = 1 ; } else { } } else { }  var932 = var1320 ;  var933 = var84 [ 0 ] ;  var934 = var933 == var86 ;  var1321 = 0 ; if ( var92 ) { if ( var934 ) { var1321 = 1 ; } else { } } else { }  var935 = var1321 ;  var936 = int var562 = var935 ; if ( var562 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_69:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                        ^~~~~~
output.c:74:440: error: type defaults to ‘int’ in declaration of ‘var935’ [-Wimplicit-int]
output.c:74:449: error: initializer element is not constant
   74 |   var1387 = var90 < 0 ;  var1473 = 0 ; if ( var1387 ) { var1473 = 1 ; } else { }  var1388 = var1473 ;  var1389 =  var928 = var1388 ;  var929 = var90 % 8 ;  var930 = 8 - 1 ;  var931 = var929 < var930 ;  var1320 = 0 ; if ( var928 ) { if ( var931 ) { var1320 = 1 ; } else { } } else { }  var932 = var1320 ;  var933 = var84 [ 0 ] ;  var934 = var933 == var86 ;  var1321 = 0 ; if ( var92 ) { if ( var934 ) { var1321 = 1 ; } else { } } else { }  var935 = var1321 ;  var936 = int var562 = var935 ; if ( var562 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_69:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^~~~~~~
output.c:74:460: warning: data definition has no type or storage class
   74 |   var1387 = var90 < 0 ;  var1473 = 0 ; if ( var1387 ) { var1473 = 1 ; } else { }  var1388 = var1473 ;  var1389 =  var928 = var1388 ;  var929 = var90 % 8 ;  var930 = 8 - 1 ;  var931 = var929 < var930 ;  var1320 = 0 ; if ( var928 ) { if ( var931 ) { var1320 = 1 ; } else { } } else { }  var932 = var1320 ;  var933 = var84 [ 0 ] ;  var934 = var933 == var86 ;  var1321 = 0 ; if ( var92 ) { if ( var934 ) { var1321 = 1 ; } else { } } else { }  var935 = var1321 ;  var936 = int var562 = var935 ; if ( var562 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_69:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ^~~~~~
output.c:74:460: error: type defaults to ‘int’ in declaration of ‘var936’ [-Wimplicit-int]
output.c:74:469: error: expected expression before ‘int’
   74 |   var1387 = var90 < 0 ;  var1473 = 0 ; if ( var1387 ) { var1473 = 1 ; } else { }  var1388 = var1473 ;  var1389 =  var928 = var1388 ;  var929 = var90 % 8 ;  var930 = 8 - 1 ;  var931 = var929 < var930 ;  var1320 = 0 ; if ( var928 ) { if ( var931 ) { var1320 = 1 ; } else { } } else { }  var932 = var1320 ;  var933 = var84 [ 0 ] ;  var934 = var933 == var86 ;  var1321 = 0 ; if ( var92 ) { if ( var934 ) { var1321 = 1 ; } else { } } else { }  var935 = var1321 ;  var936 = int var562 = var935 ; if ( var562 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_69:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     ^~~
output.c:74:491: error: expected identifier or ‘(’ before ‘if’
   74 |   var1387 = var90 < 0 ;  var1473 = 0 ; if ( var1387 ) { var1473 = 1 ; } else { }  var1388 = var1473 ;  var1389 =  var928 = var1388 ;  var929 = var90 % 8 ;  var930 = 8 - 1 ;  var931 = var929 < var930 ;  var1320 = 0 ; if ( var928 ) { if ( var931 ) { var1320 = 1 ; } else { } } else { }  var932 = var1320 ;  var933 = var84 [ 0 ] ;  var934 = var933 == var86 ;  var1321 = 0 ; if ( var92 ) { if ( var934 ) { var1321 = 1 ; } else { } } else { }  var935 = var1321 ;  var936 = int var562 = var935 ; if ( var562 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 - ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_69:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ^~
output.c:75:107: error: stray ‘#’ in program
   75 |   var1390 = var91 < var90 ;  var1474 = 0 ; if ( var1390 ) { var1474 = 1 ; } else { }  var1391 = var1474 ; #83 ( var91 ) ; = var86 ; var91 = = 1 ; var87 + ; goto label_69 ; } else { } label_70:
      |                                                                                                           ^
output.c:76:4: error: expected identifier or ‘(’ before ‘goto’
   76 |  } goto label_68 ; } else {  var937 = var84 [ 0 ] ;  var938 = var937 == var88 ;  var939 = int var563 = var938 ; if ( var563 ) { var92 = 1 ; } else { goto label_68 ; } } var90 = var90 - ( 1 ) ; goto label_67 ; } label_68:
      |    ^~~~
output.c:76:20: error: expected identifier or ‘(’ before ‘}’ token
   76 |  } goto label_68 ; } else {  var937 = var84 [ 0 ] ;  var938 = var937 == var88 ;  var939 = int var563 = var938 ; if ( var563 ) { var92 = 1 ; } else { goto label_68 ; } } var90 = var90 - ( 1 ) ; goto label_67 ; } label_68:
      |                    ^
output.c:76:22: error: expected identifier or ‘(’ before ‘else’
   76 |  } goto label_68 ; } else {  var937 = var84 [ 0 ] ;  var938 = var937 == var88 ;  var939 = int var563 = var938 ; if ( var563 ) { var92 = 1 ; } else { goto label_68 ; } } var90 = var90 - ( 1 ) ; goto label_67 ; } label_68:
      |                      ^~~~
output.c:76:170: warning: data definition has no type or storage class
   76 |  } goto label_68 ; } else {  var937 = var84 [ 0 ] ;  var938 = var937 == var88 ;  var939 = int var563 = var938 ; if ( var563 ) { var92 = 1 ; } else { goto label_68 ; } } var90 = var90 - ( 1 ) ; goto label_67 ; } label_68:
      |                                                                                                                                                                          ^~~~~
output.c:76:170: error: type defaults to ‘int’ in declaration of ‘var90’ [-Wimplicit-int]
output.c:76:170: error: redefinition of ‘var90’
output.c:68:179: note: previous definition of ‘var90’ with type ‘int’
   68 |  } else { } goto label_60 ; } else {  var916 = var84 [ 0 ] ;  var917 = var916 == var88 ;  var918 = int var559 = var917 ; if ( var559 ) { var92 = 1 ; } else { goto label_60 ; } } var90 = var90 - ( 8 ) ; goto label_59 ; } label_60:
      |                                                                                                                                                                                   ^~~~~
output.c:76:178: error: initializer element is not constant
   76 |  } goto label_68 ; } else {  var937 = var84 [ 0 ] ;  var938 = var937 == var88 ;  var939 = int var563 = var938 ; if ( var563 ) { var92 = 1 ; } else { goto label_68 ; } } var90 = var90 - ( 1 ) ; goto label_67 ; } label_68:
      |                                                                                                                                                                                  ^~~~~
output.c:76:194: error: expected identifier or ‘(’ before ‘goto’
   76 |  } goto label_68 ; } else {  var937 = var84 [ 0 ] ;  var938 = var937 == var88 ;  var939 = int var563 = var938 ; if ( var563 ) { var92 = 1 ; } else { goto label_68 ; } } var90 = var90 - ( 1 ) ; goto label_67 ; } label_68:
      |                                                                                                                                                                                                  ^~~~
output.c:76:210: error: expected identifier or ‘(’ before ‘}’ token
   76 |  } goto label_68 ; } else {  var937 = var84 [ 0 ] ;  var938 = var937 == var88 ;  var939 = int var563 = var938 ; if ( var563 ) { var92 = 1 ; } else { goto label_68 ; } } var90 = var90 - ( 1 ) ; goto label_67 ; } label_68:
      |                                                                                                                                                                                                                  ^
output.c:76:220: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘:’ token
   76 |  } goto label_68 ; } else {  var937 = var84 [ 0 ] ;  var938 = var937 == var88 ;  var939 = int var563 = var938 ; if ( var563 ) { var92 = 1 ; } else { goto label_68 ; } } var90 = var90 - ( 1 ) ; goto label_67 ; } label_68:
      |                                                                                                                                                                                                                            ^
output.c:77:22: warning: data definition has no type or storage class
   77 |  var90 = var89 + 1 ; var91 = var90 ; var92 = 0 ; label_71:
      |                      ^~~~~
output.c:77:22: error: type defaults to ‘int’ in declaration of ‘var91’ [-Wimplicit-int]
output.c:77:22: error: redefinition of ‘var91’
output.c:69:22: note: previous definition of ‘var91’ with type ‘int’
   69 |  var90 = var89 + 8 ; var91 = var90 ; var92 = 0 ; label_63:
      |                      ^~~~~
output.c:77:30: error: initializer element is not constant
   77 |  var90 = var89 + 1 ; var91 = var90 ; var92 = 0 ; label_71:
      |                              ^~~~~
output.c:77:38: warning: data definition has no type or storage class
   77 |  var90 = var89 + 1 ; var91 = var90 ; var92 = 0 ; label_71:
      |                                      ^~~~~
output.c:77:38: error: type defaults to ‘int’ in declaration of ‘var92’ [-Wimplicit-int]
output.c:77:38: error: redefinition of ‘var92’
output.c:69:38: note: previous definition of ‘var92’ with type ‘int’
   69 |  var90 = var89 + 8 ; var91 = var90 ; var92 = 0 ; label_63:
      |                                      ^~~~~
output.c:77:58: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘:’ token
   77 |  var90 = var89 + 1 ; var91 = var90 ; var92 = 0 ; label_71:
      |                                                          ^
output.c:78:25: warning: data definition has no type or storage class
   78 |   var940 = var90 % 8 ;  var941 = var940 > 0 ;  var942 = var84 [ 0 ] ;  var943 = var942 == var86 ;  var1322 = 0 ; if ( var92 ) { if ( var943 ) { var1322 = 1 ; } else { } } else { }  var944 = var1322 ;  var945 = int var564 = var944 ; if ( var564 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 + ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_73:
      |                         ^~~~~~
output.c:78:25: error: type defaults to ‘int’ in declaration of ‘var941’ [-Wimplicit-int]
output.c:78:34: error: ‘var940’ undeclared here (not in a function); did you mean ‘var941’?
   78 |   var940 = var90 % 8 ;  var941 = var940 > 0 ;  var942 = var84 [ 0 ] ;  var943 = var942 == var86 ;  var1322 = 0 ; if ( var92 ) { if ( var943 ) { var1322 = 1 ; } else { } } else { }  var944 = var1322 ;  var945 = int var564 = var944 ; if ( var564 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 + ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_73:
      |                                  ^~~~~~
      |                                  var941
output.c:78:48: warning: data definition has no type or storage class
   78 |   var940 = var90 % 8 ;  var941 = var940 > 0 ;  var942 = var84 [ 0 ] ;  var943 = var942 == var86 ;  var1322 = 0 ; if ( var92 ) { if ( var943 ) { var1322 = 1 ; } else { } } else { }  var944 = var1322 ;  var945 = int var564 = var944 ; if ( var564 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 + ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_73:
      |                                                ^~~~~~
output.c:78:48: error: type defaults to ‘int’ in declaration of ‘var942’ [-Wimplicit-int]
output.c:78:72: warning: data definition has no type or storage class
   78 |   var940 = var90 % 8 ;  var941 = var940 > 0 ;  var942 = var84 [ 0 ] ;  var943 = var942 == var86 ;  var1322 = 0 ; if ( var92 ) { if ( var943 ) { var1322 = 1 ; } else { } } else { }  var944 = var1322 ;  var945 = int var564 = var944 ; if ( var564 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 + ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_73:
      |                                                                        ^~~~~~
output.c:78:72: error: type defaults to ‘int’ in declaration of ‘var943’ [-Wimplicit-int]
output.c:78:100: warning: data definition has no type or storage class
   78 |   var940 = var90 % 8 ;  var941 = var940 > 0 ;  var942 = var84 [ 0 ] ;  var943 = var942 == var86 ;  var1322 = 0 ; if ( var92 ) { if ( var943 ) { var1322 = 1 ; } else { } } else { }  var944 = var1322 ;  var945 = int var564 = var944 ; if ( var564 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 + ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_73:
      |                                                                                                    ^~~~~~~
output.c:78:100: error: type defaults to ‘int’ in declaration of ‘var1322’ [-Wimplicit-int]
output.c:78:114: error: expected identifier or ‘(’ before ‘if’
   78 |   var940 = var90 % 8 ;  var941 = var940 > 0 ;  var942 = var84 [ 0 ] ;  var943 = var942 == var86 ;  var1322 = 0 ; if ( var92 ) { if ( var943 ) { var1322 = 1 ; } else { } } else { }  var944 = var1322 ;  var945 = int var564 = var944 ; if ( var564 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 + ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_73:
      |                                                                                                                  ^~
output.c:78:172: error: expected identifier or ‘(’ before ‘else’
   78 |   var940 = var90 % 8 ;  var941 = var940 > 0 ;  var942 = var84 [ 0 ] ;  var943 = var942 == var86 ;  var1322 = 0 ; if ( var92 ) { if ( var943 ) { var1322 = 1 ; } else { } } else { }  var944 = var1322 ;  var945 = int var564 = var944 ; if ( var564 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 + ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_73:
      |                                                                                                                                                                            ^~~~
output.c:78:182: warning: data definition has no type or storage class
   78 |   var940 = var90 % 8 ;  var941 = var940 > 0 ;  var942 = var84 [ 0 ] ;  var943 = var942 == var86 ;  var1322 = 0 ; if ( var92 ) { if ( var943 ) { var1322 = 1 ; } else { } } else { }  var944 = var1322 ;  var945 = int var564 = var944 ; if ( var564 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 + ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_73:
      |                                                                                                                                                                                      ^~~~~~
output.c:78:182: error: type defaults to ‘int’ in declaration of ‘var944’ [-Wimplicit-int]
output.c:78:191: error: initializer element is not constant
   78 |   var940 = var90 % 8 ;  var941 = var940 > 0 ;  var942 = var84 [ 0 ] ;  var943 = var942 == var86 ;  var1322 = 0 ; if ( var92 ) { if ( var943 ) { var1322 = 1 ; } else { } } else { }  var944 = var1322 ;  var945 = int var564 = var944 ; if ( var564 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 + ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_73:
      |                                                                                                                                                                                               ^~~~~~~
output.c:78:202: warning: data definition has no type or storage class
   78 |   var940 = var90 % 8 ;  var941 = var940 > 0 ;  var942 = var84 [ 0 ] ;  var943 = var942 == var86 ;  var1322 = 0 ; if ( var92 ) { if ( var943 ) { var1322 = 1 ; } else { } } else { }  var944 = var1322 ;  var945 = int var564 = var944 ; if ( var564 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 + ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_73:
      |                                                                                                                                                                                                          ^~~~~~
output.c:78:202: error: type defaults to ‘int’ in declaration of ‘var945’ [-Wimplicit-int]
output.c:78:211: error: expected expression before ‘int’
   78 |   var940 = var90 % 8 ;  var941 = var940 > 0 ;  var942 = var84 [ 0 ] ;  var943 = var942 == var86 ;  var1322 = 0 ; if ( var92 ) { if ( var943 ) { var1322 = 1 ; } else { } } else { }  var944 = var1322 ;  var945 = int var564 = var944 ; if ( var564 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 + ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_73:
      |                                                                                                                                                                                                                   ^~~
output.c:78:233: error: expected identifier or ‘(’ before ‘if’
   78 |   var940 = var90 % 8 ;  var941 = var940 > 0 ;  var942 = var84 [ 0 ] ;  var943 = var942 == var86 ;  var1322 = 0 ; if ( var92 ) { if ( var943 ) { var1322 = 1 ; } else { } } else { }  var944 = var1322 ;  var945 = int var564 = var944 ; if ( var564 ) { { { var84 [ 0 ] var91 ) = var86 ; var91 = var91 + ( 1 ) ; var87 ; var87 = var87 + 1 ; } label_73:
      |                                                                                                                                                                                                                                         ^~
output.c:79:107: error: stray ‘#’ in program
   79 |   var1392 = var91 > var90 ;  var1475 = 0 ; if ( var1392 ) { var1475 = 1 ; } else { }  var1393 = var1475 ; #83 ( var91 ) ; = var86 ; var91 = = 1 ; var87 + ; goto label_73 ; } else { } label_74:
      |                                                                                                           ^
output.c:80:4: error: expected identifier or ‘(’ before ‘goto’
   80 |  } goto label_72 ; } else {  var946 = var84 [ 0 ] ;  var947 = var946 == var88 ;  var948 = int var565 = var947 ; if ( var565 ) { var92 = 1 ; } else { goto label_72 ; } } var90 = var90 + ( 1 ) ; goto label_71 ; } label_72:
      |    ^~~~
output.c:80:20: error: expected identifier or ‘(’ before ‘}’ token
   80 |  } goto label_72 ; } else {  var946 = var84 [ 0 ] ;  var947 = var946 == var88 ;  var948 = int var565 = var947 ; if ( var565 ) { var92 = 1 ; } else { goto label_72 ; } } var90 = var90 + ( 1 ) ; goto label_71 ; } label_72:
      |                    ^
output.c:80:22: error: expected identifier or ‘(’ before ‘else’
   80 |  } goto label_72 ; } else {  var946 = var84 [ 0 ] ;  var947 = var946 == var88 ;  var948 = int var565 = var947 ; if ( var565 ) { var92 = 1 ; } else { goto label_72 ; } } var90 = var90 + ( 1 ) ; goto label_71 ; } label_72:
      |                      ^~~~
output.c:80:170: warning: data definition has no type or storage class
   80 |  } goto label_72 ; } else {  var946 = var84 [ 0 ] ;  var947 = var946 == var88 ;  var948 = int var565 = var947 ; if ( var565 ) { var92 = 1 ; } else { goto label_72 ; } } var90 = var90 + ( 1 ) ; goto label_71 ; } label_72:
      |                                                                                                                                                                          ^~~~~
output.c:80:170: error: type defaults to ‘int’ in declaration of ‘var90’ [-Wimplicit-int]
output.c:80:170: error: redefinition of ‘var90’
output.c:68:179: note: previous definition of ‘var90’ with type ‘int’
   68 |  } else { } goto label_60 ; } else {  var916 = var84 [ 0 ] ;  var917 = var916 == var88 ;  var918 = int var559 = var917 ; if ( var559 ) { var92 = 1 ; } else { goto label_60 ; } } var90 = var90 - ( 8 ) ; goto label_59 ; } label_60:
      |                                                                                                                                                                                   ^~~~~
output.c:80:178: error: initializer element is not constant
   80 |  } goto label_72 ; } else {  var946 = var84 [ 0 ] ;  var947 = var946 == var88 ;  var948 = int var565 = var947 ; if ( var565 ) { var92 = 1 ; } else { goto label_72 ; } } var90 = var90 + ( 1 ) ; goto label_71 ; } label_72:
      |                                                                                                                                                                                  ^~~~~
output.c:80:194: error: expected identifier or ‘(’ before ‘goto’
   80 |  } goto label_72 ; } else {  var946 = var84 [ 0 ] ;  var947 = var946 == var88 ;  var948 = int var565 = var947 ; if ( var565 ) { var92 = 1 ; } else { goto label_72 ; } } var90 = var90 + ( 1 ) ; goto label_71 ; } label_72:
      |                                                                                                                                                                                                  ^~~~
output.c:80:210: error: expected identifier or ‘(’ before ‘}’ token
   80 |  } goto label_72 ; } else {  var946 = var84 [ 0 ] ;  var947 = var946 == var88 ;  var948 = int var565 = var947 ; if ( var565 ) { var92 = 1 ; } else { goto label_72 ; } } var90 = var90 + ( 1 ) ; goto label_71 ; } label_72:
      |                                                                                                                                                                                                                  ^
output.c:80:220: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘:’ token
   80 |  } goto label_72 ; } else {  var946 = var84 [ 0 ] ;  var947 = var946 == var88 ;  var948 = int var565 = var947 ; if ( var565 ) { var92 = 1 ; } else { goto label_72 ; } } var90 = var90 + ( 1 ) ; goto label_71 ; } label_72:
      |                                                                                                                                                                                                                            ^
output.c:81:25: warning: data definition has no type or storage class
   81 |   var949 = var89 + 1 ;  var950 = var949 - 8 ;  var951 = var90 = var950 ; var91 = var90 ; var92 = 0 ; label_75:
      |                         ^~~~~~
output.c:81:25: error: type defaults to ‘int’ in declaration of ‘var950’ [-Wimplicit-int]
output.c:81:34: error: ‘var949’ undeclared here (not in a function); did you mean ‘var945’?
   81 |   var949 = var89 + 1 ;  var950 = var949 - 8 ;  var951 = var90 = var950 ; var91 = var90 ; var92 = 0 ; label_75:
      |                                  ^~~~~~
      |                                  var945
output.c:81:48: warning: data definition has no type or storage class
   81 |   var949 = var89 + 1 ;  var950 = var949 - 8 ;  var951 = var90 = var950 ; var91 = var90 ; var92 = 0 ; label_75:
      |                                                ^~~~~~
output.c:81:48: error: type defaults to ‘int’ in declaration of ‘var951’ [-Wimplicit-int]
output.c:81:57: error: initializer element is not constant
   81 |   var949 = var89 + 1 ;  var950 = var949 - 8 ;  var951 = var90 = var950 ; var91 = var90 ; var92 = 0 ; label_75:
      |                                                         ^~~~~
output.c:81:74: warning: data definition has no type or storage class
   81 |   var949 = var89 + 1 ;  var950 = var949 - 8 ;  var951 = var90 = var950 ; var91 = var90 ; var92 = 0 ; label_75:
      |                                                                          ^~~~~
output.c:81:74: error: type defaults to ‘int’ in declaration of ‘var91’ [-Wimplicit-int]
output.c:81:74: error: redefinition of ‘var91’
output.c:69:22: note: previous definition of ‘var91’ with type ‘int’
   69 |  var90 = var89 + 8 ; var91 = var90 ; var92 = 0 ; label_63:
      |                      ^~~~~
output.c:81:82: error: initializer element is not constant
   81 |   var949 = var89 + 1 ;  var950 = var949 - 8 ;  var951 = var90 = var950 ; var91 = var90 ; var92 = 0 ; label_75:
      |                                                                                  ^~~~~
output.c:81:90: warning: data definition has no type or storage class
   81 |   var949 = var89 + 1 ;  var950 = var949 - 8 ;  var951 = var90 = var950 ; var91 = var90 ; var92 = 0 ; label_75:
      |                                                                                          ^~~~~
output.c:81:90: error: type defaults to ‘int’ in declaration of ‘var92’ [-Wimplicit-int]
output.c:81:90: error: redefinition of ‘var92’
output.c:69:38: note: previous definition of ‘var92’ with type ‘int’
   69 |  var90 = var89 + 8 ; var91 = var90 ; var92 = 0 ; label_63:
      |                                      ^~~~~
output.c:81:110: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘:’ token
   81 |   var949 = var89 + 1 ;  var950 = var949 - 8 ;  var951 = var90 = var950 ; var91 = var90 ; var92 = 0 ; label_75:
      |                                                                                                              ^
output.c:82:26: warning: data definition has no type or storage class
   82 |   var1394 = var90 < 0 ;  var1476 = 0 ; if ( var1394 ) { var1476 = 1 ; } else { }  var1395 = var1476 ;  var1396 =  var952 = var1395 ;  var953 = var90 % 8 ;  var954 = var953 > 0 ;  var1323 = 0 ; if ( var952 ) { if ( var954 ) { var1323 = 1 ; } else { } } else { }  var955 = var1323 ;  var956 = var84 [ 0 ] ;  var957 = var956 == var86 ;  var1324 = 0 ; if ( var92 ) { if ( var957 ) { var1324 = 1 ; } else { } } else { }  var958 = var1324 ;  var959 = int var566 = var958 ; if ( var566 ) { { { var84 [ 0 ] var91 ) = var86 ;  var960 = 1 - 8 ;  var961 = var91 + var960 ;  var962 = var91 = var961 ; var87 ; var87 = var87 + 1 ; } label_77:
      |                          ^~~~~~~
output.c:82:26: error: type defaults to ‘int’ in declaration of ‘var1476’ [-Wimplicit-int]
output.c:82:40: error: expected identifier or ‘(’ before ‘if’
   82 |   var1394 = var90 < 0 ;  var1476 = 0 ; if ( var1394 ) { var1476 = 1 ; } else { }  var1395 = var1476 ;  var1396 =  var952 = var1395 ;  var953 = var90 % 8 ;  var954 = var953 > 0 ;  var1323 = 0 ; if ( var952 ) { if ( var954 ) { var1323 = 1 ; } else { } } else { }  var955 = var1323 ;  var956 = var84 [ 0 ] ;  var957 = var956 == var86 ;  var1324 = 0 ; if ( var92 ) { if ( var957 ) { var1324 = 1 ; } else { } } else { }  var958 = var1324 ;  var959 = int var566 = var958 ; if ( var566 ) { { { var84 [ 0 ] var91 ) = var86 ;  var960 = 1 - 8 ;  var961 = var91 + var960 ;  var962 = var91 = var961 ; var87 ; var87 = var87 + 1 ; } label_77:
      |                                        ^~
output.c:82:73: error: expected identifier or ‘(’ before ‘else’
   82 |   var1394 = var90 < 0 ;  var1476 = 0 ; if ( var1394 ) { var1476 = 1 ; } else { }  var1395 = var1476 ;  var1396 =  var952 = var1395 ;  var953 = var90 % 8 ;  var954 = var953 > 0 ;  var1323 = 0 ; if ( var952 ) { if ( var954 ) { var1323 = 1 ; } else { } } else { }  var955 = var1323 ;  var956 = var84 [ 0 ] ;  var957 = var956 == var86 ;  var1324 = 0 ; if ( var92 ) { if ( var957 ) { var1324 = 1 ; } else { } } else { }  var958 = var1324 ;  var959 = int var566 = var958 ; if ( var566 ) { { { var84 [ 0 ] var91 ) = var86 ;  var960 = 1 - 8 ;  var961 = var91 + var960 ;  var962 = var91 = var961 ; var87 ; var87 = var87 + 1 ; } label_77:
      |                                                                         ^~~~
output.c:82:83: warning: data definition has no type or storage class
   82 |   var1394 = var90 < 0 ;  var1476 = 0 ; if ( var1394 ) { var1476 = 1 ; } else { }  var1395 = var1476 ;  var1396 =  var952 = var1395 ;  var953 = var90 % 8 ;  var954 = var953 > 0 ;  var1323 = 0 ; if ( var952 ) { if ( var954 ) { var1323 = 1 ; } else { } } else { }  var955 = var1323 ;  var956 = var84 [ 0 ] ;  var957 = var956 == var86 ;  var1324 = 0 ; if ( var92 ) { if ( var957 ) { var1324 = 1 ; } else { } } else { }  var958 = var1324 ;  var959 = int var566 = var958 ; if ( var566 ) { { { var84 [ 0 ] var91 ) = var86 ;  var960 = 1 - 8 ;  var961 = var91 + var960 ;  var962 = var91 = var961 ; var87 ; var87 = var87 + 1 ; } label_77:
      |                                                                                   ^~~~~~~
output.c:82:83: error: type defaults to ‘int’ in declaration of ‘var1395’ [-Wimplicit-int]
output.c:82:93: error: initializer element is not constant
   82 |   var1394 = var90 < 0 ;  var1476 = 0 ; if ( var1394 ) { var1476 = 1 ; } else { }  var1395 = var1476 ;  var1396 =  var952 = var1395 ;  var953 = var90 % 8 ;  var954 = var953 > 0 ;  var1323 = 0 ; if ( var952 ) { if ( var954 ) { var1323 = 1 ; } else { } } else { }  var955 = var1323 ;  var956 = var84 [ 0 ] ;  var957 = var956 == var86 ;  var1324 = 0 ; if ( var92 ) { if ( var957 ) { var1324 = 1 ; } else { } } else { }  var958 = var1324 ;  var959 = int var566 = var958 ; if ( var566 ) { { { var84 [ 0 ] var91 ) = var86 ;  var960 = 1 - 8 ;  var961 = var91 + var960 ;  var962 = var91 = var961 ; var87 ; var87 = var87 + 1 ; } label_77:
      |                                                                                             ^~~~~~~
output.c:82:104: warning: data definition has no type or storage class
   82 |   var1394 = var90 < 0 ;  var1476 = 0 ; if ( var1394 ) { var1476 = 1 ; } else { }  var1395 = var1476 ;  var1396 =  var952 = var1395 ;  var953 = var90 % 8 ;  var954 = var953 > 0 ;  var1323 = 0 ; if ( var952 ) { if ( var954 ) { var1323 = 1 ; } else { } } else { }  var955 = var1323 ;  var956 = var84 [ 0 ] ;  var957 = var956 == var86 ;  var1324 = 0 ; if ( var92 ) { if ( var957 ) { var1324 = 1 ; } else { } } else { }  var958 = var1324 ;  var959 = int var566 = var958 ; if ( var566 ) { { { var84 [ 0 ] var91 ) = var86 ;  var960 = 1 - 8 ;  var961 = var91 + var960 ;  var962 = var91 = var961 ; var87 ; var87 = var87 + 1 ; } label_77:
      |                                                                                                        ^~~~~~~
output.c:82:104: error: type defaults to ‘int’ in declaration of ‘var1396’ [-Wimplicit-int]
output.c:82:115: error: ‘var952’ undeclared here (not in a function); did you mean ‘var92’?
   82 |   var1394 = var90 < 0 ;  var1476 = 0 ; if ( var1394 ) { var1476 = 1 ; } else { }  var1395 = var1476 ;  var1396 =  var952 = var1395 ;  var953 = var90 % 8 ;  var954 = var953 > 0 ;  var1323 = 0 ; if ( var952 ) { if ( var954 ) { var1323 = 1 ; } else { } } else { }  var955 = var1323 ;  var956 = var84 [ 0 ] ;  var957 = var956 == var86 ;  var1324 = 0 ; if ( var92 ) { if ( var957 ) { var1324 = 1 ; } else { } } else { }  var958 = var1324 ;  var959 = int var566 = var958 ; if ( var566 ) { { { var84 [ 0 ] var91 ) = var86 ;  var960 = 1 - 8 ;  var961 = var91 + var960 ;  var962 = var91 = var961 ; var87 ; var87 = var87 + 1 ; } label_77:
      |                                                                                                                   ^~~~~~
      |                                                                                                                   var92
output.c:82:135: warning: data definition has no type or storage class
   82 |   var1394 = var90 < 0 ;  var1476 = 0 ; if ( var1394 ) { var1476 = 1 ; } else { }  var1395 = var1476 ;  var1396 =  var952 = var1395 ;  var953 = var90 % 8 ;  var954 = var953 > 0 ;  var1323 = 0 ; if ( var952 ) { if ( var954 ) { var1323 = 1 ; } else { } } else { }  var955 = var1323 ;  var956 = var84 [ 0 ] ;  var957 = var956 == var86 ;  var1324 = 0 ; if ( var92 ) { if ( var957 ) { var1324 = 1 ; } else { } } else { }  var958 = var1324 ;  var959 = int var566 = var958 ; if ( var566 ) { { { var84 [ 0 ] var91 ) = var86 ;  var960 = 1 - 8 ;  var961 = var91 + var960 ;  var962 = var91 = var961 ; var87 ; var87 = var87 + 1 ; } label_77:
      |                                                                                                                                       ^~~~~~
output.c:82:135: error: type defaults to ‘int’ in declaration of ‘var953’ [-Wimplicit-int]
output.c:82:144: error: initializer element is not constant
   82 |   var1394 = var90 < 0 ;  var1476 = 0 ; if ( var1394 ) { var1476 = 1 ; } else { }  var1395 = var1476 ;  var1396 =  var952 = var1395 ;  var953 = var90 % 8 ;  var954 = var953 > 0 ;  var1323 = 0 ; if ( var952 ) { if ( var954 ) { var1323 = 1 ; } else { } } else { }  var955 = var1323 ;  var956 = var84 [ 0 ] ;  var957 = var956 == var86 ;  var1324 = 0 ; if ( var92 ) { if ( var957 ) { var1324 = 1 ; } else { } } else { }  var958 = var1324 ;  var959 = int var566 = var958 ; if ( var566 ) { { { var84 [ 0 ] var91 ) = var86 ;  var960 = 1 - 8 ;  var961 = var91 + var960 ;  var962 = var91 = var961 ; var87 ; var87 = var87 + 1 ; } label_77:
      |                                                                                                                                                ^~~~~
output.c:82:157: warning: data definition has no type or storage class
   82 |   var1394 = var90 < 0 ;  var1476 = 0 ; if ( var1394 ) { var1476 = 1 ; } else { }  var1395 = var1476 ;  var1396 =  var952 = var1395 ;  var953 = var90 % 8 ;  var954 = var953 > 0 ;  var1323 = 0 ; if ( var952 ) { if ( var954 ) { var1323 = 1 ; } else { } } else { }  var955 = var1323 ;  var956 = var84 [ 0 ] ;  var957 = var956 == var86 ;  var1324 = 0 ; if ( var92 ) { if ( var957 ) { var1324 = 1 ; } else { } } else { }  var958 = var1324 ;  var959 = int var566 = var958 ; if ( var566 ) { { { var84 [ 0 ] var91 ) = var86 ;  var960 = 1 - 8 ;  var961 = var91 + var960 ;  var962 = var91 = var961 ; var87 ; var87 = var87 + 1 ; } label_77:
      |                                                                                                                                                             ^~~~~~
output.c:82:157: error: type defaults to ‘int’ in declaration of ‘var954’ [-Wimplicit-int]
output.c:82:166: error: initializer element is not constant
   82 |   var1394 = var90 < 0 ;  var1476 = 0 ; if ( var1394 ) { var1476 = 1 ; } else { }  var1395 = var1476 ;  var1396 =  var952 = var1395 ;  var953 = var90 % 8 ;  var954 = var953 > 0 ;  var1323 = 0 ; if ( var952 ) { if ( var954 ) { var1323 = 1 ; } else { } } else { }  var955 = var1323 ;  var956 = var84 [ 0 ] ;  var957 = var956 == var86 ;  var1324 = 0 ; if ( var92 ) { if ( var957 ) { var1324 = 1 ; } else { } } else { }  var958 = var1324 ;  var959 = int var566 = var958 ; if ( var566 ) { { { var84 [ 0 ] var91 ) = var86 ;  var960 = 1 - 8 ;  var961 = var91 + var960 ;  var962 = var91 = var961 ; var87 ; var87 = var87 + 1 ; } label_77:
      |                                                                                                                                                                      ^~~~~~
output.c:82:180: warning: data definition has no type or storage class
   82 |   var1394 = var90 < 0 ;  var1476 = 0 ; if ( var1394 ) { var1476 = 1 ; } else { }  var1395 = var1476 ;  var1396 =  var952 = var1395 ;  var953 = var90 % 8 ;  var954 = var953 > 0 ;  var1323 = 0 ; if ( var952 ) { if ( var954 ) { var1323 = 1 ; } else { } } else { }  var955 = var1323 ;  var956 = var84 [ 0 ] ;  var957 = var956 == var86 ;  var1324 = 0 ; if ( var92 ) { if ( var957 ) { var1324 = 1 ; } else { } } else { }  var958 = var1324 ;  var959 = int var566 = var958 ; if ( var566 ) { { { var84 [ 0 ] var91 ) = var86 ;  var960 = 1 - 8 ;  var961 = var91 + var960 ;  var962 = var91 = var961 ; var87 ; var87 = var87 + 1 ; } label_77:
      |                                                                                                                                                                                    ^~~~~~~
output.c:82:180: error: type defaults to ‘int’ in declaration of ‘var1323’ [-Wimplicit-int]
output.c:82:194: error: expected identifier or ‘(’ before ‘if’
   82 |   var1394 = var90 < 0 ;  var1476 = 0 ; if ( var1394 ) { var1476 = 1 ; } else { }  var1395 = var1476 ;  var1396 =  var952 = var1395 ;  var953 = var90 % 8 ;  var954 = var953 > 0 ;  var1323 = 0 ; if ( var952 ) { if ( var954 ) { var1323 = 1 ; } else { } } else { }  var955 = var1323 ;  var956 = var84 [ 0 ] ;  var957 = var956 == var86 ;  var1324 = 0 ; if ( var92 ) { if ( var957 ) { var1324 = 1 ; } else { } } else { }  var958 = var1324 ;  var959 = int var566 = var958 ; if ( var566 ) { { { var84 [ 0 ] var91 ) = var86 ;  var960 = 1 - 8 ;  var961 = var91 + var960 ;  var962 = var91 = var961 ; var87 ; var87 = var87 + 1 ; } label_77:
      |                                                                                                                                                                                                  ^~
output.c:82:253: error: expected identifier or ‘(’ before ‘else’
   82 |   var1394 = var90 < 0 ;  var1476 = 0 ; if ( var1394 ) { var1476 = 1 ; } else { }  var1395 = var1476 ;  var1396 =  var952 = var1395 ;  var953 = var90 % 8 ;  var954 = var953 > 0 ;  var1323 = 0 ; if ( var952 ) { if ( var954 ) { var1323 = 1 ; } else { } } else { }  var955 = var1323 ;  var956 = var84 [ 0 ] ;  var957 = var956 == var86 ;  var1324 = 0 ; if ( var92 ) { if ( var957 ) { var1324 = 1 ; } else { } } else { }  var958 = var1324 ;  var959 = int var566 = var958 ; if ( var566 ) { { { var84 [ 0 ] var91 ) = var86 ;  var960 = 1 - 8 ;  var961 = var91 + var960 ;  var962 = var91 = var961 ; var87 ; var87 = var87 + 1 ; } label_77:
      |                                                                                                                                                                                                                                                             ^~~~
output.c:82:263: warning: data definition has no type or storage class
   82 |   var1394 = var90 < 0 ;  var1476 = 0 ; if ( var1394 ) { var1476 = 1 ; } else { }  var1395 = var1476 ;  var1396 =  var952 = var1395 ;  var953 = var90 % 8 ;  var954 = var953 > 0 ;  var1323 = 0 ; if ( var952 ) { if ( var954 ) { var1323 = 1 ; } else { } } else { }  var955 = var1323 ;  var956 = var84 [ 0 ] ;  var957 = var956 == var86 ;  var1324 = 0 ; if ( var92 ) { if ( var957 ) { var1324 = 1 ; } else { } } else { }  var958 = var1324 ;  var959 = int var566 = var958 ; if ( var566 ) { { { var84 [ 0 ] var91 ) = var86 ;  var960 = 1 - 8 ;  var961 = var91 + var960 ;  var962 = var91 = var961 ; var87 ; var87 = var87 + 1 ; } label_77:
      |                                                                                                                                                                                                                                                                       ^~~~~~
output.c:82:263: error: type defaults to ‘int’ in declaration of ‘var955’ [-Wimplicit-int]
output.c:82:272: error: initializer element is not constant
   82 |   var1394 = var90 < 0 ;  var1476 = 0 ; if ( var1394 ) { var1476 = 1 ; } else { }  var1395 = var1476 ;  var1396 =  var952 = var1395 ;  var953 = var90 % 8 ;  var954 = var953 > 0 ;  var1323 = 0 ; if ( var952 ) { if ( var954 ) { var1323 = 1 ; } else { } } else { }  var955 = var1323 ;  var956 = var84 [ 0 ] ;  var957 = var956 == var86 ;  var1324 = 0 ; if ( var92 ) { if ( var957 ) { var1324 = 1 ; } else { } } else { }  var958 = var1324 ;  var959 = int var566 = var958 ; if ( var566 ) { { { var84 [ 0 ] var91 ) = var86 ;  var960 = 1 - 8 ;  var961 = var91 + var960 ;  var962 = var91 = var961 ; var87 ; var87 = var87 + 1 ; } label_77:
      |                                                                                                                                                                                                                                                                                ^~~~~~~
output.c:82:283: warning: data definition has no type or storage class
   82 |   var1394 = var90 < 0 ;  var1476 = 0 ; if ( var1394 ) { var1476 = 1 ; } else { }  var1395 = var1476 ;  var1396 =  var952 = var1395 ;  var953 = var90 % 8 ;  var954 = var953 > 0 ;  var1323 = 0 ; if ( var952 ) { if ( var954 ) { var1323 = 1 ; } else { } } else { }  var955 = var1323 ;  var956 = var84 [ 0 ] ;  var957 = var956 == var86 ;  var1324 = 0 ; if ( var92 ) { if ( var957 ) { var1324 = 1 ; } else { } } else { }  var958 = var1324 ;  var959 = int var566 = var958 ; if ( var566 ) { { { var84 [ 0 ] var91 ) = var86 ;  var960 = 1 - 8 ;  var961 = var91 + var960 ;  var962 = var91 = var961 ; var87 ; var87 = var87 + 1 ; } label_77:
      |                                                                                                                                                                                                                                                                                           ^~~~~~
output.c:82:283: error: type defaults to ‘int’ in declaration of ‘var956’ [-Wimplicit-int]
output.c:82:307: warning: data definition has no type or storage class
   82 |   var1394 = var90 < 0 ;  var1476 = 0 ; if ( var1394 ) { var1476 = 1 ; } else { }  var1395 = var1476 ;  var1396 =  var952 = var1395 ;  var953 = var90 % 8 ;  var954 = var953 > 0 ;  var1323 = 0 ; if ( var952 ) { if ( var954 ) { var1323 = 1 ; } else { } } else { }  var955 = var1323 ;  var956 = var84 [ 0 ] ;  var957 = var956 == var86 ;  var1324 = 0 ; if ( var92 ) { if ( var957 ) { var1324 = 1 ; } else { } } else { }  var958 = var1324 ;  var959 = int var566 = var958 ; if ( var566 ) { { { var84 [ 0 ] var91 ) = var86 ;  var960 = 1 - 8 ;  var961 = var91 + var960 ;  var962 = var91 = var961 ; var87 ; var87 = var87 + 1 ; } label_77:
      |                                                                                                                                                                                                                                                                                                                   ^~~~~~
output.c:82:307: error: type defaults to ‘int’ in declaration of ‘var957’ [-Wimplicit-int]
output.c:82:335: warning: data definition has no type or storage class
   82 |   var1394 = var90 < 0 ;  var1476 = 0 ; if ( var1394 ) { var1476 = 1 ; } else { }  var1395 = var1476 ;  var1396 =  var952 = var1395 ;  var953 = var90 % 8 ;  var954 = var953 > 0 ;  var1323 = 0 ; if ( var952 ) { if ( var954 ) { var1323 = 1 ; } else { } } else { }  var955 = var1323 ;  var956 = var84 [ 0 ] ;  var957 = var956 == var86 ;  var1324 = 0 ; if ( var92 ) { if ( var957 ) { var1324 = 1 ; } else { } } else { }  var958 = var1324 ;  var959 = int var566 = var958 ; if ( var566 ) { { { var84 [ 0 ] var91 ) = var86 ;  var960 = 1 - 8 ;  var961 = var91 + var960 ;  var962 = var91 = var961 ; var87 ; var87 = var87 + 1 ; } label_77:
      |                                                                                                                                                                                                                                                                                                                                               ^~~~~~~
output.c:82:335: error: type defaults to ‘int’ in declaration of ‘var1324’ [-Wimplicit-int]
output.c:82:349: error: expected identifier or ‘(’ before ‘if’
   82 |   var1394 = var90 < 0 ;  var1476 = 0 ; if ( var1394 ) { var1476 = 1 ; } else { }  var1395 = var1476 ;  var1396 =  var952 = var1395 ;  var953 = var90 % 8 ;  var954 = var953 > 0 ;  var1323 = 0 ; if ( var952 ) { if ( var954 ) { var1323 = 1 ; } else { } } else { }  var955 = var1323 ;  var956 = var84 [ 0 ] ;  var957 = var956 == var86 ;  var1324 = 0 ; if ( var92 ) { if ( var957 ) { var1324 = 1 ; } else { } } else { }  var958 = var1324 ;  var959 = int var566 = var958 ; if ( var566 ) { { { var84 [ 0 ] var91 ) = var86 ;  var960 = 1 - 8 ;  var961 = var91 + var960 ;  var962 = var91 = var961 ; var87 ; var87 = var87 + 1 ; } label_77:
      |                                                                                                                                                                                                                                                                                                                                                             ^~
output.c:82:407: error: expected identifier or ‘(’ before ‘else’
   82 |   var1394 = var90 < 0 ;  var1476 = 0 ; if ( var1394 ) { var1476 = 1 ; } else { }  var1395 = var1476 ;  var1396 =  var952 = var1395 ;  var953 = var90 % 8 ;  var954 = var953 > 0 ;  var1323 = 0 ; if ( var952 ) { if ( var954 ) { var1323 = 1 ; } else { } } else { }  var955 = var1323 ;  var956 = var84 [ 0 ] ;  var957 = var956 == var86 ;  var1324 = 0 ; if ( var92 ) { if ( var957 ) { var1324 = 1 ; } else { } } else { }  var958 = var1324 ;  var959 = int var566 = var958 ; if ( var566 ) { { { var84 [ 0 ] var91 ) = var86 ;  var960 = 1 - 8 ;  var961 = var91 + var960 ;  var962 = var91 = var961 ; var87 ; var87 = var87 + 1 ; } label_77:
      |                                                                                                                                                                                                                                                                                                                                                                                                                       ^~~~
output.c:82:417: warning: data definition has no type or storage class
   82 |   var1394 = var90 < 0 ;  var1476 = 0 ; if ( var1394 ) { var1476 = 1 ; } else { }  var1395 = var1476 ;  var1396 =  var952 = var1395 ;  var953 = var90 % 8 ;  var954 = var953 > 0 ;  var1323 = 0 ; if ( var952 ) { if ( var954 ) { var1323 = 1 ; } else { } } else { }  var955 = var1323 ;  var956 = var84 [ 0 ] ;  var957 = var956 == var86 ;  var1324 = 0 ; if ( var92 ) { if ( var957 ) { var1324 = 1 ; } else { } } else { }  var958 = var1324 ;  var959 = int var566 = var958 ; if ( var566 ) { { { var84 [ 0 ] var91 ) = var86 ;  var960 = 1 - 8 ;  var961 = var91 + var960 ;  var962 = var91 = var961 ; var87 ; var87 = var87 + 1 ; } label_77:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                 ^~~~~~
output.c:82:417: error: type defaults to ‘int’ in declaration of ‘var958’ [-Wimplicit-int]
output.c:82:426: error: initializer element is not constant
   82 |   var1394 = var90 < 0 ;  var1476 = 0 ; if ( var1394 ) { var1476 = 1 ; } else { }  var1395 = var1476 ;  var1396 =  var952 = var1395 ;  var953 = var90 % 8 ;  var954 = var953 > 0 ;  var1323 = 0 ; if ( var952 ) { if ( var954 ) { var1323 = 1 ; } else { } } else { }  var955 = var1323 ;  var956 = var84 [ 0 ] ;  var957 = var956 == var86 ;  var1324 = 0 ; if ( var92 ) { if ( var957 ) { var1324 = 1 ; } else { } } else { }  var958 = var1324 ;  var959 = int var566 = var958 ; if ( var566 ) { { { var84 [ 0 ] var91 ) = var86 ;  var960 = 1 - 8 ;  var961 = var91 + var960 ;  var962 = var91 = var961 ; var87 ; var87 = var87 + 1 ; } label_77:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                          ^~~~~~~
output.c:82:437: warning: data definition has no type or storage class
   82 |   var1394 = var90 < 0 ;  var1476 = 0 ; if ( var1394 ) { var1476 = 1 ; } else { }  var1395 = var1476 ;  var1396 =  var952 = var1395 ;  var953 = var90 % 8 ;  var954 = var953 > 0 ;  var1323 = 0 ; if ( var952 ) { if ( var954 ) { var1323 = 1 ; } else { } } else { }  var955 = var1323 ;  var956 = var84 [ 0 ] ;  var957 = var956 == var86 ;  var1324 = 0 ; if ( var92 ) { if ( var957 ) { var1324 = 1 ; } else { } } else { }  var958 = var1324 ;  var959 = int var566 = var958 ; if ( var566 ) { { { var84 [ 0 ] var91 ) = var86 ;  var960 = 1 - 8 ;  var961 = var91 + var960 ;  var962 = var91 = var961 ; var87 ; var87 = var87 + 1 ; } label_77:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                     ^~~~~~
output.c:82:437: error: type defaults to ‘int’ in declaration of ‘var959’ [-Wimplicit-int]
output.c:82:446: error: expected expression before ‘int’
   82 |   var1394 = var90 < 0 ;  var1476 = 0 ; if ( var1394 ) { var1476 = 1 ; } else { }  var1395 = var1476 ;  var1396 =  var952 = var1395 ;  var953 = var90 % 8 ;  var954 = var953 > 0 ;  var1323 = 0 ; if ( var952 ) { if ( var954 ) { var1323 = 1 ; } else { } } else { }  var955 = var1323 ;  var956 = var84 [ 0 ] ;  var957 = var956 == var86 ;  var1324 = 0 ; if ( var92 ) { if ( var957 ) { var1324 = 1 ; } else { } } else { }  var958 = var1324 ;  var959 = int var566 = var958 ; if ( var566 ) { { { var84 [ 0 ] var91 ) = var86 ;  var960 = 1 - 8 ;  var961 = var91 + var960 ;  var962 = var91 = var961 ; var87 ; var87 = var87 + 1 ; } label_77:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                              ^~~
output.c:82:468: error: expected identifier or ‘(’ before ‘if’
   82 |   var1394 = var90 < 0 ;  var1476 = 0 ; if ( var1394 ) { var1476 = 1 ; } else { }  var1395 = var1476 ;  var1396 =  var952 = var1395 ;  var953 = var90 % 8 ;  var954 = var953 > 0 ;  var1323 = 0 ; if ( var952 ) { if ( var954 ) { var1323 = 1 ; } else { } } else { }  var955 = var1323 ;  var956 = var84 [ 0 ] ;  var957 = var956 == var86 ;  var1324 = 0 ; if ( var92 ) { if ( var957 ) { var1324 = 1 ; } else { } } else { }  var958 = var1324 ;  var959 = int var566 = var958 ; if ( var566 ) { { { var84 [ 0 ] var91 ) = var86 ;  var960 = 1 - 8 ;  var961 = var91 + var960 ;  var962 = var91 = var961 ; var87 ; var87 = var87 + 1 ; } label_77:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ^~
output.c:83:107: error: stray ‘#’ in program
   83 |   var1397 = var91 < var90 ;  var1477 = 0 ; if ( var1397 ) { var1477 = 1 ; } else { }  var1398 = var1477 ; #83 ( var91 ) ; = var86 ; var91 = = 1 - 8 ; var87 + ; goto label_77 ; } else { } label_78:
      |                                                                                                           ^
output.c:84:4: error: expected identifier or ‘(’ before ‘goto’
   84 |  } goto label_76 ; } else {  var963 = var84 [ 0 ] ;  var964 = var963 == var88 ;  var965 = int var567 = var964 ; if ( var567 ) { var92 = 1 ; } else { goto label_76 ; } }  var966 = 1 - 8 ;  var967 = var90 + var966 ;  var968 = var90 = var967 ; goto label_75 ; } label_76:
      |    ^~~~
output.c:84:20: error: expected identifier or ‘(’ before ‘}’ token
   84 |  } goto label_76 ; } else {  var963 = var84 [ 0 ] ;  var964 = var963 == var88 ;  var965 = int var567 = var964 ; if ( var567 ) { var92 = 1 ; } else { goto label_76 ; } }  var966 = 1 - 8 ;  var967 = var90 + var966 ;  var968 = var90 = var967 ; goto label_75 ; } label_76:
      |                    ^
output.c:84:22: error: expected identifier or ‘(’ before ‘else’
   84 |  } goto label_76 ; } else {  var963 = var84 [ 0 ] ;  var964 = var963 == var88 ;  var965 = int var567 = var964 ; if ( var567 ) { var92 = 1 ; } else { goto label_76 ; } }  var966 = 1 - 8 ;  var967 = var90 + var966 ;  var968 = var90 = var967 ; goto label_75 ; } label_76:
      |                      ^~~~
output.c:84:171: warning: data definition has no type or storage class
   84 |  } goto label_76 ; } else {  var963 = var84 [ 0 ] ;  var964 = var963 == var88 ;  var965 = int var567 = var964 ; if ( var567 ) { var92 = 1 ; } else { goto label_76 ; } }  var966 = 1 - 8 ;  var967 = var90 + var966 ;  var968 = var90 = var967 ; goto label_75 ; } label_76:
      |                                                                                                                                                                           ^~~~~~
output.c:84:171: error: type defaults to ‘int’ in declaration of ‘var966’ [-Wimplicit-int]
output.c:84:189: warning: data definition has no type or storage class
   84 |  } goto label_76 ; } else {  var963 = var84 [ 0 ] ;  var964 = var963 == var88 ;  var965 = int var567 = var964 ; if ( var567 ) { var92 = 1 ; } else { goto label_76 ; } }  var966 = 1 - 8 ;  var967 = var90 + var966 ;  var968 = var90 = var967 ; goto label_75 ; } label_76:
      |                                                                                                                                                                                             ^~~~~~
output.c:84:189: error: type defaults to ‘int’ in declaration of ‘var967’ [-Wimplicit-int]
output.c:84:198: error: initializer element is not constant
   84 |  } goto label_76 ; } else {  var963 = var84 [ 0 ] ;  var964 = var963 == var88 ;  var965 = int var567 = var964 ; if ( var567 ) { var92 = 1 ; } else { goto label_76 ; } }  var966 = 1 - 8 ;  var967 = var90 + var966 ;  var968 = var90 = var967 ; goto label_75 ; } label_76:
      |                                                                                                                                                                                                      ^~~~~
output.c:84:216: warning: data definition has no type or storage class
   84 |  } goto label_76 ; } else {  var963 = var84 [ 0 ] ;  var964 = var963 == var88 ;  var965 = int var567 = var964 ; if ( var567 ) { var92 = 1 ; } else { goto label_76 ; } }  var966 = 1 - 8 ;  var967 = var90 + var966 ;  var968 = var90 = var967 ; goto label_75 ; } label_76:
      |                                                                                                                                                                                                                        ^~~~~~
output.c:84:216: error: type defaults to ‘int’ in declaration of ‘var968’ [-Wimplicit-int]
output.c:84:225: error: initializer element is not constant
   84 |  } goto label_76 ; } else {  var963 = var84 [ 0 ] ;  var964 = var963 == var88 ;  var965 = int var567 = var964 ; if ( var567 ) { var92 = 1 ; } else { goto label_76 ; } }  var966 = 1 - 8 ;  var967 = var90 + var966 ;  var968 = var90 = var967 ; goto label_75 ; } label_76:
      |                                                                                                                                                                                                                                 ^~~~~
output.c:84:242: error: expected identifier or ‘(’ before ‘goto’
   84 |  } goto label_76 ; } else {  var963 = var84 [ 0 ] ;  var964 = var963 == var88 ;  var965 = int var567 = var964 ; if ( var567 ) { var92 = 1 ; } else { goto label_76 ; } }  var966 = 1 - 8 ;  var967 = var90 + var966 ;  var968 = var90 = var967 ; goto label_75 ; } label_76:
      |                                                                                                                                                                                                                                                  ^~~~
output.c:84:258: error: expected identifier or ‘(’ before ‘}’ token
   84 |  } goto label_76 ; } else {  var963 = var84 [ 0 ] ;  var964 = var963 == var88 ;  var965 = int var567 = var964 ; if ( var567 ) { var92 = 1 ; } else { goto label_76 ; } }  var966 = 1 - 8 ;  var967 = var90 + var966 ;  var968 = var90 = var967 ; goto label_75 ; } label_76:
      |                                                                                                                                                                                                                                                                  ^
output.c:84:268: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘:’ token
   84 |  } goto label_76 ; } else {  var963 = var84 [ 0 ] ;  var964 = var963 == var88 ;  var965 = int var567 = var964 ; if ( var567 ) { var92 = 1 ; } else { goto label_76 ; } }  var966 = 1 - 8 ;  var967 = var90 + var966 ;  var968 = var90 = var967 ; goto label_75 ; } label_76:
      |                                                                                                                                                                                                                                                                            ^
output.c:85:25: warning: data definition has no type or storage class
   85 |   var969 = var89 + 1 ;  var970 = var969 + 8 ;  var971 = var90 = var970 ; var91 = var90 ; var92 = 0 ; label_79:
      |                         ^~~~~~
output.c:85:25: error: type defaults to ‘int’ in declaration of ‘var970’ [-Wimplicit-int]
output.c:85:34: error: ‘var969’ undeclared here (not in a function); did you mean ‘var968’?
   85 |   var969 = var89 + 1 ;  var970 = var969 + 8 ;  var971 = var90 = var970 ; var91 = var90 ; var92 = 0 ; label_79:
      |                                  ^~~~~~
      |                                  var968
output.c:85:48: warning: data definition has no type or storage class
   85 |   var969 = var89 + 1 ;  var970 = var969 + 8 ;  var971 = var90 = var970 ; var91 = var90 ; var92 = 0 ; label_79:
      |                                                ^~~~~~
output.c:85:48: error: type defaults to ‘int’ in declaration of ‘var971’ [-Wimplicit-int]
output.c:85:57: error: initializer element is not constant
   85 |   var969 = var89 + 1 ;  var970 = var969 + 8 ;  var971 = var90 = var970 ; var91 = var90 ; var92 = 0 ; label_79:
      |                                                         ^~~~~
output.c:85:74: warning: data definition has no type or storage class
   85 |   var969 = var89 + 1 ;  var970 = var969 + 8 ;  var971 = var90 = var970 ; var91 = var90 ; var92 = 0 ; label_79:
      |                                                                          ^~~~~
output.c:85:74: error: type defaults to ‘int’ in declaration of ‘var91’ [-Wimplicit-int]
output.c:85:74: error: redefinition of ‘var91’
output.c:69:22: note: previous definition of ‘var91’ with type ‘int’
   69 |  var90 = var89 + 8 ; var91 = var90 ; var92 = 0 ; label_63:
      |                      ^~~~~
output.c:85:82: error: initializer element is not constant
   85 |   var969 = var89 + 1 ;  var970 = var969 + 8 ;  var971 = var90 = var970 ; var91 = var90 ; var92 = 0 ; label_79:
      |                                                                                  ^~~~~
output.c:85:90: warning: data definition has no type or storage class
   85 |   var969 = var89 + 1 ;  var970 = var969 + 8 ;  var971 = var90 = var970 ; var91 = var90 ; var92 = 0 ; label_79:
      |                                                                                          ^~~~~
output.c:85:90: error: type defaults to ‘int’ in declaration of ‘var92’ [-Wimplicit-int]
output.c:85:90: error: redefinition of ‘var92’
output.c:69:38: note: previous definition of ‘var92’ with type ‘int’
   69 |  var90 = var89 + 8 ; var91 = var90 ; var92 = 0 ; label_63:
      |                                      ^~~~~
output.c:85:110: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘:’ token
   85 |   var969 = var89 + 1 ;  var970 = var969 + 8 ;  var971 = var90 = var970 ; var91 = var90 ; var92 = 0 ; label_79:
      |                                                                                                              ^
output.c:86:21: warning: data definition has no type or storage class
   86 |   var972 = 8 * 8 ;  var973 = var90 < var972 ;  var974 = var90 % 8 ;  var975 = var974 > 0 ;  var1325 = 0 ; if ( var973 ) { if ( var975 ) { var1325 = 1 ; } else { } } else { }  var976 = var1325 ;  var977 = var84 [ 0 ] ;  var978 = var977 == var86 ;  var1326 = 0 ; if ( var92 ) { if ( var978 ) { var1326 = 1 ; } else { } } else { }  var979 = var1326 ;  var980 = int var568 = var979 ; if ( var568 ) { { { var84 [ 0 ] var91 ) = var86 ;  var981 = 1 + 8 ;  var982 = var91 + var981 ;  var983 = var91 = var982 ; var87 ; var87 = var87 + 1 ; } label_81:
      |                     ^~~~~~
output.c:86:21: error: type defaults to ‘int’ in declaration of ‘var973’ [-Wimplicit-int]
output.c:86:38: error: ‘var972’ undeclared here (not in a function); did you mean ‘var973’?
   86 |   var972 = 8 * 8 ;  var973 = var90 < var972 ;  var974 = var90 % 8 ;  var975 = var974 > 0 ;  var1325 = 0 ; if ( var973 ) { if ( var975 ) { var1325 = 1 ; } else { } } else { }  var976 = var1325 ;  var977 = var84 [ 0 ] ;  var978 = var977 == var86 ;  var1326 = 0 ; if ( var92 ) { if ( var978 ) { var1326 = 1 ; } else { } } else { }  var979 = var1326 ;  var980 = int var568 = var979 ; if ( var568 ) { { { var84 [ 0 ] var91 ) = var86 ;  var981 = 1 + 8 ;  var982 = var91 + var981 ;  var983 = var91 = var982 ; var87 ; var87 = var87 + 1 ; } label_81:
      |                                      ^~~~~~
      |                                      var973
output.c:86:48: warning: data definition has no type or storage class
   86 |   var972 = 8 * 8 ;  var973 = var90 < var972 ;  var974 = var90 % 8 ;  var975 = var974 > 0 ;  var1325 = 0 ; if ( var973 ) { if ( var975 ) { var1325 = 1 ; } else { } } else { }  var976 = var1325 ;  var977 = var84 [ 0 ] ;  var978 = var977 == var86 ;  var1326 = 0 ; if ( var92 ) { if ( var978 ) { var1326 = 1 ; } else { } } else { }  var979 = var1326 ;  var980 = int var568 = var979 ; if ( var568 ) { { { var84 [ 0 ] var91 ) = var86 ;  var981 = 1 + 8 ;  var982 = var91 + var981 ;  var983 = var91 = var982 ; var87 ; var87 = var87 + 1 ; } label_81:
      |                                                ^~~~~~
output.c:86:48: error: type defaults to ‘int’ in declaration of ‘var974’ [-Wimplicit-int]
output.c:86:57: error: initializer element is not constant
   86 |   var972 = 8 * 8 ;  var973 = var90 < var972 ;  var974 = var90 % 8 ;  var975 = var974 > 0 ;  var1325 = 0 ; if ( var973 ) { if ( var975 ) { var1325 = 1 ; } else { } } else { }  var976 = var1325 ;  var977 = var84 [ 0 ] ;  var978 = var977 == var86 ;  var1326 = 0 ; if ( var92 ) { if ( var978 ) { var1326 = 1 ; } else { } } else { }  var979 = var1326 ;  var980 = int var568 = var979 ; if ( var568 ) { { { var84 [ 0 ] var91 ) = var86 ;  var981 = 1 + 8 ;  var982 = var91 + var981 ;  var983 = var91 = var982 ; var87 ; var87 = var87 + 1 ; } label_81:
      |                                                         ^~~~~
output.c:86:70: warning: data definition has no type or storage class
   86 |   var972 = 8 * 8 ;  var973 = var90 < var972 ;  var974 = var90 % 8 ;  var975 = var974 > 0 ;  var1325 = 0 ; if ( var973 ) { if ( var975 ) { var1325 = 1 ; } else { } } else { }  var976 = var1325 ;  var977 = var84 [ 0 ] ;  var978 = var977 == var86 ;  var1326 = 0 ; if ( var92 ) { if ( var978 ) { var1326 = 1 ; } else { } } else { }  var979 = var1326 ;  var980 = int var568 = var979 ; if ( var568 ) { { { var84 [ 0 ] var91 ) = var86 ;  var981 = 1 + 8 ;  var982 = var91 + var981 ;  var983 = var91 = var982 ; var87 ; var87 = var87 + 1 ; } label_81:
      |                                                                      ^~~~~~
output.c:86:70: error: type defaults to ‘int’ in declaration of ‘var975’ [-Wimplicit-int]
output.c:86:79: error: initializer element is not constant
   86 |   var972 = 8 * 8 ;  var973 = var90 < var972 ;  var974 = var90 % 8 ;  var975 = var974 > 0 ;  var1325 = 0 ; if ( var973 ) { if ( var975 ) { var1325 = 1 ; } else { } } else { }  var976 = var1325 ;  var977 = var84 [ 0 ] ;  var978 = var977 == var86 ;  var1326 = 0 ; if ( var92 ) { if ( var978 ) { var1326 = 1 ; } else { } } else { }  var979 = var1326 ;  var980 = int var568 = var979 ; if ( var568 ) { { { var84 [ 0 ] var91 ) = var86 ;  var981 = 1 + 8 ;  var982 = var91 + var981 ;  var983 = var91 = var982 ; var87 ; var87 = var87 + 1 ; } label_81:
      |                                                                               ^~~~~~
output.c:86:93: warning: data definition has no type or storage class
   86 |   var972 = 8 * 8 ;  var973 = var90 < var972 ;  var974 = var90 % 8 ;  var975 = var974 > 0 ;  var1325 = 0 ; if ( var973 ) { if ( var975 ) { var1325 = 1 ; } else { } } else { }  var976 = var1325 ;  var977 = var84 [ 0 ] ;  var978 = var977 == var86 ;  var1326 = 0 ; if ( var92 ) { if ( var978 ) { var1326 = 1 ; } else { } } else { }  var979 = var1326 ;  var980 = int var568 = var979 ; if ( var568 ) { { { var84 [ 0 ] var91 ) = var86 ;  var981 = 1 + 8 ;  var982 = var91 + var981 ;  var983 = var91 = var982 ; var87 ; var87 = var87 + 1 ; } label_81:
      |                                                                                             ^~~~~~~
output.c:86:93: error: type defaults to ‘int’ in declaration of ‘var1325’ [-Wimplicit-int]
output.c:86:107: error: expected identifier or ‘(’ before ‘if’
   86 |   var972 = 8 * 8 ;  var973 = var90 < var972 ;  var974 = var90 % 8 ;  var975 = var974 > 0 ;  var1325 = 0 ; if ( var973 ) { if ( var975 ) { var1325 = 1 ; } else { } } else { }  var976 = var1325 ;  var977 = var84 [ 0 ] ;  var978 = var977 == var86 ;  var1326 = 0 ; if ( var92 ) { if ( var978 ) { var1326 = 1 ; } else { } } else { }  var979 = var1326 ;  var980 = int var568 = var979 ; if ( var568 ) { { { var84 [ 0 ] var91 ) = var86 ;  var981 = 1 + 8 ;  var982 = var91 + var981 ;  var983 = var91 = var982 ; var87 ; var87 = var87 + 1 ; } label_81:
      |                                                                                                           ^~
output.c:86:166: error: expected identifier or ‘(’ before ‘else’
   86 |   var972 = 8 * 8 ;  var973 = var90 < var972 ;  var974 = var90 % 8 ;  var975 = var974 > 0 ;  var1325 = 0 ; if ( var973 ) { if ( var975 ) { var1325 = 1 ; } else { } } else { }  var976 = var1325 ;  var977 = var84 [ 0 ] ;  var978 = var977 == var86 ;  var1326 = 0 ; if ( var92 ) { if ( var978 ) { var1326 = 1 ; } else { } } else { }  var979 = var1326 ;  var980 = int var568 = var979 ; if ( var568 ) { { { var84 [ 0 ] var91 ) = var86 ;  var981 = 1 + 8 ;  var982 = var91 + var981 ;  var983 = var91 = var982 ; var87 ; var87 = var87 + 1 ; } label_81:
      |                                                                                                                                                                      ^~~~
output.c:86:176: warning: data definition has no type or storage class
   86 |   var972 = 8 * 8 ;  var973 = var90 < var972 ;  var974 = var90 % 8 ;  var975 = var974 > 0 ;  var1325 = 0 ; if ( var973 ) { if ( var975 ) { var1325 = 1 ; } else { } } else { }  var976 = var1325 ;  var977 = var84 [ 0 ] ;  var978 = var977 == var86 ;  var1326 = 0 ; if ( var92 ) { if ( var978 ) { var1326 = 1 ; } else { } } else { }  var979 = var1326 ;  var980 = int var568 = var979 ; if ( var568 ) { { { var84 [ 0 ] var91 ) = var86 ;  var981 = 1 + 8 ;  var982 = var91 + var981 ;  var983 = var91 = var982 ; var87 ; var87 = var87 + 1 ; } label_81:
      |                                                                                                                                                                                ^~~~~~
output.c:86:176: error: type defaults to ‘int’ in declaration of ‘var976’ [-Wimplicit-int]
output.c:86:185: error: initializer element is not constant
   86 |   var972 = 8 * 8 ;  var973 = var90 < var972 ;  var974 = var90 % 8 ;  var975 = var974 > 0 ;  var1325 = 0 ; if ( var973 ) { if ( var975 ) { var1325 = 1 ; } else { } } else { }  var976 = var1325 ;  var977 = var84 [ 0 ] ;  var978 = var977 == var86 ;  var1326 = 0 ; if ( var92 ) { if ( var978 ) { var1326 = 1 ; } else { } } else { }  var979 = var1326 ;  var980 = int var568 = var979 ; if ( var568 ) { { { var84 [ 0 ] var91 ) = var86 ;  var981 = 1 + 8 ;  var982 = var91 + var981 ;  var983 = var91 = var982 ; var87 ; var87 = var87 + 1 ; } label_81:
      |                                                                                                                                                                                         ^~~~~~~
output.c:86:196: warning: data definition has no type or storage class
   86 |   var972 = 8 * 8 ;  var973 = var90 < var972 ;  var974 = var90 % 8 ;  var975 = var974 > 0 ;  var1325 = 0 ; if ( var973 ) { if ( var975 ) { var1325 = 1 ; } else { } } else { }  var976 = var1325 ;  var977 = var84 [ 0 ] ;  var978 = var977 == var86 ;  var1326 = 0 ; if ( var92 ) { if ( var978 ) { var1326 = 1 ; } else { } } else { }  var979 = var1326 ;  var980 = int var568 = var979 ; if ( var568 ) { { { var84 [ 0 ] var91 ) = var86 ;  var981 = 1 + 8 ;  var982 = var91 + var981 ;  var983 = var91 = var982 ; var87 ; var87 = var87 + 1 ; } label_81:
      |                                                                                                                                                                                                    ^~~~~~
output.c:86:196: error: type defaults to ‘int’ in declaration of ‘var977’ [-Wimplicit-int]
output.c:86:220: warning: data definition has no type or storage class
   86 |   var972 = 8 * 8 ;  var973 = var90 < var972 ;  var974 = var90 % 8 ;  var975 = var974 > 0 ;  var1325 = 0 ; if ( var973 ) { if ( var975 ) { var1325 = 1 ; } else { } } else { }  var976 = var1325 ;  var977 = var84 [ 0 ] ;  var978 = var977 == var86 ;  var1326 = 0 ; if ( var92 ) { if ( var978 ) { var1326 = 1 ; } else { } } else { }  var979 = var1326 ;  var980 = int var568 = var979 ; if ( var568 ) { { { var84 [ 0 ] var91 ) = var86 ;  var981 = 1 + 8 ;  var982 = var91 + var981 ;  var983 = var91 = var982 ; var87 ; var87 = var87 + 1 ; } label_81:
      |                                                                                                                                                                                                                            ^~~~~~
output.c:86:220: error: type defaults to ‘int’ in declaration of ‘var978’ [-Wimplicit-int]
output.c:86:248: warning: data definition has no type or storage class
   86 |   var972 = 8 * 8 ;  var973 = var90 < var972 ;  var974 = var90 % 8 ;  var975 = var974 > 0 ;  var1325 = 0 ; if ( var973 ) { if ( var975 ) { var1325 = 1 ; } else { } } else { }  var976 = var1325 ;  var977 = var84 [ 0 ] ;  var978 = var977 == var86 ;  var1326 = 0 ; if ( var92 ) { if ( var978 ) { var1326 = 1 ; } else { } } else { }  var979 = var1326 ;  var980 = int var568 = var979 ; if ( var568 ) { { { var84 [ 0 ] var91 ) = var86 ;  var981 = 1 + 8 ;  var982 = var91 + var981 ;  var983 = var91 = var982 ; var87 ; var87 = var87 + 1 ; } label_81:
      |                                                                                                                                                                                                                                                        ^~~~~~~
output.c:86:248: error: type defaults to ‘int’ in declaration of ‘var1326’ [-Wimplicit-int]
output.c:86:262: error: expected identifier or ‘(’ before ‘if’
   86 |   var972 = 8 * 8 ;  var973 = var90 < var972 ;  var974 = var90 % 8 ;  var975 = var974 > 0 ;  var1325 = 0 ; if ( var973 ) { if ( var975 ) { var1325 = 1 ; } else { } } else { }  var976 = var1325 ;  var977 = var84 [ 0 ] ;  var978 = var977 == var86 ;  var1326 = 0 ; if ( var92 ) { if ( var978 ) { var1326 = 1 ; } else { } } else { }  var979 = var1326 ;  var980 = int var568 = var979 ; if ( var568 ) { { { var84 [ 0 ] var91 ) = var86 ;  var981 = 1 + 8 ;  var982 = var91 + var981 ;  var983 = var91 = var982 ; var87 ; var87 = var87 + 1 ; } label_81:
      |                                                                                                                                                                                                                                                                      ^~
output.c:86:320: error: expected identifier or ‘(’ before ‘else’
   86 |   var972 = 8 * 8 ;  var973 = var90 < var972 ;  var974 = var90 % 8 ;  var975 = var974 > 0 ;  var1325 = 0 ; if ( var973 ) { if ( var975 ) { var1325 = 1 ; } else { } } else { }  var976 = var1325 ;  var977 = var84 [ 0 ] ;  var978 = var977 == var86 ;  var1326 = 0 ; if ( var92 ) { if ( var978 ) { var1326 = 1 ; } else { } } else { }  var979 = var1326 ;  var980 = int var568 = var979 ; if ( var568 ) { { { var84 [ 0 ] var91 ) = var86 ;  var981 = 1 + 8 ;  var982 = var91 + var981 ;  var983 = var91 = var982 ; var87 ; var87 = var87 + 1 ; } label_81:
      |                                                                                                                                                                                                                                                                                                                                ^~~~
output.c:86:330: warning: data definition has no type or storage class
   86 |   var972 = 8 * 8 ;  var973 = var90 < var972 ;  var974 = var90 % 8 ;  var975 = var974 > 0 ;  var1325 = 0 ; if ( var973 ) { if ( var975 ) { var1325 = 1 ; } else { } } else { }  var976 = var1325 ;  var977 = var84 [ 0 ] ;  var978 = var977 == var86 ;  var1326 = 0 ; if ( var92 ) { if ( var978 ) { var1326 = 1 ; } else { } } else { }  var979 = var1326 ;  var980 = int var568 = var979 ; if ( var568 ) { { { var84 [ 0 ] var91 ) = var86 ;  var981 = 1 + 8 ;  var982 = var91 + var981 ;  var983 = var91 = var982 ; var87 ; var87 = var87 + 1 ; } label_81:
      |                                                                                                                                                                                                                                                                                                                                          ^~~~~~
output.c:86:330: error: type defaults to ‘int’ in declaration of ‘var979’ [-Wimplicit-int]
output.c:86:339: error: initializer element is not constant
   86 |   var972 = 8 * 8 ;  var973 = var90 < var972 ;  var974 = var90 % 8 ;  var975 = var974 > 0 ;  var1325 = 0 ; if ( var973 ) { if ( var975 ) { var1325 = 1 ; } else { } } else { }  var976 = var1325 ;  var977 = var84 [ 0 ] ;  var978 = var977 == var86 ;  var1326 = 0 ; if ( var92 ) { if ( var978 ) { var1326 = 1 ; } else { } } else { }  var979 = var1326 ;  var980 = int var568 = var979 ; if ( var568 ) { { { var84 [ 0 ] var91 ) = var86 ;  var981 = 1 + 8 ;  var982 = var91 + var981 ;  var983 = var91 = var982 ; var87 ; var87 = var87 + 1 ; } label_81:
      |                                                                                                                                                                                                                                                                                                                                                   ^~~~~~~
output.c:86:350: warning: data definition has no type or storage class
   86 |   var972 = 8 * 8 ;  var973 = var90 < var972 ;  var974 = var90 % 8 ;  var975 = var974 > 0 ;  var1325 = 0 ; if ( var973 ) { if ( var975 ) { var1325 = 1 ; } else { } } else { }  var976 = var1325 ;  var977 = var84 [ 0 ] ;  var978 = var977 == var86 ;  var1326 = 0 ; if ( var92 ) { if ( var978 ) { var1326 = 1 ; } else { } } else { }  var979 = var1326 ;  var980 = int var568 = var979 ; if ( var568 ) { { { var84 [ 0 ] var91 ) = var86 ;  var981 = 1 + 8 ;  var982 = var91 + var981 ;  var983 = var91 = var982 ; var87 ; var87 = var87 + 1 ; } label_81:
      |                                                                                                                                                                                                                                                                                                                                                              ^~~~~~
output.c:86:350: error: type defaults to ‘int’ in declaration of ‘var980’ [-Wimplicit-int]
output.c:86:359: error: expected expression before ‘int’
   86 |   var972 = 8 * 8 ;  var973 = var90 < var972 ;  var974 = var90 % 8 ;  var975 = var974 > 0 ;  var1325 = 0 ; if ( var973 ) { if ( var975 ) { var1325 = 1 ; } else { } } else { }  var976 = var1325 ;  var977 = var84 [ 0 ] ;  var978 = var977 == var86 ;  var1326 = 0 ; if ( var92 ) { if ( var978 ) { var1326 = 1 ; } else { } } else { }  var979 = var1326 ;  var980 = int var568 = var979 ; if ( var568 ) { { { var84 [ 0 ] var91 ) = var86 ;  var981 = 1 + 8 ;  var982 = var91 + var981 ;  var983 = var91 = var982 ; var87 ; var87 = var87 + 1 ; } label_81:
      |                                                                                                                                                                                                                                                                                                                                                                       ^~~
output.c:86:381: error: expected identifier or ‘(’ before ‘if’
   86 |   var972 = 8 * 8 ;  var973 = var90 < var972 ;  var974 = var90 % 8 ;  var975 = var974 > 0 ;  var1325 = 0 ; if ( var973 ) { if ( var975 ) { var1325 = 1 ; } else { } } else { }  var976 = var1325 ;  var977 = var84 [ 0 ] ;  var978 = var977 == var86 ;  var1326 = 0 ; if ( var92 ) { if ( var978 ) { var1326 = 1 ; } else { } } else { }  var979 = var1326 ;  var980 = int var568 = var979 ; if ( var568 ) { { { var84 [ 0 ] var91 ) = var86 ;  var981 = 1 + 8 ;  var982 = var91 + var981 ;  var983 = var91 = var982 ; var87 ; var87 = var87 + 1 ; } label_81:
      |                                                                                                                                                                                                                                                                                                                                                                                             ^~
output.c:87:107: error: stray ‘#’ in program
   87 |   var1399 = var91 > var90 ;  var1478 = 0 ; if ( var1399 ) { var1478 = 1 ; } else { }  var1400 = var1478 ; #83 ( var91 ) ; = var86 ; var91 = = 1 + 8 ; var87 + ; goto label_81 ; } else { } label_82:
      |                                                                                                           ^
output.c:88:4: error: expected identifier or ‘(’ before ‘goto’
   88 |  } goto label_80 ; } else {  var984 = var84 [ 0 ] ;  var985 = var984 == var88 ;  var986 = int var569 = var985 ; if ( var569 ) { var92 = 1 ; } else { goto label_80 ; } }  var987 = 1 + 8 ;  var988 = var90 + var987 ;  var989 = var90 = var988 ; goto label_79 ; } label_80:
      |    ^~~~
output.c:88:20: error: expected identifier or ‘(’ before ‘}’ token
   88 |  } goto label_80 ; } else {  var984 = var84 [ 0 ] ;  var985 = var984 == var88 ;  var986 = int var569 = var985 ; if ( var569 ) { var92 = 1 ; } else { goto label_80 ; } }  var987 = 1 + 8 ;  var988 = var90 + var987 ;  var989 = var90 = var988 ; goto label_79 ; } label_80:
      |                    ^
output.c:88:22: error: expected identifier or ‘(’ before ‘else’
   88 |  } goto label_80 ; } else {  var984 = var84 [ 0 ] ;  var985 = var984 == var88 ;  var986 = int var569 = var985 ; if ( var569 ) { var92 = 1 ; } else { goto label_80 ; } }  var987 = 1 + 8 ;  var988 = var90 + var987 ;  var989 = var90 = var988 ; goto label_79 ; } label_80:
      |                      ^~~~
output.c:88:171: warning: data definition has no type or storage class
   88 |  } goto label_80 ; } else {  var984 = var84 [ 0 ] ;  var985 = var984 == var88 ;  var986 = int var569 = var985 ; if ( var569 ) { var92 = 1 ; } else { goto label_80 ; } }  var987 = 1 + 8 ;  var988 = var90 + var987 ;  var989 = var90 = var988 ; goto label_79 ; } label_80:
      |                                                                                                                                                                           ^~~~~~
output.c:88:171: error: type defaults to ‘int’ in declaration of ‘var987’ [-Wimplicit-int]
output.c:88:189: warning: data definition has no type or storage class
   88 |  } goto label_80 ; } else {  var984 = var84 [ 0 ] ;  var985 = var984 == var88 ;  var986 = int var569 = var985 ; if ( var569 ) { var92 = 1 ; } else { goto label_80 ; } }  var987 = 1 + 8 ;  var988 = var90 + var987 ;  var989 = var90 = var988 ; goto label_79 ; } label_80:
      |                                                                                                                                                                                             ^~~~~~
output.c:88:189: error: type defaults to ‘int’ in declaration of ‘var988’ [-Wimplicit-int]
output.c:88:198: error: initializer element is not constant
   88 |  } goto label_80 ; } else {  var984 = var84 [ 0 ] ;  var985 = var984 == var88 ;  var986 = int var569 = var985 ; if ( var569 ) { var92 = 1 ; } else { goto label_80 ; } }  var987 = 1 + 8 ;  var988 = var90 + var987 ;  var989 = var90 = var988 ; goto label_79 ; } label_80:
      |                                                                                                                                                                                                      ^~~~~
output.c:88:216: warning: data definition has no type or storage class
   88 |  } goto label_80 ; } else {  var984 = var84 [ 0 ] ;  var985 = var984 == var88 ;  var986 = int var569 = var985 ; if ( var569 ) { var92 = 1 ; } else { goto label_80 ; } }  var987 = 1 + 8 ;  var988 = var90 + var987 ;  var989 = var90 = var988 ; goto label_79 ; } label_80:
      |                                                                                                                                                                                                                        ^~~~~~
output.c:88:216: error: type defaults to ‘int’ in declaration of ‘var989’ [-Wimplicit-int]
output.c:88:225: error: initializer element is not constant
   88 |  } goto label_80 ; } else {  var984 = var84 [ 0 ] ;  var985 = var984 == var88 ;  var986 = int var569 = var985 ; if ( var569 ) { var92 = 1 ; } else { goto label_80 ; } }  var987 = 1 + 8 ;  var988 = var90 + var987 ;  var989 = var90 = var988 ; goto label_79 ; } label_80:
      |                                                                                                                                                                                                                                 ^~~~~
output.c:88:242: error: expected identifier or ‘(’ before ‘goto’
   88 |  } goto label_80 ; } else {  var984 = var84 [ 0 ] ;  var985 = var984 == var88 ;  var986 = int var569 = var985 ; if ( var569 ) { var92 = 1 ; } else { goto label_80 ; } }  var987 = 1 + 8 ;  var988 = var90 + var987 ;  var989 = var90 = var988 ; goto label_79 ; } label_80:
      |                                                                                                                                                                                                                                                  ^~~~
output.c:88:258: error: expected identifier or ‘(’ before ‘}’ token
   88 |  } goto label_80 ; } else {  var984 = var84 [ 0 ] ;  var985 = var984 == var88 ;  var986 = int var569 = var985 ; if ( var569 ) { var92 = 1 ; } else { goto label_80 ; } }  var987 = 1 + 8 ;  var988 = var90 + var987 ;  var989 = var90 = var988 ; goto label_79 ; } label_80:
      |                                                                                                                                                                                                                                                                  ^
output.c:88:268: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘:’ token
   88 |  } goto label_80 ; } else {  var984 = var84 [ 0 ] ;  var985 = var984 == var88 ;  var986 = int var569 = var985 ; if ( var569 ) { var92 = 1 ; } else { goto label_80 ; } }  var987 = 1 + 8 ;  var988 = var90 + var987 ;  var989 = var90 = var988 ; goto label_79 ; } label_80:
      |                                                                                                                                                                                                                                                                            ^
output.c:89:25: warning: data definition has no type or storage class
   89 |   var990 = var89 - 1 ;  var991 = var990 + 8 ;  var992 = var90 = var991 ; var91 = var90 ; var92 = 0 ; label_83:
      |                         ^~~~~~
output.c:89:25: error: type defaults to ‘int’ in declaration of ‘var991’ [-Wimplicit-int]
output.c:89:34: error: ‘var990’ undeclared here (not in a function); did you mean ‘var991’?
   89 |   var990 = var89 - 1 ;  var991 = var990 + 8 ;  var992 = var90 = var991 ; var91 = var90 ; var92 = 0 ; label_83:
      |                                  ^~~~~~
      |                                  var991
output.c:89:48: warning: data definition has no type or storage class
   89 |   var990 = var89 - 1 ;  var991 = var990 + 8 ;  var992 = var90 = var991 ; var91 = var90 ; var92 = 0 ; label_83:
      |                                                ^~~~~~
output.c:89:48: error: type defaults to ‘int’ in declaration of ‘var992’ [-Wimplicit-int]
output.c:89:57: error: initializer element is not constant
   89 |   var990 = var89 - 1 ;  var991 = var990 + 8 ;  var992 = var90 = var991 ; var91 = var90 ; var92 = 0 ; label_83:
      |                                                         ^~~~~
output.c:89:74: warning: data definition has no type or storage class
   89 |   var990 = var89 - 1 ;  var991 = var990 + 8 ;  var992 = var90 = var991 ; var91 = var90 ; var92 = 0 ; label_83:
      |                                                                          ^~~~~
output.c:89:74: error: type defaults to ‘int’ in declaration of ‘var91’ [-Wimplicit-int]
output.c:89:74: error: redefinition of ‘var91’
output.c:69:22: note: previous definition of ‘var91’ with type ‘int’
   69 |  var90 = var89 + 8 ; var91 = var90 ; var92 = 0 ; label_63:
      |                      ^~~~~
output.c:89:82: error: initializer element is not constant
   89 |   var990 = var89 - 1 ;  var991 = var990 + 8 ;  var992 = var90 = var991 ; var91 = var90 ; var92 = 0 ; label_83:
      |                                                                                  ^~~~~
output.c:89:90: warning: data definition has no type or storage class
   89 |   var990 = var89 - 1 ;  var991 = var990 + 8 ;  var992 = var90 = var991 ; var91 = var90 ; var92 = 0 ; label_83:
      |                                                                                          ^~~~~
output.c:89:90: error: type defaults to ‘int’ in declaration of ‘var92’ [-Wimplicit-int]
output.c:89:90: error: redefinition of ‘var92’
output.c:69:38: note: previous definition of ‘var92’ with type ‘int’
   69 |  var90 = var89 + 8 ; var91 = var90 ; var92 = 0 ; label_63:
      |                                      ^~~~~
output.c:89:110: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘:’ token
   89 |   var990 = var89 - 1 ;  var991 = var990 + 8 ;  var992 = var90 = var991 ; var91 = var90 ; var92 = 0 ; label_83:
      |                                                                                                              ^
output.c:90:21: warning: data definition has no type or storage class
   90 |   var993 = 8 * 8 ;  var994 = var90 < var993 ;  var995 = var90 % 8 ;  var996 = 8 - 1 ;  var997 = var995 < var996 ;  var1327 = 0 ; if ( var994 ) { if ( var997 ) { var1327 = 1 ; } else { } } else { }  var998 = var1327 ;  var999 = var84 [ 0 ] ;  var1000 = var999 == var86 ;  var1328 = 0 ; if ( var92 ) { if ( var1000 ) { var1328 = 1 ; } else { } } else { }  var1001 = var1328 ;  var1002 = int var570 = var1001 ; if ( var570 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1003 = 8 - 1 ;  var1004 = var91 + var1003 ;  var1005 = var91 = var1004 ; var87 ; var87 = var87 + 1 ; } label_85:
      |                     ^~~~~~
output.c:90:21: error: type defaults to ‘int’ in declaration of ‘var994’ [-Wimplicit-int]
output.c:90:38: error: ‘var993’ undeclared here (not in a function); did you mean ‘var994’?
   90 |   var993 = 8 * 8 ;  var994 = var90 < var993 ;  var995 = var90 % 8 ;  var996 = 8 - 1 ;  var997 = var995 < var996 ;  var1327 = 0 ; if ( var994 ) { if ( var997 ) { var1327 = 1 ; } else { } } else { }  var998 = var1327 ;  var999 = var84 [ 0 ] ;  var1000 = var999 == var86 ;  var1328 = 0 ; if ( var92 ) { if ( var1000 ) { var1328 = 1 ; } else { } } else { }  var1001 = var1328 ;  var1002 = int var570 = var1001 ; if ( var570 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1003 = 8 - 1 ;  var1004 = var91 + var1003 ;  var1005 = var91 = var1004 ; var87 ; var87 = var87 + 1 ; } label_85:
      |                                      ^~~~~~
      |                                      var994
output.c:90:48: warning: data definition has no type or storage class
   90 |   var993 = 8 * 8 ;  var994 = var90 < var993 ;  var995 = var90 % 8 ;  var996 = 8 - 1 ;  var997 = var995 < var996 ;  var1327 = 0 ; if ( var994 ) { if ( var997 ) { var1327 = 1 ; } else { } } else { }  var998 = var1327 ;  var999 = var84 [ 0 ] ;  var1000 = var999 == var86 ;  var1328 = 0 ; if ( var92 ) { if ( var1000 ) { var1328 = 1 ; } else { } } else { }  var1001 = var1328 ;  var1002 = int var570 = var1001 ; if ( var570 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1003 = 8 - 1 ;  var1004 = var91 + var1003 ;  var1005 = var91 = var1004 ; var87 ; var87 = var87 + 1 ; } label_85:
      |                                                ^~~~~~
output.c:90:48: error: type defaults to ‘int’ in declaration of ‘var995’ [-Wimplicit-int]
output.c:90:57: error: initializer element is not constant
   90 |   var993 = 8 * 8 ;  var994 = var90 < var993 ;  var995 = var90 % 8 ;  var996 = 8 - 1 ;  var997 = var995 < var996 ;  var1327 = 0 ; if ( var994 ) { if ( var997 ) { var1327 = 1 ; } else { } } else { }  var998 = var1327 ;  var999 = var84 [ 0 ] ;  var1000 = var999 == var86 ;  var1328 = 0 ; if ( var92 ) { if ( var1000 ) { var1328 = 1 ; } else { } } else { }  var1001 = var1328 ;  var1002 = int var570 = var1001 ; if ( var570 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1003 = 8 - 1 ;  var1004 = var91 + var1003 ;  var1005 = var91 = var1004 ; var87 ; var87 = var87 + 1 ; } label_85:
      |                                                         ^~~~~
output.c:90:70: warning: data definition has no type or storage class
   90 |   var993 = 8 * 8 ;  var994 = var90 < var993 ;  var995 = var90 % 8 ;  var996 = 8 - 1 ;  var997 = var995 < var996 ;  var1327 = 0 ; if ( var994 ) { if ( var997 ) { var1327 = 1 ; } else { } } else { }  var998 = var1327 ;  var999 = var84 [ 0 ] ;  var1000 = var999 == var86 ;  var1328 = 0 ; if ( var92 ) { if ( var1000 ) { var1328 = 1 ; } else { } } else { }  var1001 = var1328 ;  var1002 = int var570 = var1001 ; if ( var570 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1003 = 8 - 1 ;  var1004 = var91 + var1003 ;  var1005 = var91 = var1004 ; var87 ; var87 = var87 + 1 ; } label_85:
      |                                                                      ^~~~~~
output.c:90:70: error: type defaults to ‘int’ in declaration of ‘var996’ [-Wimplicit-int]
output.c:90:88: warning: data definition has no type or storage class
   90 |   var993 = 8 * 8 ;  var994 = var90 < var993 ;  var995 = var90 % 8 ;  var996 = 8 - 1 ;  var997 = var995 < var996 ;  var1327 = 0 ; if ( var994 ) { if ( var997 ) { var1327 = 1 ; } else { } } else { }  var998 = var1327 ;  var999 = var84 [ 0 ] ;  var1000 = var999 == var86 ;  var1328 = 0 ; if ( var92 ) { if ( var1000 ) { var1328 = 1 ; } else { } } else { }  var1001 = var1328 ;  var1002 = int var570 = var1001 ; if ( var570 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1003 = 8 - 1 ;  var1004 = var91 + var1003 ;  var1005 = var91 = var1004 ; var87 ; var87 = var87 + 1 ; } label_85:
      |                                                                                        ^~~~~~
output.c:90:88: error: type defaults to ‘int’ in declaration of ‘var997’ [-Wimplicit-int]
output.c:90:97: error: initializer element is not constant
   90 |   var993 = 8 * 8 ;  var994 = var90 < var993 ;  var995 = var90 % 8 ;  var996 = 8 - 1 ;  var997 = var995 < var996 ;  var1327 = 0 ; if ( var994 ) { if ( var997 ) { var1327 = 1 ; } else { } } else { }  var998 = var1327 ;  var999 = var84 [ 0 ] ;  var1000 = var999 == var86 ;  var1328 = 0 ; if ( var92 ) { if ( var1000 ) { var1328 = 1 ; } else { } } else { }  var1001 = var1328 ;  var1002 = int var570 = var1001 ; if ( var570 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1003 = 8 - 1 ;  var1004 = var91 + var1003 ;  var1005 = var91 = var1004 ; var87 ; var87 = var87 + 1 ; } label_85:
      |                                                                                                 ^~~~~~
output.c:90:116: warning: data definition has no type or storage class
   90 |   var993 = 8 * 8 ;  var994 = var90 < var993 ;  var995 = var90 % 8 ;  var996 = 8 - 1 ;  var997 = var995 < var996 ;  var1327 = 0 ; if ( var994 ) { if ( var997 ) { var1327 = 1 ; } else { } } else { }  var998 = var1327 ;  var999 = var84 [ 0 ] ;  var1000 = var999 == var86 ;  var1328 = 0 ; if ( var92 ) { if ( var1000 ) { var1328 = 1 ; } else { } } else { }  var1001 = var1328 ;  var1002 = int var570 = var1001 ; if ( var570 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1003 = 8 - 1 ;  var1004 = var91 + var1003 ;  var1005 = var91 = var1004 ; var87 ; var87 = var87 + 1 ; } label_85:
      |                                                                                                                    ^~~~~~~
output.c:90:116: error: type defaults to ‘int’ in declaration of ‘var1327’ [-Wimplicit-int]
output.c:90:130: error: expected identifier or ‘(’ before ‘if’
   90 |   var993 = 8 * 8 ;  var994 = var90 < var993 ;  var995 = var90 % 8 ;  var996 = 8 - 1 ;  var997 = var995 < var996 ;  var1327 = 0 ; if ( var994 ) { if ( var997 ) { var1327 = 1 ; } else { } } else { }  var998 = var1327 ;  var999 = var84 [ 0 ] ;  var1000 = var999 == var86 ;  var1328 = 0 ; if ( var92 ) { if ( var1000 ) { var1328 = 1 ; } else { } } else { }  var1001 = var1328 ;  var1002 = int var570 = var1001 ; if ( var570 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1003 = 8 - 1 ;  var1004 = var91 + var1003 ;  var1005 = var91 = var1004 ; var87 ; var87 = var87 + 1 ; } label_85:
      |                                                                                                                                  ^~
output.c:90:189: error: expected identifier or ‘(’ before ‘else’
   90 |   var993 = 8 * 8 ;  var994 = var90 < var993 ;  var995 = var90 % 8 ;  var996 = 8 - 1 ;  var997 = var995 < var996 ;  var1327 = 0 ; if ( var994 ) { if ( var997 ) { var1327 = 1 ; } else { } } else { }  var998 = var1327 ;  var999 = var84 [ 0 ] ;  var1000 = var999 == var86 ;  var1328 = 0 ; if ( var92 ) { if ( var1000 ) { var1328 = 1 ; } else { } } else { }  var1001 = var1328 ;  var1002 = int var570 = var1001 ; if ( var570 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1003 = 8 - 1 ;  var1004 = var91 + var1003 ;  var1005 = var91 = var1004 ; var87 ; var87 = var87 + 1 ; } label_85:
      |                                                                                                                                                                                             ^~~~
output.c:90:199: warning: data definition has no type or storage class
   90 |   var993 = 8 * 8 ;  var994 = var90 < var993 ;  var995 = var90 % 8 ;  var996 = 8 - 1 ;  var997 = var995 < var996 ;  var1327 = 0 ; if ( var994 ) { if ( var997 ) { var1327 = 1 ; } else { } } else { }  var998 = var1327 ;  var999 = var84 [ 0 ] ;  var1000 = var999 == var86 ;  var1328 = 0 ; if ( var92 ) { if ( var1000 ) { var1328 = 1 ; } else { } } else { }  var1001 = var1328 ;  var1002 = int var570 = var1001 ; if ( var570 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1003 = 8 - 1 ;  var1004 = var91 + var1003 ;  var1005 = var91 = var1004 ; var87 ; var87 = var87 + 1 ; } label_85:
      |                                                                                                                                                                                                       ^~~~~~
output.c:90:199: error: type defaults to ‘int’ in declaration of ‘var998’ [-Wimplicit-int]
output.c:90:208: error: initializer element is not constant
   90 |   var993 = 8 * 8 ;  var994 = var90 < var993 ;  var995 = var90 % 8 ;  var996 = 8 - 1 ;  var997 = var995 < var996 ;  var1327 = 0 ; if ( var994 ) { if ( var997 ) { var1327 = 1 ; } else { } } else { }  var998 = var1327 ;  var999 = var84 [ 0 ] ;  var1000 = var999 == var86 ;  var1328 = 0 ; if ( var92 ) { if ( var1000 ) { var1328 = 1 ; } else { } } else { }  var1001 = var1328 ;  var1002 = int var570 = var1001 ; if ( var570 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1003 = 8 - 1 ;  var1004 = var91 + var1003 ;  var1005 = var91 = var1004 ; var87 ; var87 = var87 + 1 ; } label_85:
      |                                                                                                                                                                                                                ^~~~~~~
output.c:90:219: warning: data definition has no type or storage class
   90 |   var993 = 8 * 8 ;  var994 = var90 < var993 ;  var995 = var90 % 8 ;  var996 = 8 - 1 ;  var997 = var995 < var996 ;  var1327 = 0 ; if ( var994 ) { if ( var997 ) { var1327 = 1 ; } else { } } else { }  var998 = var1327 ;  var999 = var84 [ 0 ] ;  var1000 = var999 == var86 ;  var1328 = 0 ; if ( var92 ) { if ( var1000 ) { var1328 = 1 ; } else { } } else { }  var1001 = var1328 ;  var1002 = int var570 = var1001 ; if ( var570 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1003 = 8 - 1 ;  var1004 = var91 + var1003 ;  var1005 = var91 = var1004 ; var87 ; var87 = var87 + 1 ; } label_85:
      |                                                                                                                                                                                                                           ^~~~~~
output.c:90:219: error: type defaults to ‘int’ in declaration of ‘var999’ [-Wimplicit-int]
output.c:90:243: warning: data definition has no type or storage class
   90 |   var993 = 8 * 8 ;  var994 = var90 < var993 ;  var995 = var90 % 8 ;  var996 = 8 - 1 ;  var997 = var995 < var996 ;  var1327 = 0 ; if ( var994 ) { if ( var997 ) { var1327 = 1 ; } else { } } else { }  var998 = var1327 ;  var999 = var84 [ 0 ] ;  var1000 = var999 == var86 ;  var1328 = 0 ; if ( var92 ) { if ( var1000 ) { var1328 = 1 ; } else { } } else { }  var1001 = var1328 ;  var1002 = int var570 = var1001 ; if ( var570 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1003 = 8 - 1 ;  var1004 = var91 + var1003 ;  var1005 = var91 = var1004 ; var87 ; var87 = var87 + 1 ; } label_85:
      |                                                                                                                                                                                                                                                   ^~~~~~~
output.c:90:243: error: type defaults to ‘int’ in declaration of ‘var1000’ [-Wimplicit-int]
output.c:90:272: warning: data definition has no type or storage class
   90 |   var993 = 8 * 8 ;  var994 = var90 < var993 ;  var995 = var90 % 8 ;  var996 = 8 - 1 ;  var997 = var995 < var996 ;  var1327 = 0 ; if ( var994 ) { if ( var997 ) { var1327 = 1 ; } else { } } else { }  var998 = var1327 ;  var999 = var84 [ 0 ] ;  var1000 = var999 == var86 ;  var1328 = 0 ; if ( var92 ) { if ( var1000 ) { var1328 = 1 ; } else { } } else { }  var1001 = var1328 ;  var1002 = int var570 = var1001 ; if ( var570 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1003 = 8 - 1 ;  var1004 = var91 + var1003 ;  var1005 = var91 = var1004 ; var87 ; var87 = var87 + 1 ; } label_85:
      |                                                                                                                                                                                                                                                                                ^~~~~~~
output.c:90:272: error: type defaults to ‘int’ in declaration of ‘var1328’ [-Wimplicit-int]
output.c:90:286: error: expected identifier or ‘(’ before ‘if’
   90 |   var993 = 8 * 8 ;  var994 = var90 < var993 ;  var995 = var90 % 8 ;  var996 = 8 - 1 ;  var997 = var995 < var996 ;  var1327 = 0 ; if ( var994 ) { if ( var997 ) { var1327 = 1 ; } else { } } else { }  var998 = var1327 ;  var999 = var84 [ 0 ] ;  var1000 = var999 == var86 ;  var1328 = 0 ; if ( var92 ) { if ( var1000 ) { var1328 = 1 ; } else { } } else { }  var1001 = var1328 ;  var1002 = int var570 = var1001 ; if ( var570 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1003 = 8 - 1 ;  var1004 = var91 + var1003 ;  var1005 = var91 = var1004 ; var87 ; var87 = var87 + 1 ; } label_85:
      |                                                                                                                                                                                                                                                                                              ^~
output.c:90:345: error: expected identifier or ‘(’ before ‘else’
   90 |   var993 = 8 * 8 ;  var994 = var90 < var993 ;  var995 = var90 % 8 ;  var996 = 8 - 1 ;  var997 = var995 < var996 ;  var1327 = 0 ; if ( var994 ) { if ( var997 ) { var1327 = 1 ; } else { } } else { }  var998 = var1327 ;  var999 = var84 [ 0 ] ;  var1000 = var999 == var86 ;  var1328 = 0 ; if ( var92 ) { if ( var1000 ) { var1328 = 1 ; } else { } } else { }  var1001 = var1328 ;  var1002 = int var570 = var1001 ; if ( var570 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1003 = 8 - 1 ;  var1004 = var91 + var1003 ;  var1005 = var91 = var1004 ; var87 ; var87 = var87 + 1 ; } label_85:
      |                                                                                                                                                                                                                                                                                                                                                         ^~~~
output.c:90:355: warning: data definition has no type or storage class
   90 |   var993 = 8 * 8 ;  var994 = var90 < var993 ;  var995 = var90 % 8 ;  var996 = 8 - 1 ;  var997 = var995 < var996 ;  var1327 = 0 ; if ( var994 ) { if ( var997 ) { var1327 = 1 ; } else { } } else { }  var998 = var1327 ;  var999 = var84 [ 0 ] ;  var1000 = var999 == var86 ;  var1328 = 0 ; if ( var92 ) { if ( var1000 ) { var1328 = 1 ; } else { } } else { }  var1001 = var1328 ;  var1002 = int var570 = var1001 ; if ( var570 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1003 = 8 - 1 ;  var1004 = var91 + var1003 ;  var1005 = var91 = var1004 ; var87 ; var87 = var87 + 1 ; } label_85:
      |                                                                                                                                                                                                                                                                                                                                                                   ^~~~~~~
output.c:90:355: error: type defaults to ‘int’ in declaration of ‘var1001’ [-Wimplicit-int]
output.c:90:365: error: initializer element is not constant
   90 |   var993 = 8 * 8 ;  var994 = var90 < var993 ;  var995 = var90 % 8 ;  var996 = 8 - 1 ;  var997 = var995 < var996 ;  var1327 = 0 ; if ( var994 ) { if ( var997 ) { var1327 = 1 ; } else { } } else { }  var998 = var1327 ;  var999 = var84 [ 0 ] ;  var1000 = var999 == var86 ;  var1328 = 0 ; if ( var92 ) { if ( var1000 ) { var1328 = 1 ; } else { } } else { }  var1001 = var1328 ;  var1002 = int var570 = var1001 ; if ( var570 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1003 = 8 - 1 ;  var1004 = var91 + var1003 ;  var1005 = var91 = var1004 ; var87 ; var87 = var87 + 1 ; } label_85:
      |                                                                                                                                                                                                                                                                                                                                                                             ^~~~~~~
output.c:90:376: warning: data definition has no type or storage class
   90 |   var993 = 8 * 8 ;  var994 = var90 < var993 ;  var995 = var90 % 8 ;  var996 = 8 - 1 ;  var997 = var995 < var996 ;  var1327 = 0 ; if ( var994 ) { if ( var997 ) { var1327 = 1 ; } else { } } else { }  var998 = var1327 ;  var999 = var84 [ 0 ] ;  var1000 = var999 == var86 ;  var1328 = 0 ; if ( var92 ) { if ( var1000 ) { var1328 = 1 ; } else { } } else { }  var1001 = var1328 ;  var1002 = int var570 = var1001 ; if ( var570 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1003 = 8 - 1 ;  var1004 = var91 + var1003 ;  var1005 = var91 = var1004 ; var87 ; var87 = var87 + 1 ; } label_85:
      |                                                                                                                                                                                                                                                                                                                                                                                        ^~~~~~~
output.c:90:376: error: type defaults to ‘int’ in declaration of ‘var1002’ [-Wimplicit-int]
output.c:90:386: error: expected expression before ‘int’
   90 |   var993 = 8 * 8 ;  var994 = var90 < var993 ;  var995 = var90 % 8 ;  var996 = 8 - 1 ;  var997 = var995 < var996 ;  var1327 = 0 ; if ( var994 ) { if ( var997 ) { var1327 = 1 ; } else { } } else { }  var998 = var1327 ;  var999 = var84 [ 0 ] ;  var1000 = var999 == var86 ;  var1328 = 0 ; if ( var92 ) { if ( var1000 ) { var1328 = 1 ; } else { } } else { }  var1001 = var1328 ;  var1002 = int var570 = var1001 ; if ( var570 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1003 = 8 - 1 ;  var1004 = var91 + var1003 ;  var1005 = var91 = var1004 ; var87 ; var87 = var87 + 1 ; } label_85:
      |                                                                                                                                                                                                                                                                                                                                                                                                  ^~~
output.c:90:409: error: expected identifier or ‘(’ before ‘if’
   90 |   var993 = 8 * 8 ;  var994 = var90 < var993 ;  var995 = var90 % 8 ;  var996 = 8 - 1 ;  var997 = var995 < var996 ;  var1327 = 0 ; if ( var994 ) { if ( var997 ) { var1327 = 1 ; } else { } } else { }  var998 = var1327 ;  var999 = var84 [ 0 ] ;  var1000 = var999 == var86 ;  var1328 = 0 ; if ( var92 ) { if ( var1000 ) { var1328 = 1 ; } else { } } else { }  var1001 = var1328 ;  var1002 = int var570 = var1001 ; if ( var570 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1003 = 8 - 1 ;  var1004 = var91 + var1003 ;  var1005 = var91 = var1004 ; var87 ; var87 = var87 + 1 ; } label_85:
      |                                                                                                                                                                                                                                                                                                                                                                                                                         ^~
output.c:91:107: error: stray ‘#’ in program
   91 |   var1401 = var91 > var90 ;  var1479 = 0 ; if ( var1401 ) { var1479 = 1 ; } else { }  var1402 = var1479 ; #83 ( var91 ) ; = var86 ; var91 = = 8 - 1 ; var87 + ; goto label_85 ; } else { } label_86:
      |                                                                                                           ^
output.c:92:4: error: expected identifier or ‘(’ before ‘goto’
   92 |  } goto label_84 ; } else {  var1006 = var84 [ 0 ] ;  var1007 = var1006 == var88 ;  var1008 = int var571 = var1007 ; if ( var571 ) { var92 = 1 ; } else { goto label_84 ; } }  var1009 = 0 - 1 ;  var1010 = var1009 + 8 ;  var1011 = var90 + var1010 ;  var1012 = var90 = var1011 ; goto label_83 ; } label_84:
      |    ^~~~
output.c:92:20: error: expected identifier or ‘(’ before ‘}’ token
   92 |  } goto label_84 ; } else {  var1006 = var84 [ 0 ] ;  var1007 = var1006 == var88 ;  var1008 = int var571 = var1007 ; if ( var571 ) { var92 = 1 ; } else { goto label_84 ; } }  var1009 = 0 - 1 ;  var1010 = var1009 + 8 ;  var1011 = var90 + var1010 ;  var1012 = var90 = var1011 ; goto label_83 ; } label_84:
      |                    ^
output.c:92:22: error: expected identifier or ‘(’ before ‘else’
   92 |  } goto label_84 ; } else {  var1006 = var84 [ 0 ] ;  var1007 = var1006 == var88 ;  var1008 = int var571 = var1007 ; if ( var571 ) { var92 = 1 ; } else { goto label_84 ; } }  var1009 = 0 - 1 ;  var1010 = var1009 + 8 ;  var1011 = var90 + var1010 ;  var1012 = var90 = var1011 ; goto label_83 ; } label_84:
      |                      ^~~~
output.c:92:176: warning: data definition has no type or storage class
   92 |  } goto label_84 ; } else {  var1006 = var84 [ 0 ] ;  var1007 = var1006 == var88 ;  var1008 = int var571 = var1007 ; if ( var571 ) { var92 = 1 ; } else { goto label_84 ; } }  var1009 = 0 - 1 ;  var1010 = var1009 + 8 ;  var1011 = var90 + var1010 ;  var1012 = var90 = var1011 ; goto label_83 ; } label_84:
      |                                                                                                                                                                                ^~~~~~~
output.c:92:176: error: type defaults to ‘int’ in declaration of ‘var1009’ [-Wimplicit-int]
output.c:92:195: warning: data definition has no type or storage class
   92 |  } goto label_84 ; } else {  var1006 = var84 [ 0 ] ;  var1007 = var1006 == var88 ;  var1008 = int var571 = var1007 ; if ( var571 ) { var92 = 1 ; } else { goto label_84 ; } }  var1009 = 0 - 1 ;  var1010 = var1009 + 8 ;  var1011 = var90 + var1010 ;  var1012 = var90 = var1011 ; goto label_83 ; } label_84:
      |                                                                                                                                                                                                   ^~~~~~~
output.c:92:195: error: type defaults to ‘int’ in declaration of ‘var1010’ [-Wimplicit-int]
output.c:92:205: error: initializer element is not constant
   92 |  } goto label_84 ; } else {  var1006 = var84 [ 0 ] ;  var1007 = var1006 == var88 ;  var1008 = int var571 = var1007 ; if ( var571 ) { var92 = 1 ; } else { goto label_84 ; } }  var1009 = 0 - 1 ;  var1010 = var1009 + 8 ;  var1011 = var90 + var1010 ;  var1012 = var90 = var1011 ; goto label_83 ; } label_84:
      |                                                                                                                                                                                                             ^~~~~~~
output.c:92:220: warning: data definition has no type or storage class
   92 |  } goto label_84 ; } else {  var1006 = var84 [ 0 ] ;  var1007 = var1006 == var88 ;  var1008 = int var571 = var1007 ; if ( var571 ) { var92 = 1 ; } else { goto label_84 ; } }  var1009 = 0 - 1 ;  var1010 = var1009 + 8 ;  var1011 = var90 + var1010 ;  var1012 = var90 = var1011 ; goto label_83 ; } label_84:
      |                                                                                                                                                                                                                            ^~~~~~~
output.c:92:220: error: type defaults to ‘int’ in declaration of ‘var1011’ [-Wimplicit-int]
output.c:92:230: error: initializer element is not constant
   92 |  } goto label_84 ; } else {  var1006 = var84 [ 0 ] ;  var1007 = var1006 == var88 ;  var1008 = int var571 = var1007 ; if ( var571 ) { var92 = 1 ; } else { goto label_84 ; } }  var1009 = 0 - 1 ;  var1010 = var1009 + 8 ;  var1011 = var90 + var1010 ;  var1012 = var90 = var1011 ; goto label_83 ; } label_84:
      |                                                                                                                                                                                                                                      ^~~~~
output.c:92:249: warning: data definition has no type or storage class
   92 |  } goto label_84 ; } else {  var1006 = var84 [ 0 ] ;  var1007 = var1006 == var88 ;  var1008 = int var571 = var1007 ; if ( var571 ) { var92 = 1 ; } else { goto label_84 ; } }  var1009 = 0 - 1 ;  var1010 = var1009 + 8 ;  var1011 = var90 + var1010 ;  var1012 = var90 = var1011 ; goto label_83 ; } label_84:
      |                                                                                                                                                                                                                                                         ^~~~~~~
output.c:92:249: error: type defaults to ‘int’ in declaration of ‘var1012’ [-Wimplicit-int]
output.c:92:259: error: initializer element is not constant
   92 |  } goto label_84 ; } else {  var1006 = var84 [ 0 ] ;  var1007 = var1006 == var88 ;  var1008 = int var571 = var1007 ; if ( var571 ) { var92 = 1 ; } else { goto label_84 ; } }  var1009 = 0 - 1 ;  var1010 = var1009 + 8 ;  var1011 = var90 + var1010 ;  var1012 = var90 = var1011 ; goto label_83 ; } label_84:
      |                                                                                                                                                                                                                                                                   ^~~~~
output.c:92:277: error: expected identifier or ‘(’ before ‘goto’
   92 |  } goto label_84 ; } else {  var1006 = var84 [ 0 ] ;  var1007 = var1006 == var88 ;  var1008 = int var571 = var1007 ; if ( var571 ) { var92 = 1 ; } else { goto label_84 ; } }  var1009 = 0 - 1 ;  var1010 = var1009 + 8 ;  var1011 = var90 + var1010 ;  var1012 = var90 = var1011 ; goto label_83 ; } label_84:
      |                                                                                                                                                                                                                                                                                     ^~~~
output.c:92:293: error: expected identifier or ‘(’ before ‘}’ token
   92 |  } goto label_84 ; } else {  var1006 = var84 [ 0 ] ;  var1007 = var1006 == var88 ;  var1008 = int var571 = var1007 ; if ( var571 ) { var92 = 1 ; } else { goto label_84 ; } }  var1009 = 0 - 1 ;  var1010 = var1009 + 8 ;  var1011 = var90 + var1010 ;  var1012 = var90 = var1011 ; goto label_83 ; } label_84:
      |                                                                                                                                                                                                                                                                                                     ^
output.c:92:303: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘:’ token
   92 |  } goto label_84 ; } else {  var1006 = var84 [ 0 ] ;  var1007 = var1006 == var88 ;  var1008 = int var571 = var1007 ; if ( var571 ) { var92 = 1 ; } else { goto label_84 ; } }  var1009 = 0 - 1 ;  var1010 = var1009 + 8 ;  var1011 = var90 + var1010 ;  var1012 = var90 = var1011 ; goto label_83 ; } label_84:
      |                                                                                                                                                                                                                                                                                                               ^
output.c:93:26: warning: data definition has no type or storage class
   93 |   var1013 = var89 - 1 ;  var1014 = var1013 - 8 ;  var1015 = var90 = var1014 ; var91 = var90 ; var92 = 0 ; label_87:
      |                          ^~~~~~~
output.c:93:26: error: type defaults to ‘int’ in declaration of ‘var1014’ [-Wimplicit-int]
output.c:93:36: error: ‘var1013’ undeclared here (not in a function); did you mean ‘var1014’?
   93 |   var1013 = var89 - 1 ;  var1014 = var1013 - 8 ;  var1015 = var90 = var1014 ; var91 = var90 ; var92 = 0 ; label_87:
      |                                    ^~~~~~~
      |                                    var1014
output.c:93:51: warning: data definition has no type or storage class
   93 |   var1013 = var89 - 1 ;  var1014 = var1013 - 8 ;  var1015 = var90 = var1014 ; var91 = var90 ; var92 = 0 ; label_87:
      |                                                   ^~~~~~~
output.c:93:51: error: type defaults to ‘int’ in declaration of ‘var1015’ [-Wimplicit-int]
output.c:93:61: error: initializer element is not constant
   93 |   var1013 = var89 - 1 ;  var1014 = var1013 - 8 ;  var1015 = var90 = var1014 ; var91 = var90 ; var92 = 0 ; label_87:
      |                                                             ^~~~~
output.c:93:79: warning: data definition has no type or storage class
   93 |   var1013 = var89 - 1 ;  var1014 = var1013 - 8 ;  var1015 = var90 = var1014 ; var91 = var90 ; var92 = 0 ; label_87:
      |                                                                               ^~~~~
output.c:93:79: error: type defaults to ‘int’ in declaration of ‘var91’ [-Wimplicit-int]
output.c:93:79: error: redefinition of ‘var91’
output.c:69:22: note: previous definition of ‘var91’ with type ‘int’
   69 |  var90 = var89 + 8 ; var91 = var90 ; var92 = 0 ; label_63:
      |                      ^~~~~
output.c:93:87: error: initializer element is not constant
   93 |   var1013 = var89 - 1 ;  var1014 = var1013 - 8 ;  var1015 = var90 = var1014 ; var91 = var90 ; var92 = 0 ; label_87:
      |                                                                                       ^~~~~
output.c:93:95: warning: data definition has no type or storage class
   93 |   var1013 = var89 - 1 ;  var1014 = var1013 - 8 ;  var1015 = var90 = var1014 ; var91 = var90 ; var92 = 0 ; label_87:
      |                                                                                               ^~~~~
output.c:93:95: error: type defaults to ‘int’ in declaration of ‘var92’ [-Wimplicit-int]
output.c:93:95: error: redefinition of ‘var92’
output.c:69:38: note: previous definition of ‘var92’ with type ‘int’
   69 |  var90 = var89 + 8 ; var91 = var90 ; var92 = 0 ; label_63:
      |                                      ^~~~~
output.c:93:115: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘:’ token
   93 |   var1013 = var89 - 1 ;  var1014 = var1013 - 8 ;  var1015 = var90 = var1014 ; var91 = var90 ; var92 = 0 ; label_87:
      |                                                                                                                   ^
output.c:94:26: warning: data definition has no type or storage class
   94 |   var1403 = var90 < 0 ;  var1480 = 0 ; if ( var1403 ) { var1480 = 1 ; } else { }  var1404 = var1480 ;  var1405 =  var1016 = var1404 ;  var1017 = var90 % 8 ;  var1018 = 8 - 1 ;  var1019 = var1017 < var1018 ;  var1329 = 0 ; if ( var1016 ) { if ( var1019 ) { var1329 = 1 ; } else { } } else { }  var1020 = var1329 ;  var1021 = var84 [ 0 ] ;  var1022 = var1021 == var86 ;  var1330 = 0 ; if ( var92 ) { if ( var1022 ) { var1330 = 1 ; } else { } } else { }  var1023 = var1330 ;  var1024 = int var572 = var1023 ; if ( var572 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1025 = 1 + 8 ;  var1026 = var91 - var1025 ;  var1027 = var91 = var1026 ; var87 ; var87 = var87 + 1 ; } label_89:
      |                          ^~~~~~~
output.c:94:26: error: type defaults to ‘int’ in declaration of ‘var1480’ [-Wimplicit-int]
output.c:94:40: error: expected identifier or ‘(’ before ‘if’
   94 |   var1403 = var90 < 0 ;  var1480 = 0 ; if ( var1403 ) { var1480 = 1 ; } else { }  var1404 = var1480 ;  var1405 =  var1016 = var1404 ;  var1017 = var90 % 8 ;  var1018 = 8 - 1 ;  var1019 = var1017 < var1018 ;  var1329 = 0 ; if ( var1016 ) { if ( var1019 ) { var1329 = 1 ; } else { } } else { }  var1020 = var1329 ;  var1021 = var84 [ 0 ] ;  var1022 = var1021 == var86 ;  var1330 = 0 ; if ( var92 ) { if ( var1022 ) { var1330 = 1 ; } else { } } else { }  var1023 = var1330 ;  var1024 = int var572 = var1023 ; if ( var572 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1025 = 1 + 8 ;  var1026 = var91 - var1025 ;  var1027 = var91 = var1026 ; var87 ; var87 = var87 + 1 ; } label_89:
      |                                        ^~
output.c:94:73: error: expected identifier or ‘(’ before ‘else’
   94 |   var1403 = var90 < 0 ;  var1480 = 0 ; if ( var1403 ) { var1480 = 1 ; } else { }  var1404 = var1480 ;  var1405 =  var1016 = var1404 ;  var1017 = var90 % 8 ;  var1018 = 8 - 1 ;  var1019 = var1017 < var1018 ;  var1329 = 0 ; if ( var1016 ) { if ( var1019 ) { var1329 = 1 ; } else { } } else { }  var1020 = var1329 ;  var1021 = var84 [ 0 ] ;  var1022 = var1021 == var86 ;  var1330 = 0 ; if ( var92 ) { if ( var1022 ) { var1330 = 1 ; } else { } } else { }  var1023 = var1330 ;  var1024 = int var572 = var1023 ; if ( var572 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1025 = 1 + 8 ;  var1026 = var91 - var1025 ;  var1027 = var91 = var1026 ; var87 ; var87 = var87 + 1 ; } label_89:
      |                                                                         ^~~~
output.c:94:83: warning: data definition has no type or storage class
   94 |   var1403 = var90 < 0 ;  var1480 = 0 ; if ( var1403 ) { var1480 = 1 ; } else { }  var1404 = var1480 ;  var1405 =  var1016 = var1404 ;  var1017 = var90 % 8 ;  var1018 = 8 - 1 ;  var1019 = var1017 < var1018 ;  var1329 = 0 ; if ( var1016 ) { if ( var1019 ) { var1329 = 1 ; } else { } } else { }  var1020 = var1329 ;  var1021 = var84 [ 0 ] ;  var1022 = var1021 == var86 ;  var1330 = 0 ; if ( var92 ) { if ( var1022 ) { var1330 = 1 ; } else { } } else { }  var1023 = var1330 ;  var1024 = int var572 = var1023 ; if ( var572 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1025 = 1 + 8 ;  var1026 = var91 - var1025 ;  var1027 = var91 = var1026 ; var87 ; var87 = var87 + 1 ; } label_89:
      |                                                                                   ^~~~~~~
output.c:94:83: error: type defaults to ‘int’ in declaration of ‘var1404’ [-Wimplicit-int]
output.c:94:93: error: initializer element is not constant
   94 |   var1403 = var90 < 0 ;  var1480 = 0 ; if ( var1403 ) { var1480 = 1 ; } else { }  var1404 = var1480 ;  var1405 =  var1016 = var1404 ;  var1017 = var90 % 8 ;  var1018 = 8 - 1 ;  var1019 = var1017 < var1018 ;  var1329 = 0 ; if ( var1016 ) { if ( var1019 ) { var1329 = 1 ; } else { } } else { }  var1020 = var1329 ;  var1021 = var84 [ 0 ] ;  var1022 = var1021 == var86 ;  var1330 = 0 ; if ( var92 ) { if ( var1022 ) { var1330 = 1 ; } else { } } else { }  var1023 = var1330 ;  var1024 = int var572 = var1023 ; if ( var572 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1025 = 1 + 8 ;  var1026 = var91 - var1025 ;  var1027 = var91 = var1026 ; var87 ; var87 = var87 + 1 ; } label_89:
      |                                                                                             ^~~~~~~
output.c:94:104: warning: data definition has no type or storage class
   94 |   var1403 = var90 < 0 ;  var1480 = 0 ; if ( var1403 ) { var1480 = 1 ; } else { }  var1404 = var1480 ;  var1405 =  var1016 = var1404 ;  var1017 = var90 % 8 ;  var1018 = 8 - 1 ;  var1019 = var1017 < var1018 ;  var1329 = 0 ; if ( var1016 ) { if ( var1019 ) { var1329 = 1 ; } else { } } else { }  var1020 = var1329 ;  var1021 = var84 [ 0 ] ;  var1022 = var1021 == var86 ;  var1330 = 0 ; if ( var92 ) { if ( var1022 ) { var1330 = 1 ; } else { } } else { }  var1023 = var1330 ;  var1024 = int var572 = var1023 ; if ( var572 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1025 = 1 + 8 ;  var1026 = var91 - var1025 ;  var1027 = var91 = var1026 ; var87 ; var87 = var87 + 1 ; } label_89:
      |                                                                                                        ^~~~~~~
output.c:94:104: error: type defaults to ‘int’ in declaration of ‘var1405’ [-Wimplicit-int]
output.c:94:115: error: ‘var1016’ undeclared here (not in a function); did you mean ‘var1015’?
   94 |   var1403 = var90 < 0 ;  var1480 = 0 ; if ( var1403 ) { var1480 = 1 ; } else { }  var1404 = var1480 ;  var1405 =  var1016 = var1404 ;  var1017 = var90 % 8 ;  var1018 = 8 - 1 ;  var1019 = var1017 < var1018 ;  var1329 = 0 ; if ( var1016 ) { if ( var1019 ) { var1329 = 1 ; } else { } } else { }  var1020 = var1329 ;  var1021 = var84 [ 0 ] ;  var1022 = var1021 == var86 ;  var1330 = 0 ; if ( var92 ) { if ( var1022 ) { var1330 = 1 ; } else { } } else { }  var1023 = var1330 ;  var1024 = int var572 = var1023 ; if ( var572 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1025 = 1 + 8 ;  var1026 = var91 - var1025 ;  var1027 = var91 = var1026 ; var87 ; var87 = var87 + 1 ; } label_89:
      |                                                                                                                   ^~~~~~~
      |                                                                                                                   var1015
output.c:94:136: warning: data definition has no type or storage class
   94 |   var1403 = var90 < 0 ;  var1480 = 0 ; if ( var1403 ) { var1480 = 1 ; } else { }  var1404 = var1480 ;  var1405 =  var1016 = var1404 ;  var1017 = var90 % 8 ;  var1018 = 8 - 1 ;  var1019 = var1017 < var1018 ;  var1329 = 0 ; if ( var1016 ) { if ( var1019 ) { var1329 = 1 ; } else { } } else { }  var1020 = var1329 ;  var1021 = var84 [ 0 ] ;  var1022 = var1021 == var86 ;  var1330 = 0 ; if ( var92 ) { if ( var1022 ) { var1330 = 1 ; } else { } } else { }  var1023 = var1330 ;  var1024 = int var572 = var1023 ; if ( var572 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1025 = 1 + 8 ;  var1026 = var91 - var1025 ;  var1027 = var91 = var1026 ; var87 ; var87 = var87 + 1 ; } label_89:
      |                                                                                                                                        ^~~~~~~
output.c:94:136: error: type defaults to ‘int’ in declaration of ‘var1017’ [-Wimplicit-int]
output.c:94:146: error: initializer element is not constant
   94 |   var1403 = var90 < 0 ;  var1480 = 0 ; if ( var1403 ) { var1480 = 1 ; } else { }  var1404 = var1480 ;  var1405 =  var1016 = var1404 ;  var1017 = var90 % 8 ;  var1018 = 8 - 1 ;  var1019 = var1017 < var1018 ;  var1329 = 0 ; if ( var1016 ) { if ( var1019 ) { var1329 = 1 ; } else { } } else { }  var1020 = var1329 ;  var1021 = var84 [ 0 ] ;  var1022 = var1021 == var86 ;  var1330 = 0 ; if ( var92 ) { if ( var1022 ) { var1330 = 1 ; } else { } } else { }  var1023 = var1330 ;  var1024 = int var572 = var1023 ; if ( var572 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1025 = 1 + 8 ;  var1026 = var91 - var1025 ;  var1027 = var91 = var1026 ; var87 ; var87 = var87 + 1 ; } label_89:
      |                                                                                                                                                  ^~~~~
output.c:94:159: warning: data definition has no type or storage class
   94 |   var1403 = var90 < 0 ;  var1480 = 0 ; if ( var1403 ) { var1480 = 1 ; } else { }  var1404 = var1480 ;  var1405 =  var1016 = var1404 ;  var1017 = var90 % 8 ;  var1018 = 8 - 1 ;  var1019 = var1017 < var1018 ;  var1329 = 0 ; if ( var1016 ) { if ( var1019 ) { var1329 = 1 ; } else { } } else { }  var1020 = var1329 ;  var1021 = var84 [ 0 ] ;  var1022 = var1021 == var86 ;  var1330 = 0 ; if ( var92 ) { if ( var1022 ) { var1330 = 1 ; } else { } } else { }  var1023 = var1330 ;  var1024 = int var572 = var1023 ; if ( var572 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1025 = 1 + 8 ;  var1026 = var91 - var1025 ;  var1027 = var91 = var1026 ; var87 ; var87 = var87 + 1 ; } label_89:
      |                                                                                                                                                               ^~~~~~~
output.c:94:159: error: type defaults to ‘int’ in declaration of ‘var1018’ [-Wimplicit-int]
output.c:94:178: warning: data definition has no type or storage class
   94 |   var1403 = var90 < 0 ;  var1480 = 0 ; if ( var1403 ) { var1480 = 1 ; } else { }  var1404 = var1480 ;  var1405 =  var1016 = var1404 ;  var1017 = var90 % 8 ;  var1018 = 8 - 1 ;  var1019 = var1017 < var1018 ;  var1329 = 0 ; if ( var1016 ) { if ( var1019 ) { var1329 = 1 ; } else { } } else { }  var1020 = var1329 ;  var1021 = var84 [ 0 ] ;  var1022 = var1021 == var86 ;  var1330 = 0 ; if ( var92 ) { if ( var1022 ) { var1330 = 1 ; } else { } } else { }  var1023 = var1330 ;  var1024 = int var572 = var1023 ; if ( var572 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1025 = 1 + 8 ;  var1026 = var91 - var1025 ;  var1027 = var91 = var1026 ; var87 ; var87 = var87 + 1 ; } label_89:
      |                                                                                                                                                                                  ^~~~~~~
output.c:94:178: error: type defaults to ‘int’ in declaration of ‘var1019’ [-Wimplicit-int]
output.c:94:188: error: initializer element is not constant
   94 |   var1403 = var90 < 0 ;  var1480 = 0 ; if ( var1403 ) { var1480 = 1 ; } else { }  var1404 = var1480 ;  var1405 =  var1016 = var1404 ;  var1017 = var90 % 8 ;  var1018 = 8 - 1 ;  var1019 = var1017 < var1018 ;  var1329 = 0 ; if ( var1016 ) { if ( var1019 ) { var1329 = 1 ; } else { } } else { }  var1020 = var1329 ;  var1021 = var84 [ 0 ] ;  var1022 = var1021 == var86 ;  var1330 = 0 ; if ( var92 ) { if ( var1022 ) { var1330 = 1 ; } else { } } else { }  var1023 = var1330 ;  var1024 = int var572 = var1023 ; if ( var572 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1025 = 1 + 8 ;  var1026 = var91 - var1025 ;  var1027 = var91 = var1026 ; var87 ; var87 = var87 + 1 ; } label_89:
      |                                                                                                                                                                                            ^~~~~~~
output.c:94:209: warning: data definition has no type or storage class
   94 |   var1403 = var90 < 0 ;  var1480 = 0 ; if ( var1403 ) { var1480 = 1 ; } else { }  var1404 = var1480 ;  var1405 =  var1016 = var1404 ;  var1017 = var90 % 8 ;  var1018 = 8 - 1 ;  var1019 = var1017 < var1018 ;  var1329 = 0 ; if ( var1016 ) { if ( var1019 ) { var1329 = 1 ; } else { } } else { }  var1020 = var1329 ;  var1021 = var84 [ 0 ] ;  var1022 = var1021 == var86 ;  var1330 = 0 ; if ( var92 ) { if ( var1022 ) { var1330 = 1 ; } else { } } else { }  var1023 = var1330 ;  var1024 = int var572 = var1023 ; if ( var572 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1025 = 1 + 8 ;  var1026 = var91 - var1025 ;  var1027 = var91 = var1026 ; var87 ; var87 = var87 + 1 ; } label_89:
      |                                                                                                                                                                                                                 ^~~~~~~
output.c:94:209: error: type defaults to ‘int’ in declaration of ‘var1329’ [-Wimplicit-int]
output.c:94:223: error: expected identifier or ‘(’ before ‘if’
   94 |   var1403 = var90 < 0 ;  var1480 = 0 ; if ( var1403 ) { var1480 = 1 ; } else { }  var1404 = var1480 ;  var1405 =  var1016 = var1404 ;  var1017 = var90 % 8 ;  var1018 = 8 - 1 ;  var1019 = var1017 < var1018 ;  var1329 = 0 ; if ( var1016 ) { if ( var1019 ) { var1329 = 1 ; } else { } } else { }  var1020 = var1329 ;  var1021 = var84 [ 0 ] ;  var1022 = var1021 == var86 ;  var1330 = 0 ; if ( var92 ) { if ( var1022 ) { var1330 = 1 ; } else { } } else { }  var1023 = var1330 ;  var1024 = int var572 = var1023 ; if ( var572 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1025 = 1 + 8 ;  var1026 = var91 - var1025 ;  var1027 = var91 = var1026 ; var87 ; var87 = var87 + 1 ; } label_89:
      |                                                                                                                                                                                                                               ^~
output.c:94:284: error: expected identifier or ‘(’ before ‘else’
   94 |   var1403 = var90 < 0 ;  var1480 = 0 ; if ( var1403 ) { var1480 = 1 ; } else { }  var1404 = var1480 ;  var1405 =  var1016 = var1404 ;  var1017 = var90 % 8 ;  var1018 = 8 - 1 ;  var1019 = var1017 < var1018 ;  var1329 = 0 ; if ( var1016 ) { if ( var1019 ) { var1329 = 1 ; } else { } } else { }  var1020 = var1329 ;  var1021 = var84 [ 0 ] ;  var1022 = var1021 == var86 ;  var1330 = 0 ; if ( var92 ) { if ( var1022 ) { var1330 = 1 ; } else { } } else { }  var1023 = var1330 ;  var1024 = int var572 = var1023 ; if ( var572 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1025 = 1 + 8 ;  var1026 = var91 - var1025 ;  var1027 = var91 = var1026 ; var87 ; var87 = var87 + 1 ; } label_89:
      |                                                                                                                                                                                                                                                                                            ^~~~
output.c:94:294: warning: data definition has no type or storage class
   94 |   var1403 = var90 < 0 ;  var1480 = 0 ; if ( var1403 ) { var1480 = 1 ; } else { }  var1404 = var1480 ;  var1405 =  var1016 = var1404 ;  var1017 = var90 % 8 ;  var1018 = 8 - 1 ;  var1019 = var1017 < var1018 ;  var1329 = 0 ; if ( var1016 ) { if ( var1019 ) { var1329 = 1 ; } else { } } else { }  var1020 = var1329 ;  var1021 = var84 [ 0 ] ;  var1022 = var1021 == var86 ;  var1330 = 0 ; if ( var92 ) { if ( var1022 ) { var1330 = 1 ; } else { } } else { }  var1023 = var1330 ;  var1024 = int var572 = var1023 ; if ( var572 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1025 = 1 + 8 ;  var1026 = var91 - var1025 ;  var1027 = var91 = var1026 ; var87 ; var87 = var87 + 1 ; } label_89:
      |                                                                                                                                                                                                                                                                                                      ^~~~~~~
output.c:94:294: error: type defaults to ‘int’ in declaration of ‘var1020’ [-Wimplicit-int]
output.c:94:304: error: initializer element is not constant
   94 |   var1403 = var90 < 0 ;  var1480 = 0 ; if ( var1403 ) { var1480 = 1 ; } else { }  var1404 = var1480 ;  var1405 =  var1016 = var1404 ;  var1017 = var90 % 8 ;  var1018 = 8 - 1 ;  var1019 = var1017 < var1018 ;  var1329 = 0 ; if ( var1016 ) { if ( var1019 ) { var1329 = 1 ; } else { } } else { }  var1020 = var1329 ;  var1021 = var84 [ 0 ] ;  var1022 = var1021 == var86 ;  var1330 = 0 ; if ( var92 ) { if ( var1022 ) { var1330 = 1 ; } else { } } else { }  var1023 = var1330 ;  var1024 = int var572 = var1023 ; if ( var572 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1025 = 1 + 8 ;  var1026 = var91 - var1025 ;  var1027 = var91 = var1026 ; var87 ; var87 = var87 + 1 ; } label_89:
      |                                                                                                                                                                                                                                                                                                                ^~~~~~~
output.c:94:315: warning: data definition has no type or storage class
   94 |   var1403 = var90 < 0 ;  var1480 = 0 ; if ( var1403 ) { var1480 = 1 ; } else { }  var1404 = var1480 ;  var1405 =  var1016 = var1404 ;  var1017 = var90 % 8 ;  var1018 = 8 - 1 ;  var1019 = var1017 < var1018 ;  var1329 = 0 ; if ( var1016 ) { if ( var1019 ) { var1329 = 1 ; } else { } } else { }  var1020 = var1329 ;  var1021 = var84 [ 0 ] ;  var1022 = var1021 == var86 ;  var1330 = 0 ; if ( var92 ) { if ( var1022 ) { var1330 = 1 ; } else { } } else { }  var1023 = var1330 ;  var1024 = int var572 = var1023 ; if ( var572 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1025 = 1 + 8 ;  var1026 = var91 - var1025 ;  var1027 = var91 = var1026 ; var87 ; var87 = var87 + 1 ; } label_89:
      |                                                                                                                                                                                                                                                                                                                           ^~~~~~~
output.c:94:315: error: type defaults to ‘int’ in declaration of ‘var1021’ [-Wimplicit-int]
output.c:94:340: warning: data definition has no type or storage class
   94 |   var1403 = var90 < 0 ;  var1480 = 0 ; if ( var1403 ) { var1480 = 1 ; } else { }  var1404 = var1480 ;  var1405 =  var1016 = var1404 ;  var1017 = var90 % 8 ;  var1018 = 8 - 1 ;  var1019 = var1017 < var1018 ;  var1329 = 0 ; if ( var1016 ) { if ( var1019 ) { var1329 = 1 ; } else { } } else { }  var1020 = var1329 ;  var1021 = var84 [ 0 ] ;  var1022 = var1021 == var86 ;  var1330 = 0 ; if ( var92 ) { if ( var1022 ) { var1330 = 1 ; } else { } } else { }  var1023 = var1330 ;  var1024 = int var572 = var1023 ; if ( var572 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1025 = 1 + 8 ;  var1026 = var91 - var1025 ;  var1027 = var91 = var1026 ; var87 ; var87 = var87 + 1 ; } label_89:
      |                                                                                                                                                                                                                                                                                                                                                    ^~~~~~~
output.c:94:340: error: type defaults to ‘int’ in declaration of ‘var1022’ [-Wimplicit-int]
output.c:94:370: warning: data definition has no type or storage class
   94 |   var1403 = var90 < 0 ;  var1480 = 0 ; if ( var1403 ) { var1480 = 1 ; } else { }  var1404 = var1480 ;  var1405 =  var1016 = var1404 ;  var1017 = var90 % 8 ;  var1018 = 8 - 1 ;  var1019 = var1017 < var1018 ;  var1329 = 0 ; if ( var1016 ) { if ( var1019 ) { var1329 = 1 ; } else { } } else { }  var1020 = var1329 ;  var1021 = var84 [ 0 ] ;  var1022 = var1021 == var86 ;  var1330 = 0 ; if ( var92 ) { if ( var1022 ) { var1330 = 1 ; } else { } } else { }  var1023 = var1330 ;  var1024 = int var572 = var1023 ; if ( var572 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1025 = 1 + 8 ;  var1026 = var91 - var1025 ;  var1027 = var91 = var1026 ; var87 ; var87 = var87 + 1 ; } label_89:
      |                                                                                                                                                                                                                                                                                                                                                                                  ^~~~~~~
output.c:94:370: error: type defaults to ‘int’ in declaration of ‘var1330’ [-Wimplicit-int]
output.c:94:384: error: expected identifier or ‘(’ before ‘if’
   94 |   var1403 = var90 < 0 ;  var1480 = 0 ; if ( var1403 ) { var1480 = 1 ; } else { }  var1404 = var1480 ;  var1405 =  var1016 = var1404 ;  var1017 = var90 % 8 ;  var1018 = 8 - 1 ;  var1019 = var1017 < var1018 ;  var1329 = 0 ; if ( var1016 ) { if ( var1019 ) { var1329 = 1 ; } else { } } else { }  var1020 = var1329 ;  var1021 = var84 [ 0 ] ;  var1022 = var1021 == var86 ;  var1330 = 0 ; if ( var92 ) { if ( var1022 ) { var1330 = 1 ; } else { } } else { }  var1023 = var1330 ;  var1024 = int var572 = var1023 ; if ( var572 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1025 = 1 + 8 ;  var1026 = var91 - var1025 ;  var1027 = var91 = var1026 ; var87 ; var87 = var87 + 1 ; } label_89:
      |                                                                                                                                                                                                                                                                                                                                                                                                ^~
output.c:94:443: error: expected identifier or ‘(’ before ‘else’
   94 |   var1403 = var90 < 0 ;  var1480 = 0 ; if ( var1403 ) { var1480 = 1 ; } else { }  var1404 = var1480 ;  var1405 =  var1016 = var1404 ;  var1017 = var90 % 8 ;  var1018 = 8 - 1 ;  var1019 = var1017 < var1018 ;  var1329 = 0 ; if ( var1016 ) { if ( var1019 ) { var1329 = 1 ; } else { } } else { }  var1020 = var1329 ;  var1021 = var84 [ 0 ] ;  var1022 = var1021 == var86 ;  var1330 = 0 ; if ( var92 ) { if ( var1022 ) { var1330 = 1 ; } else { } } else { }  var1023 = var1330 ;  var1024 = int var572 = var1023 ; if ( var572 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1025 = 1 + 8 ;  var1026 = var91 - var1025 ;  var1027 = var91 = var1026 ; var87 ; var87 = var87 + 1 ; } label_89:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                           ^~~~
output.c:94:453: warning: data definition has no type or storage class
   94 |   var1403 = var90 < 0 ;  var1480 = 0 ; if ( var1403 ) { var1480 = 1 ; } else { }  var1404 = var1480 ;  var1405 =  var1016 = var1404 ;  var1017 = var90 % 8 ;  var1018 = 8 - 1 ;  var1019 = var1017 < var1018 ;  var1329 = 0 ; if ( var1016 ) { if ( var1019 ) { var1329 = 1 ; } else { } } else { }  var1020 = var1329 ;  var1021 = var84 [ 0 ] ;  var1022 = var1021 == var86 ;  var1330 = 0 ; if ( var92 ) { if ( var1022 ) { var1330 = 1 ; } else { } } else { }  var1023 = var1330 ;  var1024 = int var572 = var1023 ; if ( var572 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1025 = 1 + 8 ;  var1026 = var91 - var1025 ;  var1027 = var91 = var1026 ; var87 ; var87 = var87 + 1 ; } label_89:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                     ^~~~~~~
output.c:94:453: error: type defaults to ‘int’ in declaration of ‘var1023’ [-Wimplicit-int]
output.c:94:463: error: initializer element is not constant
   94 |   var1403 = var90 < 0 ;  var1480 = 0 ; if ( var1403 ) { var1480 = 1 ; } else { }  var1404 = var1480 ;  var1405 =  var1016 = var1404 ;  var1017 = var90 % 8 ;  var1018 = 8 - 1 ;  var1019 = var1017 < var1018 ;  var1329 = 0 ; if ( var1016 ) { if ( var1019 ) { var1329 = 1 ; } else { } } else { }  var1020 = var1329 ;  var1021 = var84 [ 0 ] ;  var1022 = var1021 == var86 ;  var1330 = 0 ; if ( var92 ) { if ( var1022 ) { var1330 = 1 ; } else { } } else { }  var1023 = var1330 ;  var1024 = int var572 = var1023 ; if ( var572 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1025 = 1 + 8 ;  var1026 = var91 - var1025 ;  var1027 = var91 = var1026 ; var87 ; var87 = var87 + 1 ; } label_89:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ^~~~~~~
output.c:94:474: warning: data definition has no type or storage class
   94 |   var1403 = var90 < 0 ;  var1480 = 0 ; if ( var1403 ) { var1480 = 1 ; } else { }  var1404 = var1480 ;  var1405 =  var1016 = var1404 ;  var1017 = var90 % 8 ;  var1018 = 8 - 1 ;  var1019 = var1017 < var1018 ;  var1329 = 0 ; if ( var1016 ) { if ( var1019 ) { var1329 = 1 ; } else { } } else { }  var1020 = var1329 ;  var1021 = var84 [ 0 ] ;  var1022 = var1021 == var86 ;  var1330 = 0 ; if ( var92 ) { if ( var1022 ) { var1330 = 1 ; } else { } } else { }  var1023 = var1330 ;  var1024 = int var572 = var1023 ; if ( var572 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1025 = 1 + 8 ;  var1026 = var91 - var1025 ;  var1027 = var91 = var1026 ; var87 ; var87 = var87 + 1 ; } label_89:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ^~~~~~~
output.c:94:474: error: type defaults to ‘int’ in declaration of ‘var1024’ [-Wimplicit-int]
output.c:94:484: error: expected expression before ‘int’
   94 |   var1403 = var90 < 0 ;  var1480 = 0 ; if ( var1403 ) { var1480 = 1 ; } else { }  var1404 = var1480 ;  var1405 =  var1016 = var1404 ;  var1017 = var90 % 8 ;  var1018 = 8 - 1 ;  var1019 = var1017 < var1018 ;  var1329 = 0 ; if ( var1016 ) { if ( var1019 ) { var1329 = 1 ; } else { } } else { }  var1020 = var1329 ;  var1021 = var84 [ 0 ] ;  var1022 = var1021 == var86 ;  var1330 = 0 ; if ( var92 ) { if ( var1022 ) { var1330 = 1 ; } else { } } else { }  var1023 = var1330 ;  var1024 = int var572 = var1023 ; if ( var572 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1025 = 1 + 8 ;  var1026 = var91 - var1025 ;  var1027 = var91 = var1026 ; var87 ; var87 = var87 + 1 ; } label_89:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ^~~
output.c:94:507: error: expected identifier or ‘(’ before ‘if’
   94 |   var1403 = var90 < 0 ;  var1480 = 0 ; if ( var1403 ) { var1480 = 1 ; } else { }  var1404 = var1480 ;  var1405 =  var1016 = var1404 ;  var1017 = var90 % 8 ;  var1018 = 8 - 1 ;  var1019 = var1017 < var1018 ;  var1329 = 0 ; if ( var1016 ) { if ( var1019 ) { var1329 = 1 ; } else { } } else { }  var1020 = var1329 ;  var1021 = var84 [ 0 ] ;  var1022 = var1021 == var86 ;  var1330 = 0 ; if ( var92 ) { if ( var1022 ) { var1330 = 1 ; } else { } } else { }  var1023 = var1330 ;  var1024 = int var572 = var1023 ; if ( var572 ) { { { var84 [ 0 ] var91 ) = var86 ;  var1025 = 1 + 8 ;  var1026 = var91 - var1025 ;  var1027 = var91 = var1026 ; var87 ; var87 = var87 + 1 ; } label_89:
      |~
output.c:95:107: error: stray ‘#’ in program
   95 |   var1406 = var91 < var90 ;  var1481 = 0 ; if ( var1406 ) { var1481 = 1 ; } else { }  var1407 = var1481 ; #83 ( var91 ) ; = var86 ; var91 = = 1 + 8 ; var87 + ; goto label_89 ; } else { } label_90:
      |                                                                                                           ^
output.c:96:4: error: expected identifier or ‘(’ before ‘goto’
   96 |  } goto label_88 ; } else {  var1028 = var84 [ 0 ] ;  var1029 = var1028 == var88 ;  var1030 = int var573 = var1029 ; if ( var573 ) { var92 = 1 ; } else { goto label_88 ; } }  var1031 = 0 - 1 ;  var1032 = var1031 - 8 ;  var1033 = var90 + var1032 ;  var1034 = var90 = var1033 ; goto label_87 ; } label_88:
      |    ^~~~
output.c:96:20: error: expected identifier or ‘(’ before ‘}’ token
   96 |  } goto label_88 ; } else {  var1028 = var84 [ 0 ] ;  var1029 = var1028 == var88 ;  var1030 = int var573 = var1029 ; if ( var573 ) { var92 = 1 ; } else { goto label_88 ; } }  var1031 = 0 - 1 ;  var1032 = var1031 - 8 ;  var1033 = var90 + var1032 ;  var1034 = var90 = var1033 ; goto label_87 ; } label_88:
      |                    ^
output.c:96:22: error: expected identifier or ‘(’ before ‘else’
   96 |  } goto label_88 ; } else {  var1028 = var84 [ 0 ] ;  var1029 = var1028 == var88 ;  var1030 = int var573 = var1029 ; if ( var573 ) { var92 = 1 ; } else { goto label_88 ; } }  var1031 = 0 - 1 ;  var1032 = var1031 - 8 ;  var1033 = var90 + var1032 ;  var1034 = var90 = var1033 ; goto label_87 ; } label_88:
      |                      ^~~~
output.c:96:176: warning: data definition has no type or storage class
   96 |  } goto label_88 ; } else {  var1028 = var84 [ 0 ] ;  var1029 = var1028 == var88 ;  var1030 = int var573 = var1029 ; if ( var573 ) { var92 = 1 ; } else { goto label_88 ; } }  var1031 = 0 - 1 ;  var1032 = var1031 - 8 ;  var1033 = var90 + var1032 ;  var1034 = var90 = var1033 ; goto label_87 ; } label_88:
      |                                                                                                                                                                                ^~~~~~~
output.c:96:176: error: type defaults to ‘int’ in declaration of ‘var1031’ [-Wimplicit-int]
output.c:96:195: warning: data definition has no type or storage class
   96 |  } goto label_88 ; } else {  var1028 = var84 [ 0 ] ;  var1029 = var1028 == var88 ;  var1030 = int var573 = var1029 ; if ( var573 ) { var92 = 1 ; } else { goto label_88 ; } }  var1031 = 0 - 1 ;  var1032 = var1031 - 8 ;  var1033 = var90 + var1032 ;  var1034 = var90 = var1033 ; goto label_87 ; } label_88:
      |                                                                                                                                                                                                   ^~~~~~~
output.c:96:195: error: type defaults to ‘int’ in declaration of ‘var1032’ [-Wimplicit-int]
output.c:96:205: error: initializer element is not constant
   96 |  } goto label_88 ; } else {  var1028 = var84 [ 0 ] ;  var1029 = var1028 == var88 ;  var1030 = int var573 = var1029 ; if ( var573 ) { var92 = 1 ; } else { goto label_88 ; } }  var1031 = 0 - 1 ;  var1032 = var1031 - 8 ;  var1033 = var90 + var1032 ;  var1034 = var90 = var1033 ; goto label_87 ; } label_88:
      |                                                                                                                                                                                                             ^~~~~~~
output.c:96:220: warning: data definition has no type or storage class
   96 |  } goto label_88 ; } else {  var1028 = var84 [ 0 ] ;  var1029 = var1028 == var88 ;  var1030 = int var573 = var1029 ; if ( var573 ) { var92 = 1 ; } else { goto label_88 ; } }  var1031 = 0 - 1 ;  var1032 = var1031 - 8 ;  var1033 = var90 + var1032 ;  var1034 = var90 = var1033 ; goto label_87 ; } label_88:
      |                                                                                                                                                                                                                            ^~~~~~~
output.c:96:220: error: type defaults to ‘int’ in declaration of ‘var1033’ [-Wimplicit-int]
output.c:96:230: error: initializer element is not constant
   96 |  } goto label_88 ; } else {  var1028 = var84 [ 0 ] ;  var1029 = var1028 == var88 ;  var1030 = int var573 = var1029 ; if ( var573 ) { var92 = 1 ; } else { goto label_88 ; } }  var1031 = 0 - 1 ;  var1032 = var1031 - 8 ;  var1033 = var90 + var1032 ;  var1034 = var90 = var1033 ; goto label_87 ; } label_88:
      |                                                                                                                                                                                                                                      ^~~~~
output.c:96:249: warning: data definition has no type or storage class
   96 |  } goto label_88 ; } else {  var1028 = var84 [ 0 ] ;  var1029 = var1028 == var88 ;  var1030 = int var573 = var1029 ; if ( var573 ) { var92 = 1 ; } else { goto label_88 ; } }  var1031 = 0 - 1 ;  var1032 = var1031 - 8 ;  var1033 = var90 + var1032 ;  var1034 = var90 = var1033 ; goto label_87 ; } label_88:
      |                                                                                                                                                                                                                                                         ^~~~~~~
output.c:96:249: error: type defaults to ‘int’ in declaration of ‘var1034’ [-Wimplicit-int]
output.c:96:259: error: initializer element is not constant
   96 |  } goto label_88 ; } else {  var1028 = var84 [ 0 ] ;  var1029 = var1028 == var88 ;  var1030 = int var573 = var1029 ; if ( var573 ) { var92 = 1 ; } else { goto label_88 ; } }  var1031 = 0 - 1 ;  var1032 = var1031 - 8 ;  var1033 = var90 + var1032 ;  var1034 = var90 = var1033 ; goto label_87 ; } label_88:
      |                                                                                                                                                                                                                                                                   ^~~~~
output.c:96:277: error: expected identifier or ‘(’ before ‘goto’
   96 |  } goto label_88 ; } else {  var1028 = var84 [ 0 ] ;  var1029 = var1028 == var88 ;  var1030 = int var573 = var1029 ; if ( var573 ) { var92 = 1 ; } else { goto label_88 ; } }  var1031 = 0 - 1 ;  var1032 = var1031 - 8 ;  var1033 = var90 + var1032 ;  var1034 = var90 = var1033 ; goto label_87 ; } label_88:
      |                                                                                                                                                                                                                                                                                     ^~~~
output.c:96:293: error: expected identifier or ‘(’ before ‘}’ token
   96 |  } goto label_88 ; } else {  var1028 = var84 [ 0 ] ;  var1029 = var1028 == var88 ;  var1030 = int var573 = var1029 ; if ( var573 ) { var92 = 1 ; } else { goto label_88 ; } }  var1031 = 0 - 1 ;  var1032 = var1031 - 8 ;  var1033 = var90 + var1032 ;  var1034 = var90 = var1033 ; goto label_87 ; } label_88:
      |                                                                                                                                                                                                                                                                                                     ^
output.c:96:303: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘:’ token
   96 |  } goto label_88 ; } else {  var1028 = var84 [ 0 ] ;  var1029 = var1028 == var88 ;  var1030 = int var573 = var1029 ; if ( var573 ) { var92 = 1 ; } else { goto label_88 ; } }  var1031 = 0 - 1 ;  var1032 = var1031 - 8 ;  var1033 = var90 + var1032 ;  var1034 = var90 = var1033 ; goto label_87 ; } label_88:
      |                                                                                                                                                                                                                                                                                                               ^
output.c:97:23: error: expected identifier or ‘(’ before ‘return’
   97 |  int var238 = var87 ; return var238 ; } int getHeuristicValue ( int var94 , int * var95 ) { int var96 = 0 ; { int var97 = 0 ; label_91:
      |                       ^~~~~~
output.c:97:39: error: expected identifier or ‘(’ before ‘}’ token
   97 |  int var238 = var87 ; return var238 ; } int getHeuristicValue ( int var94 , int * var95 ) { int var96 = 0 ; { int var97 = 0 ; label_91:
      |                                       ^
output.c: In function ‘getHeuristicValue’:
output.c:98:3: error: ‘var1035’ undeclared (first use in this function); did you mean ‘var1034’?
   98 |   var1035 = 8 * 8 ;  var1036 = var97 < var1035 ;  var1037 = var95 [ 0 ] ;  var1038 = var1037 == var94 ;  var1039 = int var574 = var1038 ; if ( var574 ) { var96 ; var96 = var96 + 1 ; } else {  var1040 = var95 [ 0 ] ;  var1408 = var1040 == 2 ;  var1482 = 0 ; if ( var1408 ) { var1482 = 1 ; } else { }  var1409 = var1482 ;  var1410 =  var1041 = var1409 ;  var1042 = int var575 = var1041 ; if ( var575 ) { var96 ; var96 = var96 - 1 ; } else { } } var97 ; var97 = var97 + 1 ; goto label_91 ; } label_92:
      |   ^~~~~~~
      |   var1034
output.c:98:22: error: ‘var1036’ undeclared (first use in this function); did you mean ‘var1034’?
   98 |   var1035 = 8 * 8 ;  var1036 = var97 < var1035 ;  var1037 = var95 [ 0 ] ;  var1038 = var1037 == var94 ;  var1039 = int var574 = var1038 ; if ( var574 ) { var96 ; var96 = var96 + 1 ; } else {  var1040 = var95 [ 0 ] ;  var1408 = var1040 == 2 ;  var1482 = 0 ; if ( var1408 ) { var1482 = 1 ; } else { }  var1409 = var1482 ;  var1410 =  var1041 = var1409 ;  var1042 = int var575 = var1041 ; if ( var575 ) { var96 ; var96 = var96 - 1 ; } else { } } var97 ; var97 = var97 + 1 ; goto label_91 ; } label_92:
      |                      ^~~~~~~
      |                      var1034
output.c:98:51: error: ‘var1037’ undeclared (first use in this function); did you mean ‘var1034’?
   98 |   var1035 = 8 * 8 ;  var1036 = var97 < var1035 ;  var1037 = var95 [ 0 ] ;  var1038 = var1037 == var94 ;  var1039 = int var574 = var1038 ; if ( var574 ) { var96 ; var96 = var96 + 1 ; } else {  var1040 = var95 [ 0 ] ;  var1408 = var1040 == 2 ;  var1482 = 0 ; if ( var1408 ) { var1482 = 1 ; } else { }  var1409 = var1482 ;  var1410 =  var1041 = var1409 ;  var1042 = int var575 = var1041 ; if ( var575 ) { var96 ; var96 = var96 - 1 ; } else { } } var97 ; var97 = var97 + 1 ; goto label_91 ; } label_92:
      |                                                   ^~~~~~~
      |                                                   var1034
output.c:98:76: error: ‘var1038’ undeclared (first use in this function); did you mean ‘var1034’?
   98 |   var1035 = 8 * 8 ;  var1036 = var97 < var1035 ;  var1037 = var95 [ 0 ] ;  var1038 = var1037 == var94 ;  var1039 = int var574 = var1038 ; if ( var574 ) { var96 ; var96 = var96 + 1 ; } else {  var1040 = var95 [ 0 ] ;  var1408 = var1040 == 2 ;  var1482 = 0 ; if ( var1408 ) { var1482 = 1 ; } else { }  var1409 = var1482 ;  var1410 =  var1041 = var1409 ;  var1042 = int var575 = var1041 ; if ( var575 ) { var96 ; var96 = var96 - 1 ; } else { } } var97 ; var97 = var97 + 1 ; goto label_91 ; } label_92:
      |                                                                            ^~~~~~~
      |                                                                            var1034
output.c:98:106: error: ‘var1039’ undeclared (first use in this function); did you mean ‘var1034’?
   98 |   var1035 = 8 * 8 ;  var1036 = var97 < var1035 ;  var1037 = var95 [ 0 ] ;  var1038 = var1037 == var94 ;  var1039 = int var574 = var1038 ; if ( var574 ) { var96 ; var96 = var96 + 1 ; } else {  var1040 = var95 [ 0 ] ;  var1408 = var1040 == 2 ;  var1482 = 0 ; if ( var1408 ) { var1482 = 1 ; } else { }  var1409 = var1482 ;  var1410 =  var1041 = var1409 ;  var1042 = int var575 = var1041 ; if ( var575 ) { var96 ; var96 = var96 - 1 ; } else { } } var97 ; var97 = var97 + 1 ; goto label_91 ; } label_92:
      |                                                                                                          ^~~~~~~
      |                                                                                                          var1034
output.c:98:116: error: expected expression before ‘int’
   98 |   var1035 = 8 * 8 ;  var1036 = var97 < var1035 ;  var1037 = var95 [ 0 ] ;  var1038 = var1037 == var94 ;  var1039 = int var574 = var1038 ; if ( var574 ) { var96 ; var96 = var96 + 1 ; } else {  var1040 = var95 [ 0 ] ;  var1408 = var1040 == 2 ;  var1482 = 0 ; if ( var1408 ) { var1482 = 1 ; } else { }  var1409 = var1482 ;  var1410 =  var1041 = var1409 ;  var1042 = int var575 = var1041 ; if ( var575 ) { var96 ; var96 = var96 - 1 ; } else { } } var97 ; var97 = var97 + 1 ; goto label_91 ; } label_92:
      |                                                                                                                    ^~~
output.c:98:144: error: ‘var574’ undeclared (first use in this function); did you mean ‘var974’?
   98 |   var1035 = 8 * 8 ;  var1036 = var97 < var1035 ;  var1037 = var95 [ 0 ] ;  var1038 = var1037 == var94 ;  var1039 = int var574 = var1038 ; if ( var574 ) { var96 ; var96 = var96 + 1 ; } else {  var1040 = var95 [ 0 ] ;  var1408 = var1040 == 2 ;  var1482 = 0 ; if ( var1408 ) { var1482 = 1 ; } else { }  var1409 = var1482 ;  var1410 =  var1041 = var1409 ;  var1042 = int var575 = var1041 ; if ( var575 ) { var96 ; var96 = var96 - 1 ; } else { } } var97 ; var97 = var97 + 1 ; goto label_91 ; } label_92:
      |                                                                                                                                                ^~~~~~
      |                                                                                                                                                var974
output.c:98:193: error: ‘var1040’ undeclared (first use in this function); did you mean ‘var1020’?
   98 |   var1035 = 8 * 8 ;  var1036 = var97 < var1035 ;  var1037 = var95 [ 0 ] ;  var1038 = var1037 == var94 ;  var1039 = int var574 = var1038 ; if ( var574 ) { var96 ; var96 = var96 + 1 ; } else {  var1040 = var95 [ 0 ] ;  var1408 = var1040 == 2 ;  var1482 = 0 ; if ( var1408 ) { var1482 = 1 ; } else { }  var1409 = var1482 ;  var1410 =  var1041 = var1409 ;  var1042 = int var575 = var1041 ; if ( var575 ) { var96 ; var96 = var96 - 1 ; } else { } } var97 ; var97 = var97 + 1 ; goto label_91 ; } label_92:
      |                                                                                                                                                                                                 ^~~~~~~
      |                                                                                                                                                                                                 var1020
output.c:98:218: error: ‘var1408’ undeclared (first use in this function); did you mean ‘var1405’?
   98 |   var1035 = 8 * 8 ;  var1036 = var97 < var1035 ;  var1037 = var95 [ 0 ] ;  var1038 = var1037 == var94 ;  var1039 = int var574 = var1038 ; if ( var574 ) { var96 ; var96 = var96 + 1 ; } else {  var1040 = var95 [ 0 ] ;  var1408 = var1040 == 2 ;  var1482 = 0 ; if ( var1408 ) { var1482 = 1 ; } else { }  var1409 = var1482 ;  var1410 =  var1041 = var1409 ;  var1042 = int var575 = var1041 ; if ( var575 ) { var96 ; var96 = var96 - 1 ; } else { } } var97 ; var97 = var97 + 1 ; goto label_91 ; } label_92:
      |                                                                                                                                                                                                                          ^~~~~~~
      |                                                                                                                                                                                                                          var1405
output.c:98:244: error: ‘var1482’ undeclared (first use in this function); did you mean ‘var1480’?
   98 |   var1035 = 8 * 8 ;  var1036 = var97 < var1035 ;  var1037 = var95 [ 0 ] ;  var1038 = var1037 == var94 ;  var1039 = int var574 = var1038 ; if ( var574 ) { var96 ; var96 = var96 + 1 ; } else {  var1040 = var95 [ 0 ] ;  var1408 = var1040 == 2 ;  var1482 = 0 ; if ( var1408 ) { var1482 = 1 ; } else { }  var1409 = var1482 ;  var1410 =  var1041 = var1409 ;  var1042 = int var575 = var1041 ; if ( var575 ) { var96 ; var96 = var96 - 1 ; } else { } } var97 ; var97 = var97 + 1 ; goto label_91 ; } label_92:
      |                                                                                                                                                                                                                                                    ^~~~~~~
      |                                                                                                                                                                                                                                                    var1480
output.c:98:301: error: ‘var1409’ undeclared (first use in this function); did you mean ‘var1405’?
   98 |   var1035 = 8 * 8 ;  var1036 = var97 < var1035 ;  var1037 = var95 [ 0 ] ;  var1038 = var1037 == var94 ;  var1039 = int var574 = var1038 ; if ( var574 ) { var96 ; var96 = var96 + 1 ; } else {  var1040 = var95 [ 0 ] ;  var1408 = var1040 == 2 ;  var1482 = 0 ; if ( var1408 ) { var1482 = 1 ; } else { }  var1409 = var1482 ;  var1410 =  var1041 = var1409 ;  var1042 = int var575 = var1041 ; if ( var575 ) { var96 ; var96 = var96 - 1 ; } else { } } var97 ; var97 = var97 + 1 ; goto label_91 ; } label_92:
      |                                                                                                                                                                                                                                                                                                             ^~~~~~~
      |                                                                                                                                                                                                                                                                                                             var1405
output.c:98:322: error: ‘var1410’ undeclared (first use in this function); did you mean ‘var1480’?
   98 |   var1035 = 8 * 8 ;  var1036 = var97 < var1035 ;  var1037 = var95 [ 0 ] ;  var1038 = var1037 == var94 ;  var1039 = int var574 = var1038 ; if ( var574 ) { var96 ; var96 = var96 + 1 ; } else {  var1040 = var95 [ 0 ] ;  var1408 = var1040 == 2 ;  var1482 = 0 ; if ( var1408 ) { var1482 = 1 ; } else { }  var1409 = var1482 ;  var1410 =  var1041 = var1409 ;  var1042 = int var575 = var1041 ; if ( var575 ) { var96 ; var96 = var96 - 1 ; } else { } } var97 ; var97 = var97 + 1 ; goto label_91 ; } label_92:
      |                                                                                                                                                                                                                                                                                                                                  ^~~~~~~
      |                                                                                                                                                                                                                                                                                                                                  var1480
output.c:98:333: error: ‘var1041’ undeclared (first use in this function); did you mean ‘var1031’?
   98 |   var1035 = 8 * 8 ;  var1036 = var97 < var1035 ;  var1037 = var95 [ 0 ] ;  var1038 = var1037 == var94 ;  var1039 = int var574 = var1038 ; if ( var574 ) { var96 ; var96 = var96 + 1 ; } else {  var1040 = var95 [ 0 ] ;  var1408 = var1040 == 2 ;  var1482 = 0 ; if ( var1408 ) { var1482 = 1 ; } else { }  var1409 = var1482 ;  var1410 =  var1041 = var1409 ;  var1042 = int var575 = var1041 ; if ( var575 ) { var96 ; var96 = var96 - 1 ; } else { } } var97 ; var97 = var97 + 1 ; goto label_91 ; } label_92:
      |                                                                                                                                                                                                                                                                                                                                             ^~~~~~~
      |                                                                                                                                                                                                                                                                                                                                             var1031
output.c:98:354: error: ‘var1042’ undeclared (first use in this function); did you mean ‘var1032’?
   98 |   var1035 = 8 * 8 ;  var1036 = var97 < var1035 ;  var1037 = var95 [ 0 ] ;  var1038 = var1037 == var94 ;  var1039 = int var574 = var1038 ; if ( var574 ) { var96 ; var96 = var96 + 1 ; } else {  var1040 = var95 [ 0 ] ;  var1408 = var1040 == 2 ;  var1482 = 0 ; if ( var1408 ) { var1482 = 1 ; } else { }  var1409 = var1482 ;  var1410 =  var1041 = var1409 ;  var1042 = int var575 = var1041 ; if ( var575 ) { var96 ; var96 = var96 - 1 ; } else { } } var97 ; var97 = var97 + 1 ; goto label_91 ; } label_92:
      |                                                                                                                                                                                                                                                                                                                                                                  ^~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                  var1032
output.c:98:364: error: expected expression before ‘int’
   98 |   var1035 = 8 * 8 ;  var1036 = var97 < var1035 ;  var1037 = var95 [ 0 ] ;  var1038 = var1037 == var94 ;  var1039 = int var574 = var1038 ; if ( var574 ) { var96 ; var96 = var96 + 1 ; } else {  var1040 = var95 [ 0 ] ;  var1408 = var1040 == 2 ;  var1482 = 0 ; if ( var1408 ) { var1482 = 1 ; } else { }  var1409 = var1482 ;  var1410 =  var1041 = var1409 ;  var1042 = int var575 = var1041 ; if ( var575 ) { var96 ; var96 = var96 - 1 ; } else { } } var97 ; var97 = var97 + 1 ; goto label_91 ; } label_92:
      |                                                                                                                                                                                                                                                                                                                                                                            ^~~
output.c:98:392: error: ‘var575’ undeclared (first use in this function); did you mean ‘var975’?
   98 |   var1035 = 8 * 8 ;  var1036 = var97 < var1035 ;  var1037 = var95 [ 0 ] ;  var1038 = var1037 == var94 ;  var1039 = int var574 = var1038 ; if ( var574 ) { var96 ; var96 = var96 + 1 ; } else {  var1040 = var95 [ 0 ] ;  var1408 = var1040 == 2 ;  var1482 = 0 ; if ( var1408 ) { var1482 = 1 ; } else { }  var1409 = var1482 ;  var1410 =  var1041 = var1409 ;  var1042 = int var575 = var1041 ; if ( var575 ) { var96 ; var96 = var96 - 1 ; } else { } } var97 ; var97 = var97 + 1 ; goto label_91 ; } label_92:
      |                                                                                                                                                                                                                                                                                                                                                                                                        ^~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                        var975
output.c: At top level:
output.c:99:17: error: ‘var96’ undeclared here (not in a function); did you mean ‘var92’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |                 ^~~~~
      |                 var92
output.c:99:25: error: expected identifier or ‘(’ before ‘return’
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |                         ^~~~~~
output.c:99:41: error: expected identifier or ‘(’ before ‘}’ token
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |                                         ^
output.c: In function ‘findBestChild’:
output.c:99:229: error: ‘var0’ undeclared (first use in this function); did you mean ‘var90’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |                                                                                                                                                                                                                                     ^~~~
      |                                                                                                                                                                                                                                     var90
output.c:99:427: error: expected ‘)’ before ‘access’
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                   ~       ^~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                                           )
output.c:99:421: error: passing argument 1 of ‘printBoard’ from incompatible pointer type [-Wincompatible-pointer-types]
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                     ^~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                                     |
      |                                                                                                                                                                                                                                                                                                                                                                                                                                     int **
output.c:8:676: note: expected ‘int *’ but argument is of type ‘int **’
    8 |  }  var645 = 8 >> 1 ;  var646 = var645 - 1 ;  var647 = int var7 = var646 ;  var648 = 8 >> 1 ;  var649 = var648 - 1 ;  var650 = int var8 = var649 ;  var651 = var7 * 8 ;  var652 = var651 + var8 ;  var653 = var4 [ 0 ] ;  var654 = var653 = 1 ;  var655 = var7 * 8 ;  var656 = var655 + var8 ;  var657 = var656 + 1 ;  var658 = var4 [ 0 ] ;  var659 = var658 = 0 ;  var660 = var7 + 1 ;  var661 = var660 * 8 ;  var662 = var661 + var8 ;  var663 = var4 [ 0 ] ;  var664 = var663 = 0 ;  var665 = var7 + 1 ;  var666 = var665 * 8 ;  var667 = var666 + var8 ;  var668 = var667 + 1 ;  var669 = var4 [ 0 ] ;  var670 = var669 = 1 ; int * var227 = var4 ; return var227 ; } void printBoard ( int * var10 ) { int var11 = 0 ; { int var12 = 0 ; label_5:
      |~~~~~~^~~~~
output.c:99:453: error: ‘var1043’ undeclared (first use in this function); did you mean ‘var104’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                     ^~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                     var104
output.c:99:473: error: ‘var1044’ undeclared (first use in this function); did you mean ‘var104’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         ^~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         var104
output.c:99:503: error: ‘var1045’ undeclared (first use in this function); did you mean ‘var105’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~~~
      |var105
output.c:99:513: error: expected expression before ‘int’
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~
output.c:99:541: error: ‘var578’ undeclared (first use in this function); did you mean ‘var577’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~~
      |var577
output.c:99:730: error: ‘var1046’ undeclared (first use in this function); did you mean ‘var106’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~~~
      |var106
output.c:99:754: error: ‘var1047’ undeclared (first use in this function); did you mean ‘var107’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ^~~~~~~
      |var107
output.c:99:780: error: ‘var1048’ undeclared (first use in this function); did you mean ‘var108’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~~~
      |var108
output.c:99:882: error: ‘var1049’ undeclared (first use in this function); did you mean ‘var104’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~~~
      |var104
output.c:99:906: error: ‘var1050’ undeclared (first use in this function); did you mean ‘var105’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~~~
      |var105
output.c:99:937: error: ‘var1051’ undeclared (first use in this function); did you mean ‘var105’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~~~
      |var105
output.c:99:947: error: expected expression before ‘int’
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   ^~~
output.c:99:975: error: ‘var580’ undeclared (first use in this function); did you mean ‘var980’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~~
      |var980
output.c:99:1033: error: expected ‘)’ before ‘access’
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~               ^~~~~~~
      |
output.c:99:1027: error: passing argument 2 of ‘getHeuristicValue’ from incompatible pointer type [-Wincompatible-pointer-types]
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   ^~~~~~
      ||
      |int **
output.c:97:83: note: expected ‘int *’ but argument is of type ‘int **’
   97 |  int var238 = var87 ; return var238 ; } int getHeuristicValue ( int var94 , int * var95 ) { int var96 = 0 ; { int var97 = 0 ; label_91:
      |                                                                             ~~~~~~^~~~~
output.c:99:1186: error: ‘var1052’ undeclared (first use in this function); did you mean ‘var105’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  var105
output.c:99:1212: error: ‘var1053’ undeclared (first use in this function); did you mean ‘var105’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            var105
output.c:99:1340: error: expected ‘)’ before ‘access’
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ~       ^~~~~~~
      |
output.c:99:1334: error: passing argument 1 of ‘getValidMoves’ from incompatible pointer type [-Wincompatible-pointer-types]
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~~
      ||
      |int **
output.c:41:153: note: expected ‘int *’ but argument is of type ‘int **’
   41 |  }  var765 = var21 - 1 ;  var766 = var22 [ 0 ] ;  var767 = var766 = '\0' ; printf ( "%s\n" , var22 ) ; ; free ( var22 ) ; ; } int getValidMoves ( int * var47 , int * var48 , int var49 ) { int var50 = 0 ; int var51 = var49 ^ 1 ; { int var52 = 0 ; label_35:
      |                                                                                                                                                   ~~~~~~^~~~~
output.c:99:1318: error: too few arguments to function ‘getValidMoves’
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ^~~~~~~~~~~~~
output.c:41:131: note: declared here
   41 |  }  var765 = var21 - 1 ;  var766 = var22 [ 0 ] ;  var767 = var766 = '\0' ; printf ( "%s\n" , var22 ) ; ; free ( var22 ) ; ; } int getValidMoves ( int * var47 , int * var48 , int var49 ) { int var50 = 0 ; int var51 = var49 ^ 1 ; { int var52 = 0 ; label_35:
      |                                                                                                                                   ^~~~~~~~~~~~~
output.c:99:1512: error: expected ‘;’ before ‘var105’
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~~~
      |
output.c:99:1520: error: expected statement before ‘)’ token
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |
output.c:99:1522: error: expected expression before ‘=’ token
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |
output.c:99:1572: error: ‘var1054’ undeclared (first use in this function); did you mean ‘var105’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~~~
      |var105
output.c:99:1596: error: ‘var1055’ undeclared (first use in this function); did you mean ‘var105’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~~~
      |var105
output.c:99:1622: error: ‘var1056’ undeclared (first use in this function); did you mean ‘var106’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~~~
      |var106
output.c:99:1633: error: ‘var1057’ undeclared (first use in this function); did you mean ‘var107’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~~~
      |var107
output.c:99:1652: error: ‘var1058’ undeclared (first use in this function); did you mean ‘var108’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~~~
      |var108
output.c:99:1674: error: stray ‘#’ in program
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |
output.c:99:1669: error: ‘cast’ undeclared (first use in this function)
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~
output.c:99:1673: error: expected ‘;’ before ‘TYPE’
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         ;
output.c:99:1683: error: ‘var1059’ undeclared (first use in this function); did you mean ‘var105’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~~~
      |var105
output.c:99:1714: error: ‘var1060’ undeclared (first use in this function); did you mean ‘var106’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~~~
      |var106
output.c:99:1749: error: expected ‘)’ before ‘access’
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~                 ^~~~~~~
      |
output.c:99:1724: error: too few arguments to function ‘memcpy’
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~~
In file included from output.c:1:
/usr/include/string.h:43:14: note: declared here
   43 | extern void *memcpy (void *__restrict __dest, const void *__restrict __src,
      |              ^~~~~~
output.c:99:1785: error: ‘var1061’ undeclared (first use in this function); did you mean ‘var106’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~~~
      |var106
output.c:99:1809: error: ‘var1062’ undeclared (first use in this function); did you mean ‘var106’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 var106
output.c:99:1835: error: ‘var1063’ undeclared (first use in this function); did you mean ‘var106’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~~~
      |var106
output.c:99:1855: error: ‘var119’ undeclared (first use in this function); did you mean ‘var116’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~~
      |var116
output.c:99:1995: error: ‘var1064’ undeclared (first use in this function); did you mean ‘var106’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~~~
      |var106
output.c:99:2019: error: ‘var1065’ undeclared (first use in this function); did you mean ‘var106’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   var106
output.c:99:2045: error: ‘var1066’ undeclared (first use in this function); did you mean ‘var106’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ^~~~~~~
      |var106
output.c:99:2069: error: ‘var1067’ undeclared (first use in this function); did you mean ‘var107’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~~~
      |var107
output.c:99:2095: error: ‘var1068’ undeclared (first use in this function); did you mean ‘var108’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~~~
      |var108
output.c:99:2122: error: ‘var1069’ undeclared (first use in this function); did you mean ‘var106’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~~~
      |var106
output.c:99:2201: error: ‘var1070’ undeclared (first use in this function); did you mean ‘var107’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~~~
      |var107
output.c:99:2225: error: ‘var1071’ undeclared (first use in this function); did you mean ‘var107’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^~~~~~~
      |var107
output.c:99:2251: error: ‘var1072’ undeclared (first use in this function); did you mean ‘var107’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~~~
      |var107
output.c:99:2261: error: expected expression before ‘int’
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~
output.c:99:2297: error: ‘var123’ undeclared (first use in this function); did you mean ‘var122’?
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |~~~~~
      |var122
output.c:100:3: error: ‘var1073’ undeclared (first use in this function); did you mean ‘var107’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |   ^~~~~~~
      |   var107
output.c:100:29: error: ‘var1074’ undeclared (first use in this function); did you mean ‘var107’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                             ^~~~~~~
      |                             var107
output.c:100:48: error: ‘var1075’ undeclared (first use in this function); did you mean ‘var107’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                                                ^~~~~~~
      |                                                var107
output.c:100:79: error: ‘var1076’ undeclared (first use in this function); did you mean ‘var107’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                                                                               ^~~~~~~
      |                                                                               var107
output.c:100:105: error: ‘var1077’ undeclared (first use in this function); did you mean ‘var107’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                                                                                                         ^~~~~~~
      |                                                                                                         var107
output.c:100:131: error: ‘var1078’ undeclared (first use in this function); did you mean ‘var108’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                                                                                                                                   ^~~~~~~
      |                                                                                                                                   var108
output.c:100:158: error: ‘var1079’ undeclared (first use in this function); did you mean ‘var107’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                                                                                                                                                              ^~~~~~~
      |                                                                                                                                                              var107
output.c:100:184: error: ‘var1080’ undeclared (first use in this function); did you mean ‘var108’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                                                                                                                                                                                        ^~~~~~~
      |                                                                                                                                                                                        var108
output.c:100:194: error: expected expression before ‘int’
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                                                                                                                                                                                                  ^~~
output.c:100:222: error: ‘var584’ undeclared (first use in this function); did you mean ‘var583’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                                                                                                                                                                                                                              ^~~~~~
      |                                                                                                                                                                                                                              var583
output.c:100:234: error: ‘var1081’ undeclared (first use in this function); did you mean ‘var108’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                                                                                                                                                                                                                                          ^~~~~~~
      |                                                                                                                                                                                                                                          var108
output.c:100:258: error: ‘var1082’ undeclared (first use in this function); did you mean ‘var108’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                                                                                                                                                                                                                                                                  ^~~~~~~
      |                                                                                                                                                                                                                                                                  var108
output.c:100:284: error: ‘var1083’ undeclared (first use in this function); did you mean ‘var108’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                                                                                                                                                                                                                                                                                            ^~~~~~~
      |                                                                                                                                                                                                                                                                                            var108
output.c:100:314: error: ‘var1084’ undeclared (first use in this function); did you mean ‘var108’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                                                                                                                                                                                                                                                                                                                          ^~~~~~~
      |                                                                                                                                                                                                                                                                                                                          var108
output.c:100:338: error: ‘var1085’ undeclared (first use in this function); did you mean ‘var108’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                                                                                                                                                                                                                                                                                                                                                  ^~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                  var108
output.c:100:364: error: ‘var1086’ undeclared (first use in this function); did you mean ‘var108’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                                                                                                                                                                                                                                                                                                                                                                            ^~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                            var108
output.c:100:375: error: ‘var1087’ undeclared (first use in this function); did you mean ‘var108’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                                                                                                                                                                                                                                                                                                                                                                                       ^~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                       var108
output.c:100:394: error: ‘var1088’ undeclared (first use in this function); did you mean ‘var108’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                                                                                                                                                                                                                                                                                                                                                                                                          ^~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                          var108
output.c:100:416: error: stray ‘#’ in program
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                ^
output.c:100:415: error: expected ‘;’ before ‘TYPE’
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                                                                                                                                                                                                                                                                                                                                                                                                                               ^ ~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                               ;
output.c:100:425: error: ‘var1089’ undeclared (first use in this function); did you mean ‘var108’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                         ^~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                                         var108
output.c:100:456: error: ‘var1090’ undeclared (first use in this function); did you mean ‘var100’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ^~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                        var100
output.c:100:491: error: expected ‘)’ before ‘access’
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         ~                 ^~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           )
output.c:100:466: error: too few arguments to function ‘memcpy’
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ^~~~~~
/usr/include/string.h:43:14: note: declared here
   43 | extern void *memcpy (void *__restrict __dest, const void *__restrict __src,
      |              ^~~~~~
output.c:100:527: error: ‘var1091’ undeclared (first use in this function); did you mean ‘var101’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var101
output.c:100:551: error: ‘var1092’ undeclared (first use in this function); did you mean ‘var102’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var102
output.c:100:577: error: ‘var1093’ undeclared (first use in this function); did you mean ‘var103’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 var103
output.c:100:616: error: expected ‘)’ before ‘access’
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~                 ^~~~~~~
      |
output.c:100:610: error: passing argument 2 of ‘placePiece’ makes integer from pointer without a cast [-Wint-conversion]
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~
      ||
      |int *
output.c:65:39: note: expected ‘int’ but argument is of type ‘int *’
   65 |  } int placePiece ( int * var84 , int var85 , int var86 ) { int var87 = 0 ; int var88 = var86 ^ 1 ; int var89 = var85 ; int var90 = var89 - 8 ; int var91 = var90 ; int var92 = 0 ; var84 [ 0 ] var85 ) = var86 ; label_59:
      |                                   ~~~~^~~~~
output.c:100:587: error: too few arguments to function ‘placePiece’
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~~~~
output.c:65:8: note: declared here
   65 |  } int placePiece ( int * var84 , int var85 , int var86 ) { int var87 = 0 ; int var88 = var86 ^ 1 ; int var89 = var85 ; int var90 = var89 - 8 ; int var91 = var90 ; int var92 = 0 ; var84 [ 0 ] var85 ) = var86 ; label_59:
      |        ^~~~~~~~~~
output.c:100:651: error: ‘var1094’ undeclared (first use in this function); did you mean ‘var104’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var104
output.c:100:677: error: ‘var1095’ undeclared (first use in this function); did you mean ‘var105’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     ^~~~~~~
      |var105
output.c:100:927: error: ‘var1096’ undeclared (first use in this function); did you mean ‘var106’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var106
output.c:100:956: error: ‘var1331’ undeclared (first use in this function); did you mean ‘var1031’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var1031
output.c:100:975: error: ‘var121’ undeclared (first use in this function); did you mean ‘var125’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~
      |var125
output.c:100:1040: error: ‘var1097’ undeclared (first use in this function); did you mean ‘var107’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var107
output.c:100:1061: error: ‘var1098’ undeclared (first use in this function); did you mean ‘var108’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     ^~~~~~~
      |var108
output.c:100:1071: error: expected expression before ‘int’
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~
output.c:100:1099: error: ‘var586’ undeclared (first use in this function); did you mean ‘var585’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ^~~~~~
      |var585
output.c:100:1138: error: ‘var1483’ undeclared (first use in this function); did you mean ‘var1480’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var1480
output.c:100:1194: error: ‘var1099’ undeclared (first use in this function); did you mean ‘var1019’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var1019
output.c:100:1215: error: ‘var1100’ undeclared (first use in this function); did you mean ‘var100’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var100
output.c:100:1244: error: ‘var1332’ undeclared (first use in this function); did you mean ‘var1032’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var1032
output.c:100:1329: error: ‘var1101’ undeclared (first use in this function); did you mean ‘var101’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var101
output.c:100:1350: error: ‘var1102’ undeclared (first use in this function); did you mean ‘var102’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var102
output.c:100:1360: error: expected expression before ‘int’
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~
output.c:100:1388: error: ‘var587’ undeclared (first use in this function); did you mean ‘var585’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ^~~~~~
      |var585
output.c:100:1433: error: ‘var1103’ undeclared (first use in this function); did you mean ‘var103’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var103
output.c:100:1459: error: ‘var1104’ undeclared (first use in this function); did you mean ‘var104’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   ^~~~~~~
      |var104
output.c:100:1485: error: ‘var1105’ undeclared (first use in this function); did you mean ‘var105’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var105
output.c:100:1512: error: ‘var1106’ undeclared (first use in this function); did you mean ‘var116’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ^~~~~~~
      |var116
output.c:100:1554: error: ‘var1’ undeclared (first use in this function); did you mean ‘var91’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~
      |var91
output.c:100:1620: error: ‘var1107’ undeclared (first use in this function); did you mean ‘var107’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var107
output.c:100:1644: error: ‘var1108’ undeclared (first use in this function); did you mean ‘var108’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var108
output.c:100:1670: error: ‘var1411’ undeclared (first use in this function); did you mean ‘var1011’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var1011
output.c:100:1701: error: ‘var1484’ undeclared (first use in this function); did you mean ‘var1404’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var1404
output.c:100:1758: error: ‘var1412’ undeclared (first use in this function); did you mean ‘var1012’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var1012
output.c:100:1779: error: ‘var1413’ undeclared (first use in this function); did you mean ‘var1473’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   var1473
output.c:100:1790: error: ‘var1109’ undeclared (first use in this function); did you mean ‘var1019’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var1019
output.c:100:1811: error: ‘var1110’ undeclared (first use in this function); did you mean ‘var1010’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   var1010
output.c:100:1821: error: expected expression before ‘int’
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~
output.c:100:1849: error: ‘var590’ undeclared (first use in this function); did you mean ‘var950’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~
      |var950
output.c:100:1899: error: ‘var1111’ undeclared (first use in this function); did you mean ‘var1011’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var1011
output.c:100:1923: error: ‘var1112’ undeclared (first use in this function); did you mean ‘var1012’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   ^~~~~~~
      |var1012
output.c:100:1949: error: ‘var1414’ undeclared (first use in this function); did you mean ‘var1404’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ^~~~~~~
      |var1404
output.c:100:1979: error: ‘var1485’ undeclared (first use in this function); did you mean ‘var1405’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var1405
output.c:100:2036: error: ‘var1415’ undeclared (first use in this function); did you mean ‘var1405’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var1405
output.c:100:2057: error: ‘var1416’ undeclared (first use in this function); did you mean ‘var116’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var116
output.c:100:2068: error: ‘var1113’ undeclared (first use in this function); did you mean ‘var1313’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var1313
output.c:100:2089: error: ‘var1114’ undeclared (first use in this function); did you mean ‘var1014’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var1014
output.c:100:2099: error: expected expression before ‘int’
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~
output.c:100:2127: error: ‘var592’ undeclared (first use in this function); did you mean ‘var591’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~
      |var591
output.c:100:2239: error: ‘var1115’ undeclared (first use in this function); did you mean ‘var1015’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var1015
output.c:100:2263: error: ‘var1116’ undeclared (first use in this function); did you mean ‘var116’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var116
output.c:100:2289: error: ‘var1117’ undeclared (first use in this function); did you mean ‘var1017’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 var1017
output.c:100:2464: error: ‘var1118’ undeclared (first use in this function); did you mean ‘var1018’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var1018
output.c:100:2488: error: ‘var1119’ undeclared (first use in this function); did you mean ‘var1019’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var1019
output.c:100:2514: error: ‘var1417’ undeclared (first use in this function); did you mean ‘var1017’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ^~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  var1017
output.c:100:2544: error: ‘var1486’ undeclared (first use in this function); did you mean ‘var1480’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var1480
output.c:100:2601: error: ‘var1418’ undeclared (first use in this function); did you mean ‘var1018’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         ^~~~~~~
      |var1018
output.c:100:2622: error: ‘var1419’ undeclared (first use in this function); did you mean ‘var1019’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var1019
output.c:100:2633: error: ‘var1120’ undeclared (first use in this function); did you mean ‘var1020’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var1020
output.c:100:2654: error: ‘var1121’ undeclared (first use in this function); did you mean ‘var1021’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var1021
output.c:100:2664: error: expected expression before ‘int’
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~
output.c:100:2692: error: ‘var594’ undeclared (first use in this function); did you mean ‘var591’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~
      |var591
output.c:100:2804: error: ‘var1122’ undeclared (first use in this function); did you mean ‘var122’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var122
output.c:100:2828: error: ‘var1123’ undeclared (first use in this function); did you mean ‘var1023’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var1023
output.c:100:2854: error: ‘var1124’ undeclared (first use in this function); did you mean ‘var1024’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var1024
output.c:100:3066: error: ‘var1125’ undeclared (first use in this function); did you mean ‘var1325’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var1325
output.c:100:3092: error: ‘var1126’ undeclared (first use in this function); did you mean ‘var116’?
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |~~~~~~
      |var116
output.c: At top level:
output.c:100:3162: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘:’ token
  100 |   var1073 = var101 [ 0 ] ;  var1074 = 8 * 8 ;  var1075 = var1073 < var1074 ;  var1076 = var103 [ 0 ] ;  var1077 = var101 [ 0 ] ;  var1078 = var1076 [ 0 ] ;  var1079 = var1078 == 1 ;  var1080 = int var584 = var1079 ; if ( var584 ) {  var1081 = var105 + 1 ;  var1082 = var108 [ 0 ] ;  var1083 = var1082 = var123 ;  var1084 = var105 + 1 ;  var1085 = var102 [ 0 ] ;  var1086 =  var1087 = 8 * 8 ;  var1088 = sizeof cast #TYPE ;  var1089 = var1087 * var1088 ;  var1090 = memcpy ( var1085 , var102 access ( var105 ) , var1089 ) ; ;  var1091 = var105 + 1 ;  var1092 = var102 [ 0 ] ;  var1093 = placePiece ( var1092 , var101 access ( var105 ) , var100 ) ; ;  var1094 = var107 [ 0 ] ;  var1095 = var1094 ; var1094 = var1094 + 1 ; int var125 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ; int var585 = var122 == var123 ; if ( var585 ) { var122 = var125 ; } else {  var1096 = var125 > var122 ;  var1331 = 0 ; if ( var121 ) { if ( var1096 ) { var1331 = 1 ; } else { } } else { }  var1097 = var1331 ;  var1098 = int var586 = var1097 ; if ( var586 ) { var122 = var125 ; } else {  var1483 = 0 ; if ( var121 ) { var1483 = 1 ; } else { }  var1099 = var1483 ;  var1100 = var125 < var122 ;  var1332 = 0 ; if ( var1099 ) { if ( var1100 ) { var1332 = 1 ; } else { } } else { }  var1101 = var1332 ;  var1102 = int var587 = var1101 ; if ( var587 ) { var122 = var125 ; } else { } } }  var1103 = var103 [ 0 ] ;  var1104 = var101 [ 0 ] ;  var1105 = var1103 [ 0 ] ;  var1106 = var1105 = var125 ; int var588 = var1 ; if ( var588 ) { int var589 = var105 > 0 ; if ( var589 ) {  var1107 = var105 - 1 ;  var1108 = var108 [ 0 ] ;  var1411 = var1108 == var123 ;  var1484 = 0 ; if ( var1411 ) { var1484 = 1 ; } else { }  var1412 = var1484 ;  var1413 =  var1109 = var1412 ;  var1110 = int var590 = var1109 ; if ( var590 ) { int var591 = var121 ; if ( var591 ) {  var1111 = var105 - 1 ;  var1112 = var108 [ 0 ] ;  var1414 = var122 < var1112 ;  var1485 = 0 ; if ( var1414 ) { var1485 = 1 ; } else { }  var1415 = var1485 ;  var1416 =  var1113 = var1415 ;  var1114 = int var592 = var1113 ; if ( var592 ) { int var593 = var0 ; if ( var593 ) { printf ( "Pruned nodes at depth %d (maxLayer)\n" , var105 ) ; ;  var1115 = var105 - 1 ;  var1116 = var108 [ 0 ] ;  var1117 = printf ( "Value found (%d) was >= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1116 ) ; ; } else { } int var242 = var122 ; return var242 ; } else { } } else {  var1118 = var105 - 1 ;  var1119 = var108 [ 0 ] ;  var1417 = var122 > var1119 ;  var1486 = 0 ; if ( var1417 ) { var1486 = 1 ; } else { }  var1418 = var1486 ;  var1419 =  var1120 = var1418 ;  var1121 = int var594 = var1120 ; if ( var594 ) { int var595 = var0 ; if ( var595 ) { printf ( "Pruned nodes at depth %d (minLayer)\n" , var105 ) ; ;  var1122 = var105 - 1 ;  var1123 = var108 [ 0 ] ;  var1124 = printf ( "Value found (%d) was <= pruneValue[%d] (%d)\n" , var122 , var105 - 1 , var1123 ) ; ; } else { } int var243 = var122 ; return var243 ; } else { } } } else { } } else { } } else { } } else { }  var1125 = var101 [ 0 ] ;  var1126 = var1125 ; var1125 = var1125 + 1 ; goto label_93 ; } label_94:
      |
output.c:101:17: error: expected identifier or ‘(’ before ‘if’
  101 |   var1487 = 0 ; if ( var121 ) { var1487 = 1 ; } else { } int var596 = var1487 ; if ( var596 ) { int var128 = var129 ; int var130 = 0 - 1 ; { int var131 = 0 ; label_95:
      |                 ^~
output.c:101:49: error: expected identifier or ‘(’ before ‘else’
  101 |   var1487 = 0 ; if ( var121 ) { var1487 = 1 ; } else { } int var596 = var1487 ; if ( var596 ) { int var128 = var129 ; int var130 = 0 - 1 ; { int var131 = 0 ; label_95:
      |                                                 ^~~~
output.c:101:71: error: ‘var1487’ undeclared here (not in a function); did you mean ‘var1480’?
  101 |   var1487 = 0 ; if ( var121 ) { var1487 = 1 ; } else { } int var596 = var1487 ; if ( var596 ) { int var128 = var129 ; int var130 = 0 - 1 ; { int var131 = 0 ; label_95:
      |                                                                       ^~~~~~~
      |                                                                       var1480
output.c:101:81: error: expected identifier or ‘(’ before ‘if’
  101 |   var1487 = 0 ; if ( var121 ) { var1487 = 1 ; } else { } int var596 = var1487 ; if ( var596 ) { int var128 = var129 ; int var130 = 0 - 1 ; { int var131 = 0 ; label_95:
      |                                                                                 ^~
output.c:103:4: error: expected identifier or ‘(’ before ‘else’
  103 |  } else { }  var1140 = var105 > 0 ;  var1334 = 0 ; if ( var1 ) { if ( var1140 ) { var1334 = 1 ; } else { } } else { }  var1141 = var1334 ;  var1142 = int var598 = var1141 ; if ( var598 ) {  var1143 = var105 - 1 ;  var1144 = var108 [ 0 ] ;  var1145 = var1144 == var123 ;  var1146 = var105 - 1 ;  var1147 = var108 [ 0 ] ;  var1148 = var128 > var1147 ;  var1489 = 0 ; if ( var1145 ) { var1489 = 1 ; } else { }  var1276 = var1489 ;  var1490 = 0 ; if ( var1148 ) { var1490 = 1 ; } else { }  var1277 = var1490 ;  var1335 = 0 ; if ( var1276 ) { if ( var1277 ) { var1335 = 1 ; } else { } } else { }  var1278 = var1335 ;  var1491 = 0 ; if ( var1278 ) { var1491 = 1 ; } else { }  var1279 = var1491 ;  var1280 =  var1149 = var1279 ;  var1150 = int var599 = var1149 ; if ( var599 ) {  var1151 = var105 - 1 ;  var1152 = var108 [ 0 ] ;  var1153 = var1152 = var128 ; int var600 = var0 ; if ( var600 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var128 ) ; ; } else { } } else { } } else { } int var601 = var0 ; if ( var601 ) { printf ( "Min child found at depth %d = %d: move %d\n" , var105 , var128 , var130 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var244 = var128 ; return var244 ; } else { int var134 = var123 ; int var135 = 0 - 1 ; { int var136 = 0 ; label_97:
      |    ^~~~
output.c:103:14: warning: data definition has no type or storage class
  103 |  } else { }  var1140 = var105 > 0 ;  var1334 = 0 ; if ( var1 ) { if ( var1140 ) { var1334 = 1 ; } else { } } else { }  var1141 = var1334 ;  var1142 = int var598 = var1141 ; if ( var598 ) {  var1143 = var105 - 1 ;  var1144 = var108 [ 0 ] ;  var1145 = var1144 == var123 ;  var1146 = var105 - 1 ;  var1147 = var108 [ 0 ] ;  var1148 = var128 > var1147 ;  var1489 = 0 ; if ( var1145 ) { var1489 = 1 ; } else { }  var1276 = var1489 ;  var1490 = 0 ; if ( var1148 ) { var1490 = 1 ; } else { }  var1277 = var1490 ;  var1335 = 0 ; if ( var1276 ) { if ( var1277 ) { var1335 = 1 ; } else { } } else { }  var1278 = var1335 ;  var1491 = 0 ; if ( var1278 ) { var1491 = 1 ; } else { }  var1279 = var1491 ;  var1280 =  var1149 = var1279 ;  var1150 = int var599 = var1149 ; if ( var599 ) {  var1151 = var105 - 1 ;  var1152 = var108 [ 0 ] ;  var1153 = var1152 = var128 ; int var600 = var0 ; if ( var600 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var128 ) ; ; } else { } } else { } } else { } int var601 = var0 ; if ( var601 ) { printf ( "Min child found at depth %d = %d: move %d\n" , var105 , var128 , var130 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var244 = var128 ; return var244 ; } else { int var134 = var123 ; int var135 = 0 - 1 ; { int var136 = 0 ; label_97:
      |              ^~~~~~~
output.c:103:14: error: type defaults to ‘int’ in declaration of ‘var1140’ [-Wimplicit-int]
output.c:103:24: error: ‘var105’ undeclared here (not in a function); did you mean ‘var1405’?
  103 |  } else { }  var1140 = var105 > 0 ;  var1334 = 0 ; if ( var1 ) { if ( var1140 ) { var1334 = 1 ; } else { } } else { }  var1141 = var1334 ;  var1142 = int var598 = var1141 ; if ( var598 ) {  var1143 = var105 - 1 ;  var1144 = var108 [ 0 ] ;  var1145 = var1144 == var123 ;  var1146 = var105 - 1 ;  var1147 = var108 [ 0 ] ;  var1148 = var128 > var1147 ;  var1489 = 0 ; if ( var1145 ) { var1489 = 1 ; } else { }  var1276 = var1489 ;  var1490 = 0 ; if ( var1148 ) { var1490 = 1 ; } else { }  var1277 = var1490 ;  var1335 = 0 ; if ( var1276 ) { if ( var1277 ) { var1335 = 1 ; } else { } } else { }  var1278 = var1335 ;  var1491 = 0 ; if ( var1278 ) { var1491 = 1 ; } else { }  var1279 = var1491 ;  var1280 =  var1149 = var1279 ;  var1150 = int var599 = var1149 ; if ( var599 ) {  var1151 = var105 - 1 ;  var1152 = var108 [ 0 ] ;  var1153 = var1152 = var128 ; int var600 = var0 ; if ( var600 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var128 ) ; ; } else { } } else { } } else { } int var601 = var0 ; if ( var601 ) { printf ( "Min child found at depth %d = %d: move %d\n" , var105 , var128 , var130 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var244 = var128 ; return var244 ; } else { int var134 = var123 ; int var135 = 0 - 1 ; { int var136 = 0 ; label_97:
      |                        ^~~~~~
      |                        var1405
output.c:103:38: warning: data definition has no type or storage class
  103 |  } else { }  var1140 = var105 > 0 ;  var1334 = 0 ; if ( var1 ) { if ( var1140 ) { var1334 = 1 ; } else { } } else { }  var1141 = var1334 ;  var1142 = int var598 = var1141 ; if ( var598 ) {  var1143 = var105 - 1 ;  var1144 = var108 [ 0 ] ;  var1145 = var1144 == var123 ;  var1146 = var105 - 1 ;  var1147 = var108 [ 0 ] ;  var1148 = var128 > var1147 ;  var1489 = 0 ; if ( var1145 ) { var1489 = 1 ; } else { }  var1276 = var1489 ;  var1490 = 0 ; if ( var1148 ) { var1490 = 1 ; } else { }  var1277 = var1490 ;  var1335 = 0 ; if ( var1276 ) { if ( var1277 ) { var1335 = 1 ; } else { } } else { }  var1278 = var1335 ;  var1491 = 0 ; if ( var1278 ) { var1491 = 1 ; } else { }  var1279 = var1491 ;  var1280 =  var1149 = var1279 ;  var1150 = int var599 = var1149 ; if ( var599 ) {  var1151 = var105 - 1 ;  var1152 = var108 [ 0 ] ;  var1153 = var1152 = var128 ; int var600 = var0 ; if ( var600 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var128 ) ; ; } else { } } else { } } else { } int var601 = var0 ; if ( var601 ) { printf ( "Min child found at depth %d = %d: move %d\n" , var105 , var128 , var130 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var244 = var128 ; return var244 ; } else { int var134 = var123 ; int var135 = 0 - 1 ; { int var136 = 0 ; label_97:
      |                                      ^~~~~~~
output.c:103:38: error: type defaults to ‘int’ in declaration of ‘var1334’ [-Wimplicit-int]
output.c:103:52: error: expected identifier or ‘(’ before ‘if’
  103 |  } else { }  var1140 = var105 > 0 ;  var1334 = 0 ; if ( var1 ) { if ( var1140 ) { var1334 = 1 ; } else { } } else { }  var1141 = var1334 ;  var1142 = int var598 = var1141 ; if ( var598 ) {  var1143 = var105 - 1 ;  var1144 = var108 [ 0 ] ;  var1145 = var1144 == var123 ;  var1146 = var105 - 1 ;  var1147 = var108 [ 0 ] ;  var1148 = var128 > var1147 ;  var1489 = 0 ; if ( var1145 ) { var1489 = 1 ; } else { }  var1276 = var1489 ;  var1490 = 0 ; if ( var1148 ) { var1490 = 1 ; } else { }  var1277 = var1490 ;  var1335 = 0 ; if ( var1276 ) { if ( var1277 ) { var1335 = 1 ; } else { } } else { }  var1278 = var1335 ;  var1491 = 0 ; if ( var1278 ) { var1491 = 1 ; } else { }  var1279 = var1491 ;  var1280 =  var1149 = var1279 ;  var1150 = int var599 = var1149 ; if ( var599 ) {  var1151 = var105 - 1 ;  var1152 = var108 [ 0 ] ;  var1153 = var1152 = var128 ; int var600 = var0 ; if ( var600 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var128 ) ; ; } else { } } else { } } else { } int var601 = var0 ; if ( var601 ) { printf ( "Min child found at depth %d = %d: move %d\n" , var105 , var128 , var130 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var244 = var128 ; return var244 ; } else { int var134 = var123 ; int var135 = 0 - 1 ; { int var136 = 0 ; label_97:
      |                                                    ^~
output.c:103:110: error: expected identifier or ‘(’ before ‘else’
  103 |  } else { }  var1140 = var105 > 0 ;  var1334 = 0 ; if ( var1 ) { if ( var1140 ) { var1334 = 1 ; } else { } } else { }  var1141 = var1334 ;  var1142 = int var598 = var1141 ; if ( var598 ) {  var1143 = var105 - 1 ;  var1144 = var108 [ 0 ] ;  var1145 = var1144 == var123 ;  var1146 = var105 - 1 ;  var1147 = var108 [ 0 ] ;  var1148 = var128 > var1147 ;  var1489 = 0 ; if ( var1145 ) { var1489 = 1 ; } else { }  var1276 = var1489 ;  var1490 = 0 ; if ( var1148 ) { var1490 = 1 ; } else { }  var1277 = var1490 ;  var1335 = 0 ; if ( var1276 ) { if ( var1277 ) { var1335 = 1 ; } else { } } else { }  var1278 = var1335 ;  var1491 = 0 ; if ( var1278 ) { var1491 = 1 ; } else { }  var1279 = var1491 ;  var1280 =  var1149 = var1279 ;  var1150 = int var599 = var1149 ; if ( var599 ) {  var1151 = var105 - 1 ;  var1152 = var108 [ 0 ] ;  var1153 = var1152 = var128 ; int var600 = var0 ; if ( var600 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var128 ) ; ; } else { } } else { } } else { } int var601 = var0 ; if ( var601 ) { printf ( "Min child found at depth %d = %d: move %d\n" , var105 , var128 , var130 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var244 = var128 ; return var244 ; } else { int var134 = var123 ; int var135 = 0 - 1 ; { int var136 = 0 ; label_97:
      |                                                                                                              ^~~~
output.c:103:120: warning: data definition has no type or storage class
  103 |  } else { }  var1140 = var105 > 0 ;  var1334 = 0 ; if ( var1 ) { if ( var1140 ) { var1334 = 1 ; } else { } } else { }  var1141 = var1334 ;  var1142 = int var598 = var1141 ; if ( var598 ) {  var1143 = var105 - 1 ;  var1144 = var108 [ 0 ] ;  var1145 = var1144 == var123 ;  var1146 = var105 - 1 ;  var1147 = var108 [ 0 ] ;  var1148 = var128 > var1147 ;  var1489 = 0 ; if ( var1145 ) { var1489 = 1 ; } else { }  var1276 = var1489 ;  var1490 = 0 ; if ( var1148 ) { var1490 = 1 ; } else { }  var1277 = var1490 ;  var1335 = 0 ; if ( var1276 ) { if ( var1277 ) { var1335 = 1 ; } else { } } else { }  var1278 = var1335 ;  var1491 = 0 ; if ( var1278 ) { var1491 = 1 ; } else { }  var1279 = var1491 ;  var1280 =  var1149 = var1279 ;  var1150 = int var599 = var1149 ; if ( var599 ) {  var1151 = var105 - 1 ;  var1152 = var108 [ 0 ] ;  var1153 = var1152 = var128 ; int var600 = var0 ; if ( var600 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var128 ) ; ; } else { } } else { } } else { } int var601 = var0 ; if ( var601 ) { printf ( "Min child found at depth %d = %d: move %d\n" , var105 , var128 , var130 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var244 = var128 ; return var244 ; } else { int var134 = var123 ; int var135 = 0 - 1 ; { int var136 = 0 ; label_97:
      |                                                                                                                        ^~~~~~~
output.c:103:120: error: type defaults to ‘int’ in declaration of ‘var1141’ [-Wimplicit-int]
output.c:103:130: error: initializer element is not constant
  103 |  } else { }  var1140 = var105 > 0 ;  var1334 = 0 ; if ( var1 ) { if ( var1140 ) { var1334 = 1 ; } else { } } else { }  var1141 = var1334 ;  var1142 = int var598 = var1141 ; if ( var598 ) {  var1143 = var105 - 1 ;  var1144 = var108 [ 0 ] ;  var1145 = var1144 == var123 ;  var1146 = var105 - 1 ;  var1147 = var108 [ 0 ] ;  var1148 = var128 > var1147 ;  var1489 = 0 ; if ( var1145 ) { var1489 = 1 ; } else { }  var1276 = var1489 ;  var1490 = 0 ; if ( var1148 ) { var1490 = 1 ; } else { }  var1277 = var1490 ;  var1335 = 0 ; if ( var1276 ) { if ( var1277 ) { var1335 = 1 ; } else { } } else { }  var1278 = var1335 ;  var1491 = 0 ; if ( var1278 ) { var1491 = 1 ; } else { }  var1279 = var1491 ;  var1280 =  var1149 = var1279 ;  var1150 = int var599 = var1149 ; if ( var599 ) {  var1151 = var105 - 1 ;  var1152 = var108 [ 0 ] ;  var1153 = var1152 = var128 ; int var600 = var0 ; if ( var600 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var128 ) ; ; } else { } } else { } } else { } int var601 = var0 ; if ( var601 ) { printf ( "Min child found at depth %d = %d: move %d\n" , var105 , var128 , var130 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var244 = var128 ; return var244 ; } else { int var134 = var123 ; int var135 = 0 - 1 ; { int var136 = 0 ; label_97:
      |                                                                                                                                  ^~~~~~~
output.c:103:141: warning: data definition has no type or storage class
  103 |  } else { }  var1140 = var105 > 0 ;  var1334 = 0 ; if ( var1 ) { if ( var1140 ) { var1334 = 1 ; } else { } } else { }  var1141 = var1334 ;  var1142 = int var598 = var1141 ; if ( var598 ) {  var1143 = var105 - 1 ;  var1144 = var108 [ 0 ] ;  var1145 = var1144 == var123 ;  var1146 = var105 - 1 ;  var1147 = var108 [ 0 ] ;  var1148 = var128 > var1147 ;  var1489 = 0 ; if ( var1145 ) { var1489 = 1 ; } else { }  var1276 = var1489 ;  var1490 = 0 ; if ( var1148 ) { var1490 = 1 ; } else { }  var1277 = var1490 ;  var1335 = 0 ; if ( var1276 ) { if ( var1277 ) { var1335 = 1 ; } else { } } else { }  var1278 = var1335 ;  var1491 = 0 ; if ( var1278 ) { var1491 = 1 ; } else { }  var1279 = var1491 ;  var1280 =  var1149 = var1279 ;  var1150 = int var599 = var1149 ; if ( var599 ) {  var1151 = var105 - 1 ;  var1152 = var108 [ 0 ] ;  var1153 = var1152 = var128 ; int var600 = var0 ; if ( var600 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var128 ) ; ; } else { } } else { } } else { } int var601 = var0 ; if ( var601 ) { printf ( "Min child found at depth %d = %d: move %d\n" , var105 , var128 , var130 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var244 = var128 ; return var244 ; } else { int var134 = var123 ; int var135 = 0 - 1 ; { int var136 = 0 ; label_97:
      |                                                                                                                                             ^~~~~~~
output.c:103:141: error: type defaults to ‘int’ in declaration of ‘var1142’ [-Wimplicit-int]
output.c:103:151: error: expected expression before ‘int’
  103 |  } else { }  var1140 = var105 > 0 ;  var1334 = 0 ; if ( var1 ) { if ( var1140 ) { var1334 = 1 ; } else { } } else { }  var1141 = var1334 ;  var1142 = int var598 = var1141 ; if ( var598 ) {  var1143 = var105 - 1 ;  var1144 = var108 [ 0 ] ;  var1145 = var1144 == var123 ;  var1146 = var105 - 1 ;  var1147 = var108 [ 0 ] ;  var1148 = var128 > var1147 ;  var1489 = 0 ; if ( var1145 ) { var1489 = 1 ; } else { }  var1276 = var1489 ;  var1490 = 0 ; if ( var1148 ) { var1490 = 1 ; } else { }  var1277 = var1490 ;  var1335 = 0 ; if ( var1276 ) { if ( var1277 ) { var1335 = 1 ; } else { } } else { }  var1278 = var1335 ;  var1491 = 0 ; if ( var1278 ) { var1491 = 1 ; } else { }  var1279 = var1491 ;  var1280 =  var1149 = var1279 ;  var1150 = int var599 = var1149 ; if ( var599 ) {  var1151 = var105 - 1 ;  var1152 = var108 [ 0 ] ;  var1153 = var1152 = var128 ; int var600 = var0 ; if ( var600 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var128 ) ; ; } else { } } else { } } else { } int var601 = var0 ; if ( var601 ) { printf ( "Min child found at depth %d = %d: move %d\n" , var105 , var128 , var130 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var244 = var128 ; return var244 ; } else { int var134 = var123 ; int var135 = 0 - 1 ; { int var136 = 0 ; label_97:
      |                                                                                                                                                       ^~~
output.c:103:174: error: expected identifier or ‘(’ before ‘if’
  103 |  } else { }  var1140 = var105 > 0 ;  var1334 = 0 ; if ( var1 ) { if ( var1140 ) { var1334 = 1 ; } else { } } else { }  var1141 = var1334 ;  var1142 = int var598 = var1141 ; if ( var598 ) {  var1143 = var105 - 1 ;  var1144 = var108 [ 0 ] ;  var1145 = var1144 == var123 ;  var1146 = var105 - 1 ;  var1147 = var108 [ 0 ] ;  var1148 = var128 > var1147 ;  var1489 = 0 ; if ( var1145 ) { var1489 = 1 ; } else { }  var1276 = var1489 ;  var1490 = 0 ; if ( var1148 ) { var1490 = 1 ; } else { }  var1277 = var1490 ;  var1335 = 0 ; if ( var1276 ) { if ( var1277 ) { var1335 = 1 ; } else { } } else { }  var1278 = var1335 ;  var1491 = 0 ; if ( var1278 ) { var1491 = 1 ; } else { }  var1279 = var1491 ;  var1280 =  var1149 = var1279 ;  var1150 = int var599 = var1149 ; if ( var599 ) {  var1151 = var105 - 1 ;  var1152 = var108 [ 0 ] ;  var1153 = var1152 = var128 ; int var600 = var0 ; if ( var600 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var128 ) ; ; } else { } } else { } } else { } int var601 = var0 ; if ( var601 ) { printf ( "Min child found at depth %d = %d: move %d\n" , var105 , var128 , var130 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var244 = var128 ; return var244 ; } else { int var134 = var123 ; int var135 = 0 - 1 ; { int var136 = 0 ; label_97:
      |                                                                                                                                                                              ^~
output.c:103:994: error: expected identifier or ‘(’ before ‘else’
  103 |  } else { }  var1140 = var105 > 0 ;  var1334 = 0 ; if ( var1 ) { if ( var1140 ) { var1334 = 1 ; } else { } } else { }  var1141 = var1334 ;  var1142 = int var598 = var1141 ; if ( var598 ) {  var1143 = var105 - 1 ;  var1144 = var108 [ 0 ] ;  var1145 = var1144 == var123 ;  var1146 = var105 - 1 ;  var1147 = var108 [ 0 ] ;  var1148 = var128 > var1147 ;  var1489 = 0 ; if ( var1145 ) { var1489 = 1 ; } else { }  var1276 = var1489 ;  var1490 = 0 ; if ( var1148 ) { var1490 = 1 ; } else { }  var1277 = var1490 ;  var1335 = 0 ; if ( var1276 ) { if ( var1277 ) { var1335 = 1 ; } else { } } else { }  var1278 = var1335 ;  var1491 = 0 ; if ( var1278 ) { var1491 = 1 ; } else { }  var1279 = var1491 ;  var1280 =  var1149 = var1279 ;  var1150 = int var599 = var1149 ; if ( var599 ) {  var1151 = var105 - 1 ;  var1152 = var108 [ 0 ] ;  var1153 = var1152 = var128 ; int var600 = var0 ; if ( var600 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var128 ) ; ; } else { } } else { } } else { } int var601 = var0 ; if ( var601 ) { printf ( "Min child found at depth %d = %d: move %d\n" , var105 , var128 , var130 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var244 = var128 ; return var244 ; } else { int var134 = var123 ; int var135 = 0 - 1 ; { int var136 = 0 ; label_97:
      |~~~
output.c:103:1016: error: ‘var0’ undeclared here (not in a function); did you mean ‘var90’?
  103 |  } else { }  var1140 = var105 > 0 ;  var1334 = 0 ; if ( var1 ) { if ( var1140 ) { var1334 = 1 ; } else { } } else { }  var1141 = var1334 ;  var1142 = int var598 = var1141 ; if ( var598 ) {  var1143 = var105 - 1 ;  var1144 = var108 [ 0 ] ;  var1145 = var1144 == var123 ;  var1146 = var105 - 1 ;  var1147 = var108 [ 0 ] ;  var1148 = var128 > var1147 ;  var1489 = 0 ; if ( var1145 ) { var1489 = 1 ; } else { }  var1276 = var1489 ;  var1490 = 0 ; if ( var1148 ) { var1490 = 1 ; } else { }  var1277 = var1490 ;  var1335 = 0 ; if ( var1276 ) { if ( var1277 ) { var1335 = 1 ; } else { } } else { }  var1278 = var1335 ;  var1491 = 0 ; if ( var1278 ) { var1491 = 1 ; } else { }  var1279 = var1491 ;  var1280 =  var1149 = var1279 ;  var1150 = int var599 = var1149 ; if ( var599 ) {  var1151 = var105 - 1 ;  var1152 = var108 [ 0 ] ;  var1153 = var1152 = var128 ; int var600 = var0 ; if ( var600 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var128 ) ; ; } else { } } else { } } else { } int var601 = var0 ; if ( var601 ) { printf ( "Min child found at depth %d = %d: move %d\n" , var105 , var128 , var130 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var244 = var128 ; return var244 ; } else { int var134 = var123 ; int var135 = 0 - 1 ; { int var136 = 0 ; label_97:
      |~~~
      |var90
output.c:103:1023: error: expected identifier or ‘(’ before ‘if’
  103 |  } else { }  var1140 = var105 > 0 ;  var1334 = 0 ; if ( var1 ) { if ( var1140 ) { var1334 = 1 ; } else { } } else { }  var1141 = var1334 ;  var1142 = int var598 = var1141 ; if ( var598 ) {  var1143 = var105 - 1 ;  var1144 = var108 [ 0 ] ;  var1145 = var1144 == var123 ;  var1146 = var105 - 1 ;  var1147 = var108 [ 0 ] ;  var1148 = var128 > var1147 ;  var1489 = 0 ; if ( var1145 ) { var1489 = 1 ; } else { }  var1276 = var1489 ;  var1490 = 0 ; if ( var1148 ) { var1490 = 1 ; } else { }  var1277 = var1490 ;  var1335 = 0 ; if ( var1276 ) { if ( var1277 ) { var1335 = 1 ; } else { } } else { }  var1278 = var1335 ;  var1491 = 0 ; if ( var1278 ) { var1491 = 1 ; } else { }  var1279 = var1491 ;  var1280 =  var1149 = var1279 ;  var1150 = int var599 = var1149 ; if ( var599 ) {  var1151 = var105 - 1 ;  var1152 = var108 [ 0 ] ;  var1153 = var1152 = var128 ; int var600 = var0 ; if ( var600 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var128 ) ; ; } else { } } else { } } else { } int var601 = var0 ; if ( var601 ) { printf ( "Min child found at depth %d = %d: move %d\n" , var105 , var128 , var130 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var244 = var128 ; return var244 ; } else { int var134 = var123 ; int var135 = 0 - 1 ; { int var136 = 0 ; label_97:
      |~
output.c:103:1238: error: expected identifier or ‘(’ before ‘else’
  103 |  } else { }  var1140 = var105 > 0 ;  var1334 = 0 ; if ( var1 ) { if ( var1140 ) { var1334 = 1 ; } else { } } else { }  var1141 = var1334 ;  var1142 = int var598 = var1141 ; if ( var598 ) {  var1143 = var105 - 1 ;  var1144 = var108 [ 0 ] ;  var1145 = var1144 == var123 ;  var1146 = var105 - 1 ;  var1147 = var108 [ 0 ] ;  var1148 = var128 > var1147 ;  var1489 = 0 ; if ( var1145 ) { var1489 = 1 ; } else { }  var1276 = var1489 ;  var1490 = 0 ; if ( var1148 ) { var1490 = 1 ; } else { }  var1277 = var1490 ;  var1335 = 0 ; if ( var1276 ) { if ( var1277 ) { var1335 = 1 ; } else { } } else { }  var1278 = var1335 ;  var1491 = 0 ; if ( var1278 ) { var1491 = 1 ; } else { }  var1279 = var1491 ;  var1280 =  var1149 = var1279 ;  var1150 = int var599 = var1149 ; if ( var599 ) {  var1151 = var105 - 1 ;  var1152 = var108 [ 0 ] ;  var1153 = var1152 = var128 ; int var600 = var0 ; if ( var600 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var128 ) ; ; } else { } } else { } } else { } int var601 = var0 ; if ( var601 ) { printf ( "Min child found at depth %d = %d: move %d\n" , var105 , var128 , var130 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var244 = var128 ; return var244 ; } else { int var134 = var123 ; int var135 = 0 - 1 ; { int var136 = 0 ; label_97:
      |~~~
output.c:103:1260: error: ‘var128’ undeclared here (not in a function); did you mean ‘var1328’?
  103 |  } else { }  var1140 = var105 > 0 ;  var1334 = 0 ; if ( var1 ) { if ( var1140 ) { var1334 = 1 ; } else { } } else { }  var1141 = var1334 ;  var1142 = int var598 = var1141 ; if ( var598 ) {  var1143 = var105 - 1 ;  var1144 = var108 [ 0 ] ;  var1145 = var1144 == var123 ;  var1146 = var105 - 1 ;  var1147 = var108 [ 0 ] ;  var1148 = var128 > var1147 ;  var1489 = 0 ; if ( var1145 ) { var1489 = 1 ; } else { }  var1276 = var1489 ;  var1490 = 0 ; if ( var1148 ) { var1490 = 1 ; } else { }  var1277 = var1490 ;  var1335 = 0 ; if ( var1276 ) { if ( var1277 ) { var1335 = 1 ; } else { } } else { }  var1278 = var1335 ;  var1491 = 0 ; if ( var1278 ) { var1491 = 1 ; } else { }  var1279 = var1491 ;  var1280 =  var1149 = var1279 ;  var1150 = int var599 = var1149 ; if ( var599 ) {  var1151 = var105 - 1 ;  var1152 = var108 [ 0 ] ;  var1153 = var1152 = var128 ; int var600 = var0 ; if ( var600 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var128 ) ; ; } else { } } else { } } else { } int var601 = var0 ; if ( var601 ) { printf ( "Min child found at depth %d = %d: move %d\n" , var105 , var128 , var130 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var244 = var128 ; return var244 ; } else { int var134 = var123 ; int var135 = 0 - 1 ; { int var136 = 0 ; label_97:
      |~~~~~
      |var1328
output.c:103:1269: error: expected identifier or ‘(’ before ‘return’
  103 |  } else { }  var1140 = var105 > 0 ;  var1334 = 0 ; if ( var1 ) { if ( var1140 ) { var1334 = 1 ; } else { } } else { }  var1141 = var1334 ;  var1142 = int var598 = var1141 ; if ( var598 ) {  var1143 = var105 - 1 ;  var1144 = var108 [ 0 ] ;  var1145 = var1144 == var123 ;  var1146 = var105 - 1 ;  var1147 = var108 [ 0 ] ;  var1148 = var128 > var1147 ;  var1489 = 0 ; if ( var1145 ) { var1489 = 1 ; } else { }  var1276 = var1489 ;  var1490 = 0 ; if ( var1148 ) { var1490 = 1 ; } else { }  var1277 = var1490 ;  var1335 = 0 ; if ( var1276 ) { if ( var1277 ) { var1335 = 1 ; } else { } } else { }  var1278 = var1335 ;  var1491 = 0 ; if ( var1278 ) { var1491 = 1 ; } else { }  var1279 = var1491 ;  var1280 =  var1149 = var1279 ;  var1150 = int var599 = var1149 ; if ( var599 ) {  var1151 = var105 - 1 ;  var1152 = var108 [ 0 ] ;  var1153 = var1152 = var128 ; int var600 = var0 ; if ( var600 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var128 ) ; ; } else { } } else { } } else { } int var601 = var0 ; if ( var601 ) { printf ( "Min child found at depth %d = %d: move %d\n" , var105 , var128 , var130 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var244 = var128 ; return var244 ; } else { int var134 = var123 ; int var135 = 0 - 1 ; { int var136 = 0 ; label_97:
      |~~~~~
output.c:103:1285: error: expected identifier or ‘(’ before ‘}’ token
  103 |  } else { }  var1140 = var105 > 0 ;  var1334 = 0 ; if ( var1 ) { if ( var1140 ) { var1334 = 1 ; } else { } } else { }  var1141 = var1334 ;  var1142 = int var598 = var1141 ; if ( var598 ) {  var1143 = var105 - 1 ;  var1144 = var108 [ 0 ] ;  var1145 = var1144 == var123 ;  var1146 = var105 - 1 ;  var1147 = var108 [ 0 ] ;  var1148 = var128 > var1147 ;  var1489 = 0 ; if ( var1145 ) { var1489 = 1 ; } else { }  var1276 = var1489 ;  var1490 = 0 ; if ( var1148 ) { var1490 = 1 ; } else { }  var1277 = var1490 ;  var1335 = 0 ; if ( var1276 ) { if ( var1277 ) { var1335 = 1 ; } else { } } else { }  var1278 = var1335 ;  var1491 = 0 ; if ( var1278 ) { var1491 = 1 ; } else { }  var1279 = var1491 ;  var1280 =  var1149 = var1279 ;  var1150 = int var599 = var1149 ; if ( var599 ) {  var1151 = var105 - 1 ;  var1152 = var108 [ 0 ] ;  var1153 = var1152 = var128 ; int var600 = var0 ; if ( var600 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var128 ) ; ; } else { } } else { } } else { } int var601 = var0 ; if ( var601 ) { printf ( "Min child found at depth %d = %d: move %d\n" , var105 , var128 , var130 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var244 = var128 ; return var244 ; } else { int var134 = var123 ; int var135 = 0 - 1 ; { int var136 = 0 ; label_97:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     ^
output.c:103:1287: error: expected identifier or ‘(’ before ‘else’
  103 |  } else { }  var1140 = var105 > 0 ;  var1334 = 0 ; if ( var1 ) { if ( var1140 ) { var1334 = 1 ; } else { } } else { }  var1141 = var1334 ;  var1142 = int var598 = var1141 ; if ( var598 ) {  var1143 = var105 - 1 ;  var1144 = var108 [ 0 ] ;  var1145 = var1144 == var123 ;  var1146 = var105 - 1 ;  var1147 = var108 [ 0 ] ;  var1148 = var128 > var1147 ;  var1489 = 0 ; if ( var1145 ) { var1489 = 1 ; } else { }  var1276 = var1489 ;  var1490 = 0 ; if ( var1148 ) { var1490 = 1 ; } else { }  var1277 = var1490 ;  var1335 = 0 ; if ( var1276 ) { if ( var1277 ) { var1335 = 1 ; } else { } } else { }  var1278 = var1335 ;  var1491 = 0 ; if ( var1278 ) { var1491 = 1 ; } else { }  var1279 = var1491 ;  var1280 =  var1149 = var1279 ;  var1150 = int var599 = var1149 ; if ( var599 ) {  var1151 = var105 - 1 ;  var1152 = var108 [ 0 ] ;  var1153 = var1152 = var128 ; int var600 = var0 ; if ( var600 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var128 ) ; ; } else { } } else { } } else { } int var601 = var0 ; if ( var601 ) { printf ( "Min child found at depth %d = %d: move %d\n" , var105 , var128 , var130 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var244 = var128 ; return var244 ; } else { int var134 = var123 ; int var135 = 0 - 1 ; { int var136 = 0 ; label_97:
      |~~~
output.c:105:5: warning: data definition has no type or storage class
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |     ^~~~~~~
output.c:105:5: error: type defaults to ‘int’ in declaration of ‘var1167’ [-Wimplicit-int]
output.c:105:29: warning: data definition has no type or storage class
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |                             ^~~~~~~
output.c:105:29: error: type defaults to ‘int’ in declaration of ‘var1337’ [-Wimplicit-int]
output.c:105:43: error: expected identifier or ‘(’ before ‘if’
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |                                           ^~
output.c:105:101: error: expected identifier or ‘(’ before ‘else’
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |                                                                                                     ^~~~
output.c:105:111: warning: data definition has no type or storage class
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |                                                                                                               ^~~~~~~
output.c:105:111: error: type defaults to ‘int’ in declaration of ‘var1168’ [-Wimplicit-int]
output.c:105:121: error: initializer element is not constant
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |                                                                                                                         ^~~~~~~
output.c:105:132: warning: data definition has no type or storage class
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |                                                                                                                                    ^~~~~~~
output.c:105:132: error: type defaults to ‘int’ in declaration of ‘var1169’ [-Wimplicit-int]
output.c:105:142: error: expected expression before ‘int’
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |                                                                                                                                              ^~~
output.c:105:165: error: expected identifier or ‘(’ before ‘if’
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |                                                                                                                                                                     ^~
output.c:105:985: error: expected identifier or ‘(’ before ‘else’
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |~~~
output.c:105:1014: error: expected identifier or ‘(’ before ‘if’
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |~
output.c:105:1229: error: expected identifier or ‘(’ before ‘else’
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |~~~
output.c:105:1251: error: ‘var134’ undeclared here (not in a function); did you mean ‘var1334’?
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |~~~~~
      |var1334
output.c:105:1260: error: expected identifier or ‘(’ before ‘return’
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |~~~~~
output.c:105:1276: error: expected identifier or ‘(’ before ‘}’ token
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |
output.c:105:1278: error: expected identifier or ‘(’ before ‘}’ token
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |
output.c: In function ‘cpuMove’:
output.c:105:1324: error: ‘var142’ undeclared (first use in this function); did you mean ‘var141’?
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            var141
output.c:105:1386: error: ‘var2’ undeclared (first use in this function); did you mean ‘var92’?
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |~~~
      |var92
output.c:105:1398: error: ‘var1181’ undeclared (first use in this function); did you mean ‘var1141’?
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |~~~~~~
      |var1141
output.c:105:1421: error: ‘var1182’ undeclared (first use in this function); did you mean ‘var1142’?
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             var1142
output.c:105:1438: error: subscripted value is neither array nor pointer nor vector
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |
output.c:105:1447: error: ‘var1183’ undeclared (first use in this function); did you mean ‘var1169’?
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |~~~~~~
      |var1169
output.c:105:1464: error: expected expression before ‘=’ token
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |
output.c:105:1510: error: ‘var391’ undeclared (first use in this function); did you mean ‘var91’?
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |~~~~~
      |var91
output.c:105:1524: error: ‘var1184’ undeclared (first use in this function); did you mean ‘var148’?
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |~~~~~~
      |var148
output.c:105:1549: error: ‘var1185’ undeclared (first use in this function); did you mean ‘var148’?
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             var148
output.c:105:1566: error: subscripted value is neither array nor pointer nor vector
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |
output.c:105:1575: error: ‘var1186’ undeclared (first use in this function); did you mean ‘var1168’?
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |~~~~~~
      |var1168
output.c:105:1592: error: expected expression before ‘=’ token
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |
output.c:105:1642: error: ‘var392’ undeclared (first use in this function); did you mean ‘var92’?
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |~~~~~
      |var92
output.c:105:1656: error: ‘var1187’ undeclared (first use in this function); did you mean ‘var1167’?
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ^~~~~~~
      |var1167
output.c:105:1681: error: ‘var1188’ undeclared (first use in this function); did you mean ‘var1168’?
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |~~~~~~
      |var1168
output.c:105:1698: error: subscripted value is neither array nor pointer nor vector
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ^
output.c:105:1707: error: ‘var1189’ undeclared (first use in this function); did you mean ‘var1169’?
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |~~~~~~
      |var1169
output.c:105:1724: error: expected expression before ‘=’ token
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |
output.c:105:1774: error: ‘var393’ undeclared (first use in this function); did you mean ‘var933’?
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |~~~~~
      |var933
output.c:105:1788: error: ‘var1190’ undeclared (first use in this function); did you mean ‘var1140’?
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |~~~~~~
      |var1140
output.c:105:1811: error: ‘var1191’ undeclared (first use in this function); did you mean ‘var1141’?
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |~~~~~~
      |var1141
output.c:105:1828: error: subscripted value is neither array nor pointer nor vector
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |
output.c:105:1837: error: ‘var1192’ undeclared (first use in this function); did you mean ‘var1142’?
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |~~~~~~
      |var1142
output.c:105:1854: error: expected expression before ‘=’ token
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |
output.c:105:1900: error: ‘var394’ undeclared (first use in this function); did you mean ‘var994’?
  105 |  }  var1167 = var105 > 0 ;  var1337 = 0 ; if ( var1 ) { if ( var1167 ) { var1337 = 1 ; } else { } } else { }  var1168 = var1337 ;  var1169 = int var603 = var1168 ; if ( var603 ) {  var1170 = var105 - 1 ;  var1171 = var108 [ 0 ] ;  var1172 = var1171 == var123 ;  var1173 = var105 - 1 ;  var1174 = var108 [ 0 ] ;  var1175 = var134 < var1174 ;  var1493 = 0 ; if ( var1172 ) { var1493 = 1 ; } else { }  var1281 = var1493 ;  var1494 = 0 ; if ( var1175 ) { var1494 = 1 ; } else { }  var1282 = var1494 ;  var1338 = 0 ; if ( var1281 ) { if ( var1282 ) { var1338 = 1 ; } else { } } else { }  var1283 = var1338 ;  var1495 = 0 ; if ( var1283 ) { var1495 = 1 ; } else { }  var1284 = var1495 ;  var1285 =  var1176 = var1284 ;  var1177 = int var604 = var1176 ; if ( var604 ) {  var1178 = var105 - 1 ;  var1179 = var108 [ 0 ] ;  var1180 = var1179 = var134 ; int var605 = var0 ; if ( var605 ) { printf ( "Updated pruning value at depth %d to %d\n" , var105 - 1 , var134 ) ; ; } else { } } else { } } else { } int var606 = var0 ; if ( var606 ) { printf ( "Max child found at depth %d = %d: move %d\n" , var105 , var134 , var135 ) ; ; printf ( "Value for each move: (INT_MIN = invalid move)\n" ) ; ; printBoard ( var103 access ( var105 ) ) ; ; } else { } int var245 = var134 ; return var245 ; } } int cpuMove ( int var140 , int * var141 ) { var142 ; size_t var145 = 0 ; size_t var146 = 0 ; int var147 = var2 + 1 ;  var1181 = ( int ) 0 ;  var1182 = var147 [ 0 ] ;  var1183 = sizeof = var1182 ; int * var148 = ( int * ) malloc ( var391 ) ; ;  var1184 = ( int * ) 0 ;  var1185 = var147 [ 0 ] ;  var1186 = sizeof = var1185 ; int * * var150 = ( int * * ) malloc ( var392 ) ; ;  var1187 = ( int * ) 0 ;  var1188 = var147 [ 0 ] ;  var1189 = sizeof = var1188 ; int * * var151 = ( int * * ) malloc ( var393 ) ; ;  var1190 = ( int ) 0 ;  var1191 = var147 [ 0 ] ;  var1192 = sizeof = var1191 ; int * var152 = ( int * ) malloc ( var394 ) ; ; { int var153 = 0 ; label_99:
      |~~~~~
      |var994
output.c:106:39: error: expected ‘;’ before ‘var153’
  106 |  if ( var153 < var147 ) { var148 [ 0 ] var153 ) = 0 ; var152 [ 0 ] var153 ) = var154 ; var150 [ 0 ] var153 ) = #3H ( ) ; var151 [ 0 ] var153 ) = #3H ( ) ; var153 ; var153 = var153 + 1 ; goto label_99 ; } else { } label_100:
      |                                       ^~~~~~~
      |                                       ;
output.c:106:47: error: expected statement before ‘)’ token
  106 |  if ( var153 < var147 ) { var148 [ 0 ] var153 ) = 0 ; var152 [ 0 ] var153 ) = var154 ; var150 [ 0 ] var153 ) = #3H ( ) ; var151 [ 0 ] var153 ) = #3H ( ) ; var153 ; var153 = var153 + 1 ; goto label_99 ; } else { } label_100:
      |                                               ^
output.c:106:49: error: expected expression before ‘=’ token
  106 |  if ( var153 < var147 ) { var148 [ 0 ] var153 ) = 0 ; var152 [ 0 ] var153 ) = var154 ; var150 [ 0 ] var153 ) = #3H ( ) ; var151 [ 0 ] var153 ) = #3H ( ) ; var153 ; var153 = var153 + 1 ; goto label_99 ; } else { } label_100:
      |                                                 ^
output.c:106:67: error: expected ‘;’ before ‘var153’
  106 |  if ( var153 < var147 ) { var148 [ 0 ] var153 ) = 0 ; var152 [ 0 ] var153 ) = var154 ; var150 [ 0 ] var153 ) = #3H ( ) ; var151 [ 0 ] var153 ) = #3H ( ) ; var153 ; var153 = var153 + 1 ; goto label_99 ; } else { } label_100:
      |                                                                   ^~~~~~~
      |                                                                   ;
output.c:106:75: error: expected statement before ‘)’ token
  106 |  if ( var153 < var147 ) { var148 [ 0 ] var153 ) = 0 ; var152 [ 0 ] var153 ) = var154 ; var150 [ 0 ] var153 ) = #3H ( ) ; var151 [ 0 ] var153 ) = #3H ( ) ; var153 ; var153 = var153 + 1 ; goto label_99 ; } else { } label_100:
      |                                                                           ^
output.c:106:77: error: expected expression before ‘=’ token
  106 |  if ( var153 < var147 ) { var148 [ 0 ] var153 ) = 0 ; var152 [ 0 ] var153 ) = var154 ; var150 [ 0 ] var153 ) = #3H ( ) ; var151 [ 0 ] var153 ) = #3H ( ) ; var153 ; var153 = var153 + 1 ; goto label_99 ; } else { } label_100:
      |                                                                             ^
output.c:106:79: error: ‘var154’ undeclared (first use in this function); did you mean ‘var153’?
  106 |  if ( var153 < var147 ) { var148 [ 0 ] var153 ) = 0 ; var152 [ 0 ] var153 ) = var154 ; var150 [ 0 ] var153 ) = #3H ( ) ; var151 [ 0 ] var153 ) = #3H ( ) ; var153 ; var153 = var153 + 1 ; goto label_99 ; } else { } label_100:
      |                                                                               ^~~~~~
      |                                                                               var153
output.c:106:100: error: expected ‘;’ before ‘var153’
  106 |  if ( var153 < var147 ) { var148 [ 0 ] var153 ) = 0 ; var152 [ 0 ] var153 ) = var154 ; var150 [ 0 ] var153 ) = #3H ( ) ; var151 [ 0 ] var153 ) = #3H ( ) ; var153 ; var153 = var153 + 1 ; goto label_99 ; } else { } label_100:
      |                                                                                                    ^~~~~~~
      |                                                                                                    ;
output.c:106:108: error: expected statement before ‘)’ token
  106 |  if ( var153 < var147 ) { var148 [ 0 ] var153 ) = 0 ; var152 [ 0 ] var153 ) = var154 ; var150 [ 0 ] var153 ) = #3H ( ) ; var151 [ 0 ] var153 ) = #3H ( ) ; var153 ; var153 = var153 + 1 ; goto label_99 ; } else { } label_100:
      |                                                                                                            ^
output.c:106:110: error: expected expression before ‘=’ token
  106 |  if ( var153 < var147 ) { var148 [ 0 ] var153 ) = 0 ; var152 [ 0 ] var153 ) = var154 ; var150 [ 0 ] var153 ) = #3H ( ) ; var151 [ 0 ] var153 ) = #3H ( ) ; var153 ; var153 = var153 + 1 ; goto label_99 ; } else { } label_100:
      |                                                                                                              ^
output.c:106:112: error: stray ‘#’ in program
  106 |  if ( var153 < var147 ) { var148 [ 0 ] var153 ) = 0 ; var152 [ 0 ] var153 ) = var154 ; var150 [ 0 ] var153 ) = #3H ( ) ; var151 [ 0 ] var153 ) = #3H ( ) ; var153 ; var153 = var153 + 1 ; goto label_99 ; } else { } label_100:
      |                                                                                                                ^
output.c:106:113: error: invalid suffix "H" on integer constant
  106 |  if ( var153 < var147 ) { var148 [ 0 ] var153 ) = 0 ; var152 [ 0 ] var153 ) = var154 ; var150 [ 0 ] var153 ) = #3H ( ) ; var151 [ 0 ] var153 ) = #3H ( ) ; var153 ; var153 = var153 + 1 ; goto label_99 ; } else { } label_100:
      |                                                                                                                 ^~
output.c:106:134: error: expected ‘;’ before ‘var153’
  106 |  if ( var153 < var147 ) { var148 [ 0 ] var153 ) = 0 ; var152 [ 0 ] var153 ) = var154 ; var150 [ 0 ] var153 ) = #3H ( ) ; var151 [ 0 ] var153 ) = #3H ( ) ; var153 ; var153 = var153 + 1 ; goto label_99 ; } else { } label_100:
      |                                                                                                                                      ^~~~~~~
      |                                                                                                                                      ;
output.c:106:142: error: expected statement before ‘)’ token
  106 |  if ( var153 < var147 ) { var148 [ 0 ] var153 ) = 0 ; var152 [ 0 ] var153 ) = var154 ; var150 [ 0 ] var153 ) = #3H ( ) ; var151 [ 0 ] var153 ) = #3H ( ) ; var153 ; var153 = var153 + 1 ; goto label_99 ; } else { } label_100:
      |                                                                                                                                              ^
output.c:106:144: error: expected expression before ‘=’ token
  106 |  if ( var153 < var147 ) { var148 [ 0 ] var153 ) = 0 ; var152 [ 0 ] var153 ) = var154 ; var150 [ 0 ] var153 ) = #3H ( ) ; var151 [ 0 ] var153 ) = #3H ( ) ; var153 ; var153 = var153 + 1 ; goto label_99 ; } else { } label_100:
      |                                                                                                                                                ^
output.c:106:146: error: stray ‘#’ in program
  106 |  if ( var153 < var147 ) { var148 [ 0 ] var153 ) = 0 ; var152 [ 0 ] var153 ) = var154 ; var150 [ 0 ] var153 ) = #3H ( ) ; var151 [ 0 ] var153 ) = #3H ( ) ; var153 ; var153 = var153 + 1 ; goto label_99 ; } else { } label_100:
      |                                                                                                                                                  ^
output.c:106:147: error: invalid suffix "H" on integer constant
  106 |  if ( var153 < var147 ) { var148 [ 0 ] var153 ) = 0 ; var152 [ 0 ] var153 ) = var154 ; var150 [ 0 ] var153 ) = #3H ( ) ; var151 [ 0 ] var153 ) = #3H ( ) ; var153 ; var153 = var153 + 1 ; goto label_99 ; } else { } label_100:
      |                                                                                                                                                   ^~
output.c:107:5: error: ‘var1193’ undeclared (first use in this function); did you mean ‘var1169’?
  107 |  }  var1193 = 8 * 8 ;  var1194 = sizeof cast #TYPE ;  var1195 = var1193 * var1194 ;  var1196 = memcpy ( var150 access ( 0 ) , var141 , var1195 ) ; ; findBestChild ( var140 , var140 , var148 , var150 , var151 , var147 , 0 , 0 ref var145 , 0 ref var146 , var152 ) ; ; int var156 = 0 - 1 ; int var157 = var158 ; { int var159 = 0 ; label_101:
      |     ^~~~~~~
      |     var1169
output.c:107:24: error: ‘var1194’ undeclared (first use in this function); did you mean ‘var1169’?
  107 |  }  var1193 = 8 * 8 ;  var1194 = sizeof cast #TYPE ;  var1195 = var1193 * var1194 ;  var1196 = memcpy ( var150 access ( 0 ) , var141 , var1195 ) ; ; findBestChild ( var140 , var140 , var148 , var150 , var151 , var147 , 0 , 0 ref var145 , 0 ref var146 , var152 ) ; ; int var156 = 0 - 1 ; int var157 = var158 ; { int var159 = 0 ; label_101:
      |                        ^~~~~~~
      |                        var1169
output.c:107:46: error: stray ‘#’ in program
  107 |  }  var1193 = 8 * 8 ;  var1194 = sizeof cast #TYPE ;  var1195 = var1193 * var1194 ;  var1196 = memcpy ( var150 access ( 0 ) , var141 , var1195 ) ; ; findBestChild ( var140 , var140 , var148 , var150 , var151 , var147 , 0 , 0 ref var145 , 0 ref var146 , var152 ) ; ; int var156 = 0 - 1 ; int var157 = var158 ; { int var159 = 0 ; label_101:
      |                                              ^
output.c:107:41: error: ‘cast’ undeclared (first use in this function)
  107 |  }  var1193 = 8 * 8 ;  var1194 = sizeof cast #TYPE ;  var1195 = var1193 * var1194 ;  var1196 = memcpy ( var150 access ( 0 ) , var141 , var1195 ) ; ; findBestChild ( var140 , var140 , var148 , var150 , var151 , var147 , 0 , 0 ref var145 , 0 ref var146 , var152 ) ; ; int var156 = 0 - 1 ; int var157 = var158 ; { int var159 = 0 ; label_101:
      |                                         ^~~~
output.c:107:45: error: expected ‘;’ before ‘TYPE’
  107 |  }  var1193 = 8 * 8 ;  var1194 = sizeof cast #TYPE ;  var1195 = var1193 * var1194 ;  var1196 = memcpy ( var150 access ( 0 ) , var141 , var1195 ) ; ; findBestChild ( var140 , var140 , var148 , var150 , var151 , var147 , 0 , 0 ref var145 , 0 ref var146 , var152 ) ; ; int var156 = 0 - 1 ; int var157 = var158 ; { int var159 = 0 ; label_101:
      |                                             ^ ~~~~
      |                                             ;
output.c:107:55: error: ‘var1195’ undeclared (first use in this function); did you mean ‘var1395’?
  107 |  }  var1193 = 8 * 8 ;  var1194 = sizeof cast #TYPE ;  var1195 = var1193 * var1194 ;  var1196 = memcpy ( var150 access ( 0 ) , var141 , var1195 ) ; ; findBestChild ( var140 , var140 , var148 , var150 , var151 , var147 , 0 , 0 ref var145 , 0 ref var146 , var152 ) ; ; int var156 = 0 - 1 ; int var157 = var158 ; { int var159 = 0 ; label_101:
      |                                                       ^~~~~~~
      |                                                       var1395
output.c:107:86: error: ‘var1196’ undeclared (first use in this function); did you mean ‘var1169’?
  107 |  }  var1193 = 8 * 8 ;  var1194 = sizeof cast #TYPE ;  var1195 = var1193 * var1194 ;  var1196 = memcpy ( var150 access ( 0 ) , var141 , var1195 ) ; ; findBestChild ( var140 , var140 , var148 , var150 , var151 , var147 , 0 , 0 ref var145 , 0 ref var146 , var152 ) ; ; int var156 = 0 - 1 ; int var157 = var158 ; { int var159 = 0 ; label_101:
      |                                                                                      ^~~~~~~
      |                                                                                      var1169
output.c:107:111: error: expected ‘)’ before ‘access’
  107 |  }  var1193 = 8 * 8 ;  var1194 = sizeof cast #TYPE ;  var1195 = var1193 * var1194 ;  var1196 = memcpy ( var150 access ( 0 ) , var141 , var1195 ) ; ; findBestChild ( var140 , var140 , var148 , var150 , var151 , var147 , 0 , 0 ref var145 , 0 ref var146 , var152 ) ; ; int var156 = 0 - 1 ; int var157 = var158 ; { int var159 = 0 ; label_101:
      |                                                                                                       ~       ^~~~~~~
      |                                                                                                               )
output.c:107:96: error: too few arguments to function ‘memcpy’
  107 |  }  var1193 = 8 * 8 ;  var1194 = sizeof cast #TYPE ;  var1195 = var1193 * var1194 ;  var1196 = memcpy ( var150 access ( 0 ) , var141 , var1195 ) ; ; findBestChild ( var140 , var140 , var148 , var150 , var151 , var147 , 0 , 0 ref var145 , 0 ref var146 , var152 ) ; ; int var156 = 0 - 1 ; int var157 = var158 ; { int var159 = 0 ; label_101:
      |                                                                                                ^~~~~~
/usr/include/string.h:43:14: note: declared here
   43 | extern void *memcpy (void *__restrict __dest, const void *__restrict __src,
      |              ^~~~~~
output.c:107:225: error: expected ‘)’ before ‘ref’
  107 |  }  var1193 = 8 * 8 ;  var1194 = sizeof cast #TYPE ;  var1195 = var1193 * var1194 ;  var1196 = memcpy ( var150 access ( 0 ) , var141 , var1195 ) ; ; findBestChild ( var140 , var140 , var148 , var150 , var151 , var147 , 0 , 0 ref var145 , 0 ref var146 , var152 ) ; ; int var156 = 0 - 1 ; int var157 = var158 ; { int var159 = 0 ; label_101:
      |                                                                                                                                                                    ~                                                            ^~~~
      |                                                                                                                                                                                                                                 )
output.c:107:150: error: too few arguments to function ‘findBestChild’
  107 |  }  var1193 = 8 * 8 ;  var1194 = sizeof cast #TYPE ;  var1195 = var1193 * var1194 ;  var1196 = memcpy ( var150 access ( 0 ) , var141 , var1195 ) ; ; findBestChild ( var140 , var140 , var148 , var150 , var151 , var147 , 0 , 0 ref var145 , 0 ref var146 , var152 ) ; ; int var156 = 0 - 1 ; int var157 = var158 ; { int var159 = 0 ; label_101:
      |                                                                                                                                                      ^~~~~~~~~~~~~
output.c:99:47: note: declared here
   99 |  } int var239 = var96 ; return var239 ; } int findBestChild ( int var99 , int var100 , int * var101 , int * * var102 , int * * var103 , int var104 , int var105 , size_t * var106 , size_t * var107 , int * var108 ) { int var576 = var0 ; if ( var576 ) { int var577 = var100 == 0 ; if ( var577 ) { printf ( "Finding the best move for BLACK\n" ) ; ; } else { printf ( "Finding the best move for WHITE\n" ) ; ; } printBoard ( var102 access ( var105 ) ) ; ;  var1043 = 1 == 1 ;  var1044 = var105 & var1043 ;  var1045 = int var578 = var1044 ; if ( var578 ) { printf ( "At depth %d, which is a min layer\n" , var105 ) ; ; } else { printf ( "At depth %d, which is a max layer\n" , var105 ) ; ; } int var579 = var105 > 0 ; if ( var579 ) {  var1046 = var105 - 1 ;  var1047 = var101 [ 0 ] ;  var1048 = printf ( "Parent scanning progress: %d/%d\n" , var1047 , 8 * 8 ) ; ; } else { } } else { }  var1049 = var104 - 1 ;  var1050 = var105 == var1049 ;  var1051 = int var580 = var1050 ; if ( var580 ) { int var114 = getHeuristicValue ( var99 , var102 access ( var105 ) ) ; ; int var581 = var0 ; if ( var581 ) { printf ( "Heuristic Value calculated at depth %d: %d\n" , var105 , var114 ) ; ; } else { }  var1052 = var106 [ 0 ] ;  var1053 = var1052 ; var1052 = var1052 + 1 ; int var240 = var114 ; return var240 ; } else { } int var116 = getValidMoves ( var102 access ( var105 ) , var103 access ( var105 ) , var100 ) ; ; int var582 = var0 ; if ( var582 ) { printf ( "%d valid moves possible\n" , var116 ) ; ; } else { } var101 [ 0 ] var105 ) = 0 ; int var583 = var116 == 0 ; if ( var583 ) {  var1054 = var105 + 1 ;  var1055 = var102 [ 0 ] ;  var1056 =  var1057 = 8 * 8 ;  var1058 = sizeof cast #TYPE ;  var1059 = var1057 * var1058 ;  var1060 = memcpy ( var1055 , var102 access ( var105 ) , var1059 ) ; ;  var1061 = var105 + 1 ;  var1062 = var108 [ 0 ] ;  var1063 = var1062 = var119 ; int var120 = findBestChild ( var99 , var100 ^ 1 , var101 , var102 , var103 , var104 , var105 + 1 , var106 , var107 , var108 ) ; ;  var1064 = var105 - 1 ;  var1065 = var103 [ 0 ] ;  var1066 = var105 - 1 ;  var1067 = var101 [ 0 ] ;  var1068 = var1065 [ 0 ] ;  var1069 = var1068 = var120 ; int var241 = var120 ; return var241 ; } else { }  var1070 = var105 % 2 ;  var1071 = var1070 == 0 ;  var1072 = int var121 = var1071 ; int var122 = var123 ; label_93:
      |                                               ^~~~~~~~~~~~~
output.c:107:301: error: ‘var158’ undeclared (first use in this function); did you mean ‘var157’?
  107 |  }  var1193 = 8 * 8 ;  var1194 = sizeof cast #TYPE ;  var1195 = var1193 * var1194 ;  var1196 = memcpy ( var150 access ( 0 ) , var141 , var1195 ) ; ; findBestChild ( var140 , var140 , var148 , var150 , var151 , var147 , 0 , 0 ref var145 , 0 ref var146 , var152 ) ; ; int var156 = 0 - 1 ; int var157 = var158 ; { int var159 = 0 ; label_101:
      |                                                                                                                                                                                                                                                                                                             ^~~~~~
      |                                                                                                                                                                                                                                                                                                             var157
output.c:108:3: error: ‘var1197’ undeclared (first use in this function); did you mean ‘var1167’?
  108 |   var1197 = 8 * 8 ;  var1198 = var159 < var1197 ;  var1199 = var151 [ 0 ] ;  var1200 = var1199 [ 0 ] ;  var1201 = var1200 > var157 ;  var1202 = int var607 = var1201 ; if ( var607 ) { var156 = var159 ;  var1203 = var151 [ 0 ] ;  var1204 = var1203 [ 0 ] ;  var1205 = var157 = var1204 ; } else { } var159 ; var159 = var159 + 1 ; goto label_101 ; } label_102:
      |   ^~~~~~~
      |   var1167
output.c:108:22: error: ‘var1198’ undeclared (first use in this function); did you mean ‘var1168’?
  108 |   var1197 = 8 * 8 ;  var1198 = var159 < var1197 ;  var1199 = var151 [ 0 ] ;  var1200 = var1199 [ 0 ] ;  var1201 = var1200 > var157 ;  var1202 = int var607 = var1201 ; if ( var607 ) { var156 = var159 ;  var1203 = var151 [ 0 ] ;  var1204 = var1203 [ 0 ] ;  var1205 = var157 = var1204 ; } else { } var159 ; var159 = var159 + 1 ; goto label_101 ; } label_102:
      |                      ^~~~~~~
      |                      var1168
output.c:108:52: error: ‘var1199’ undeclared (first use in this function); did you mean ‘var1169’?
  108 |   var1197 = 8 * 8 ;  var1198 = var159 < var1197 ;  var1199 = var151 [ 0 ] ;  var1200 = var1199 [ 0 ] ;  var1201 = var1200 > var157 ;  var1202 = int var607 = var1201 ; if ( var607 ) { var156 = var159 ;  var1203 = var151 [ 0 ] ;  var1204 = var1203 [ 0 ] ;  var1205 = var157 = var1204 ; } else { } var159 ; var159 = var159 + 1 ; goto label_101 ; } label_102:
      |                                                    ^~~~~~~
      |                                                    var1169
output.c:108:78: error: ‘var1200’ undeclared (first use in this function); did you mean ‘var1020’?
  108 |   var1197 = 8 * 8 ;  var1198 = var159 < var1197 ;  var1199 = var151 [ 0 ] ;  var1200 = var1199 [ 0 ] ;  var1201 = var1200 > var157 ;  var1202 = int var607 = var1201 ; if ( var607 ) { var156 = var159 ;  var1203 = var151 [ 0 ] ;  var1204 = var1203 [ 0 ] ;  var1205 = var157 = var1204 ; } else { } var159 ; var159 = var159 + 1 ; goto label_101 ; } label_102:
      |                                                                              ^~~~~~~
      |                                                                              var1020
output.c:108:105: error: ‘var1201’ undeclared (first use in this function); did you mean ‘var1021’?
  108 |   var1197 = 8 * 8 ;  var1198 = var159 < var1197 ;  var1199 = var151 [ 0 ] ;  var1200 = var1199 [ 0 ] ;  var1201 = var1200 > var157 ;  var1202 = int var607 = var1201 ; if ( var607 ) { var156 = var159 ;  var1203 = var151 [ 0 ] ;  var1204 = var1203 [ 0 ] ;  var1205 = var157 = var1204 ; } else { } var159 ; var159 = var159 + 1 ; goto label_101 ; } label_102:
      |                                                                                                         ^~~~~~~
      |                                                                                                         var1021
output.c:108:135: error: ‘var1202’ undeclared (first use in this function); did you mean ‘var1022’?
  108 |   var1197 = 8 * 8 ;  var1198 = var159 < var1197 ;  var1199 = var151 [ 0 ] ;  var1200 = var1199 [ 0 ] ;  var1201 = var1200 > var157 ;  var1202 = int var607 = var1201 ; if ( var607 ) { var156 = var159 ;  var1203 = var151 [ 0 ] ;  var1204 = var1203 [ 0 ] ;  var1205 = var157 = var1204 ; } else { } var159 ; var159 = var159 + 1 ; goto label_101 ; } label_102:
      |                                                                                                                                       ^~~~~~~
      |                                                                                                                                       var1022
output.c:108:145: error: expected expression before ‘int’
  108 |   var1197 = 8 * 8 ;  var1198 = var159 < var1197 ;  var1199 = var151 [ 0 ] ;  var1200 = var1199 [ 0 ] ;  var1201 = var1200 > var157 ;  var1202 = int var607 = var1201 ; if ( var607 ) { var156 = var159 ;  var1203 = var151 [ 0 ] ;  var1204 = var1203 [ 0 ] ;  var1205 = var157 = var1204 ; } else { } var159 ; var159 = var159 + 1 ; goto label_101 ; } label_102:
      |                                                                                                                                                 ^~~
output.c:108:173: error: ‘var607’ undeclared (first use in this function); did you mean ‘var606’?
  108 |   var1197 = 8 * 8 ;  var1198 = var159 < var1197 ;  var1199 = var151 [ 0 ] ;  var1200 = var1199 [ 0 ] ;  var1201 = var1200 > var157 ;  var1202 = int var607 = var1201 ; if ( var607 ) { var156 = var159 ;  var1203 = var151 [ 0 ] ;  var1204 = var1203 [ 0 ] ;  var1205 = var157 = var1204 ; } else { } var159 ; var159 = var159 + 1 ; goto label_101 ; } label_102:
      |                                                                                                                                                                             ^~~~~~
      |                                                                                                                                                                             var606
output.c:108:203: error: ‘var1203’ undeclared (first use in this function); did you mean ‘var1023’?
  108 |   var1197 = 8 * 8 ;  var1198 = var159 < var1197 ;  var1199 = var151 [ 0 ] ;  var1200 = var1199 [ 0 ] ;  var1201 = var1200 > var157 ;  var1202 = int var607 = var1201 ; if ( var607 ) { var156 = var159 ;  var1203 = var151 [ 0 ] ;  var1204 = var1203 [ 0 ] ;  var1205 = var157 = var1204 ; } else { } var159 ; var159 = var159 + 1 ; goto label_101 ; } label_102:
      |                                                                                                                                                                                                           ^~~~~~~
      |                                                                                                                                                                                                           var1023
output.c:108:229: error: ‘var1204’ undeclared (first use in this function); did you mean ‘var1024’?
  108 |   var1197 = 8 * 8 ;  var1198 = var159 < var1197 ;  var1199 = var151 [ 0 ] ;  var1200 = var1199 [ 0 ] ;  var1201 = var1200 > var157 ;  var1202 = int var607 = var1201 ; if ( var607 ) { var156 = var159 ;  var1203 = var151 [ 0 ] ;  var1204 = var1203 [ 0 ] ;  var1205 = var157 = var1204 ; } else { } var159 ; var159 = var159 + 1 ; goto label_101 ; } label_102:
      |                                                                                                                                                                                                                                     ^~~~~~~
      |                                                                                                                                                                                                                                     var1024
output.c:108:256: error: ‘var1205’ undeclared (first use in this function); did you mean ‘var1405’?
  108 |   var1197 = 8 * 8 ;  var1198 = var159 < var1197 ;  var1199 = var151 [ 0 ] ;  var1200 = var1199 [ 0 ] ;  var1201 = var1200 > var157 ;  var1202 = int var607 = var1201 ; if ( var607 ) { var156 = var159 ;  var1203 = var151 [ 0 ] ;  var1204 = var1203 [ 0 ] ;  var1205 = var157 = var1204 ; } else { } var159 ; var159 = var159 + 1 ; goto label_101 ; } label_102:
      |                                                                                                                                                                                                                                                                ^~~~~~~
      |                                                                                                                                                                                                                                                                var1405
output.c: At top level:
output.c:109:24: error: expected identifier or ‘(’ before ‘if’
  109 |  } int var608 = var0 ; if ( var608 ) { printf ( "Final values of each move. (Maximize this)\n" ) ; ; printBoard ( var151 access ( 0 ) ) ; ; } else { } printf ( "Computer search depth = %d\n" , var2 ) ; ; printf ( "Best move value = %d\n" , var157 ) ; ; printf ( "Computer thinks the best move is %d\n" , var156 + 1 ) ; ;  var1206 = 0 - 1 ;  var1207 = var156 == var1206 ;  var1208 = int var609 = var1207 ; if ( var609 ) { int var610 = var0 ; if ( var610 ) { printf ( "The computer thinks it is going to lose no matter what.\n" ) ; ; } else { } int * var162 = #3H ( ) ; getValidMoves ( var141 , var162 , var140 ) ; ; { int var163 = 0 ; label_103:
      |                        ^~
output.c:109:143: error: expected identifier or ‘(’ before ‘else’
  109 |  } int var608 = var0 ; if ( var608 ) { printf ( "Final values of each move. (Maximize this)\n" ) ; ; printBoard ( var151 access ( 0 ) ) ; ; } else { } printf ( "Computer search depth = %d\n" , var2 ) ; ; printf ( "Best move value = %d\n" , var157 ) ; ; printf ( "Computer thinks the best move is %d\n" , var156 + 1 ) ; ;  var1206 = 0 - 1 ;  var1207 = var156 == var1206 ;  var1208 = int var609 = var1207 ; if ( var609 ) { int var610 = var0 ; if ( var610 ) { printf ( "The computer thinks it is going to lose no matter what.\n" ) ; ; } else { } int * var162 = #3H ( ) ; getValidMoves ( var141 , var162 , var140 ) ; ; { int var163 = 0 ; label_103:
      |                                                                                                                                               ^~~~
output.c:109:161: error: expected declaration specifiers or ‘...’ before string constant
  109 |  } int var608 = var0 ; if ( var608 ) { printf ( "Final values of each move. (Maximize this)\n" ) ; ; printBoard ( var151 access ( 0 ) ) ; ; } else { } printf ( "Computer search depth = %d\n" , var2 ) ; ; printf ( "Best move value = %d\n" , var157 ) ; ; printf ( "Computer thinks the best move is %d\n" , var156 + 1 ) ; ;  var1206 = 0 - 1 ;  var1207 = var156 == var1206 ;  var1208 = int var609 = var1207 ; if ( var609 ) { int var610 = var0 ; if ( var610 ) { printf ( "The computer thinks it is going to lose no matter what.\n" ) ; ; } else { } int * var162 = #3H ( ) ; getValidMoves ( var141 , var162 , var140 ) ; ; { int var163 = 0 ; label_103:
      |                                                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
output.c:109:194: error: unknown type name ‘var2’
  109 |  } int var608 = var0 ; if ( var608 ) { printf ( "Final values of each move. (Maximize this)\n" ) ; ; printBoard ( var151 access ( 0 ) ) ; ; } else { } printf ( "Computer search depth = %d\n" , var2 ) ; ; printf ( "Best move value = %d\n" , var157 ) ; ; printf ( "Computer thinks the best move is %d\n" , var156 + 1 ) ; ;  var1206 = 0 - 1 ;  var1207 = var156 == var1206 ;  var1208 = int var609 = var1207 ; if ( var609 ) { int var610 = var0 ; if ( var610 ) { printf ( "The computer thinks it is going to lose no matter what.\n" ) ; ; } else { } int * var162 = #3H ( ) ; getValidMoves ( var141 , var162 , var140 ) ; ; { int var163 = 0 ; label_103:
      |                                                                                                                                                                                                  ^~~~
output.c:109:214: error: expected declaration specifiers or ‘...’ before string constant
  109 |  } int var608 = var0 ; if ( var608 ) { printf ( "Final values of each move. (Maximize this)\n" ) ; ; printBoard ( var151 access ( 0 ) ) ; ; } else { } printf ( "Computer search depth = %d\n" , var2 ) ; ; printf ( "Best move value = %d\n" , var157 ) ; ; printf ( "Computer thinks the best move is %d\n" , var156 + 1 ) ; ;  var1206 = 0 - 1 ;  var1207 = var156 == var1206 ;  var1208 = int var609 = var1207 ; if ( var609 ) { int var610 = var0 ; if ( var610 ) { printf ( "The computer thinks it is going to lose no matter what.\n" ) ; ; } else { } int * var162 = #3H ( ) ; getValidMoves ( var141 , var162 , var140 ) ; ; { int var163 = 0 ; label_103:
      |                                                                                                                                                                                                                      ^~~~~~~~~~~~~~~~~~~~~~~~
output.c:109:241: error: unknown type name ‘var157’
  109 |  } int var608 = var0 ; if ( var608 ) { printf ( "Final values of each move. (Maximize this)\n" ) ; ; printBoard ( var151 access ( 0 ) ) ; ; } else { } printf ( "Computer search depth = %d\n" , var2 ) ; ; printf ( "Best move value = %d\n" , var157 ) ; ; printf ( "Computer thinks the best move is %d\n" , var156 + 1 ) ; ;  var1206 = 0 - 1 ;  var1207 = var156 == var1206 ;  var1208 = int var609 = var1207 ; if ( var609 ) { int var610 = var0 ; if ( var610 ) { printf ( "The computer thinks it is going to lose no matter what.\n" ) ; ; } else { } int * var162 = #3H ( ) ; getValidMoves ( var141 , var162 , var140 ) ; ; { int var163 = 0 ; label_103:
      |                                                                                                                                                                                                                                                 ^~~~~~
output.c:109:263: error: expected declaration specifiers or ‘...’ before string constant
  109 |  } int var608 = var0 ; if ( var608 ) { printf ( "Final values of each move. (Maximize this)\n" ) ; ; printBoard ( var151 access ( 0 ) ) ; ; } else { } printf ( "Computer search depth = %d\n" , var2 ) ; ; printf ( "Best move value = %d\n" , var157 ) ; ; printf ( "Computer thinks the best move is %d\n" , var156 + 1 ) ; ;  var1206 = 0 - 1 ;  var1207 = var156 == var1206 ;  var1208 = int var609 = var1207 ; if ( var609 ) { int var610 = var0 ; if ( var610 ) { printf ( "The computer thinks it is going to lose no matter what.\n" ) ; ; } else { } int * var162 = #3H ( ) ; getValidMoves ( var141 , var162 , var140 ) ; ; { int var163 = 0 ; label_103:
      |                                                                                                                                                                                                                                                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
output.c:109:305: error: unknown type name ‘var156’
  109 |  } int var608 = var0 ; if ( var608 ) { printf ( "Final values of each move. (Maximize this)\n" ) ; ; printBoard ( var151 access ( 0 ) ) ; ; } else { } printf ( "Computer search depth = %d\n" , var2 ) ; ; printf ( "Best move value = %d\n" , var157 ) ; ; printf ( "Computer thinks the best move is %d\n" , var156 + 1 ) ; ;  var1206 = 0 - 1 ;  var1207 = var156 == var1206 ;  var1208 = int var609 = var1207 ; if ( var609 ) { int var610 = var0 ; if ( var610 ) { printf ( "The computer thinks it is going to lose no matter what.\n" ) ; ; } else { } int * var162 = #3H ( ) ; getValidMoves ( var141 , var162 , var140 ) ; ; { int var163 = 0 ; label_103:
      |                                                                                                                                                                                                                                                                                                                 ^~~~~~
output.c:109:323: warning: data definition has no type or storage class
  109 |  } int var608 = var0 ; if ( var608 ) { printf ( "Final values of each move. (Maximize this)\n" ) ; ; printBoard ( var151 access ( 0 ) ) ; ; } else { } printf ( "Computer search depth = %d\n" , var2 ) ; ; printf ( "Best move value = %d\n" , var157 ) ; ; printf ( "Computer thinks the best move is %d\n" , var156 + 1 ) ; ;  var1206 = 0 - 1 ;  var1207 = var156 == var1206 ;  var1208 = int var609 = var1207 ; if ( var609 ) { int var610 = var0 ; if ( var610 ) { printf ( "The computer thinks it is going to lose no matter what.\n" ) ; ; } else { } int * var162 = #3H ( ) ; getValidMoves ( var141 , var162 , var140 ) ; ; { int var163 = 0 ; label_103:
      |                                                                                                                                                                                                                                                                                                                                   ^~~~~~~
output.c:109:323: error: type defaults to ‘int’ in declaration of ‘var1206’ [-Wimplicit-int]
output.c:109:342: warning: data definition has no type or storage class
  109 |  } int var608 = var0 ; if ( var608 ) { printf ( "Final values of each move. (Maximize this)\n" ) ; ; printBoard ( var151 access ( 0 ) ) ; ; } else { } printf ( "Computer search depth = %d\n" , var2 ) ; ; printf ( "Best move value = %d\n" , var157 ) ; ; printf ( "Computer thinks the best move is %d\n" , var156 + 1 ) ; ;  var1206 = 0 - 1 ;  var1207 = var156 == var1206 ;  var1208 = int var609 = var1207 ; if ( var609 ) { int var610 = var0 ; if ( var610 ) { printf ( "The computer thinks it is going to lose no matter what.\n" ) ; ; } else { } int * var162 = #3H ( ) ; getValidMoves ( var141 , var162 , var140 ) ; ; { int var163 = 0 ; label_103:
      |                                                                                                                                                                                                                                                                                                                                                      ^~~~~~~
output.c:109:342: error: type defaults to ‘int’ in declaration of ‘var1207’ [-Wimplicit-int]
output.c:109:352: error: ‘var156’ undeclared here (not in a function); did you mean ‘var956’?
  109 |  } int var608 = var0 ; if ( var608 ) { printf ( "Final values of each move. (Maximize this)\n" ) ; ; printBoard ( var151 access ( 0 ) ) ; ; } else { } printf ( "Computer search depth = %d\n" , var2 ) ; ; printf ( "Best move value = %d\n" , var157 ) ; ; printf ( "Computer thinks the best move is %d\n" , var156 + 1 ) ; ;  var1206 = 0 - 1 ;  var1207 = var156 == var1206 ;  var1208 = int var609 = var1207 ; if ( var609 ) { int var610 = var0 ; if ( var610 ) { printf ( "The computer thinks it is going to lose no matter what.\n" ) ; ; } else { } int * var162 = #3H ( ) ; getValidMoves ( var141 , var162 , var140 ) ; ; { int var163 = 0 ; label_103:
      |                                                                                                                                                                                                                                                                                                                                                                ^~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                var956
output.c:109:373: warning: data definition has no type or storage class
  109 |  } int var608 = var0 ; if ( var608 ) { printf ( "Final values of each move. (Maximize this)\n" ) ; ; printBoard ( var151 access ( 0 ) ) ; ; } else { } printf ( "Computer search depth = %d\n" , var2 ) ; ; printf ( "Best move value = %d\n" , var157 ) ; ; printf ( "Computer thinks the best move is %d\n" , var156 + 1 ) ; ;  var1206 = 0 - 1 ;  var1207 = var156 == var1206 ;  var1208 = int var609 = var1207 ; if ( var609 ) { int var610 = var0 ; if ( var610 ) { printf ( "The computer thinks it is going to lose no matter what.\n" ) ; ; } else { } int * var162 = #3H ( ) ; getValidMoves ( var141 , var162 , var140 ) ; ; { int var163 = 0 ; label_103:
      |                                                                                                                                                                                                                                                                                                                                                                                     ^~~~~~~
output.c:109:373: error: type defaults to ‘int’ in declaration of ‘var1208’ [-Wimplicit-int]
output.c:109:383: error: expected expression before ‘int’
  109 |  } int var608 = var0 ; if ( var608 ) { printf ( "Final values of each move. (Maximize this)\n" ) ; ; printBoard ( var151 access ( 0 ) ) ; ; } else { } printf ( "Computer search depth = %d\n" , var2 ) ; ; printf ( "Best move value = %d\n" , var157 ) ; ; printf ( "Computer thinks the best move is %d\n" , var156 + 1 ) ; ;  var1206 = 0 - 1 ;  var1207 = var156 == var1206 ;  var1208 = int var609 = var1207 ; if ( var609 ) { int var610 = var0 ; if ( var610 ) { printf ( "The computer thinks it is going to lose no matter what.\n" ) ; ; } else { } int * var162 = #3H ( ) ; getValidMoves ( var141 , var162 , var140 ) ; ; { int var163 = 0 ; label_103:
      |                                                                                                                                                                                                                                                                                                                                                                                               ^~~
output.c:109:406: error: expected identifier or ‘(’ before ‘if’
  109 |  } int var608 = var0 ; if ( var608 ) { printf ( "Final values of each move. (Maximize this)\n" ) ; ; printBoard ( var151 access ( 0 ) ) ; ; } else { } printf ( "Computer search depth = %d\n" , var2 ) ; ; printf ( "Best move value = %d\n" , var157 ) ; ; printf ( "Computer thinks the best move is %d\n" , var156 + 1 ) ; ;  var1206 = 0 - 1 ;  var1207 = var156 == var1206 ;  var1208 = int var609 = var1207 ; if ( var609 ) { int var610 = var0 ; if ( var610 ) { printf ( "The computer thinks it is going to lose no matter what.\n" ) ; ; } else { } int * var162 = #3H ( ) ; getValidMoves ( var141 , var162 , var140 ) ; ; { int var163 = 0 ; label_103:
      |                                                                                                                                                                                                                                                                                                                                                                                                                      ^~
output.c:109:559: error: stray ‘#’ in program
  109 |  } int var608 = var0 ; if ( var608 ) { printf ( "Final values of each move. (Maximize this)\n" ) ; ; printBoard ( var151 access ( 0 ) ) ; ; } else { } printf ( "Computer search depth = %d\n" , var2 ) ; ; printf ( "Best move value = %d\n" , var157 ) ; ; printf ( "Computer thinks the best move is %d\n" , var156 + 1 ) ; ;  var1206 = 0 - 1 ;  var1207 = var156 == var1206 ;  var1208 = int var609 = var1207 ; if ( var609 ) { int var610 = var0 ; if ( var610 ) { printf ( "The computer thinks it is going to lose no matter what.\n" ) ; ; } else { } int * var162 = #3H ( ) ; getValidMoves ( var141 , var162 , var140 ) ; ; { int var163 = 0 ; label_103:
      |
output.c:109:560: error: invalid suffix "H" on integer constant
  109 |  } int var608 = var0 ; if ( var608 ) { printf ( "Final values of each move. (Maximize this)\n" ) ; ; printBoard ( var151 access ( 0 ) ) ; ; } else { } printf ( "Computer search depth = %d\n" , var2 ) ; ; printf ( "Best move value = %d\n" , var157 ) ; ; printf ( "Computer thinks the best move is %d\n" , var156 + 1 ) ; ;  var1206 = 0 - 1 ;  var1207 = var156 == var1206 ;  var1208 = int var609 = var1207 ; if ( var609 ) { int var610 = var0 ; if ( var610 ) { printf ( "The computer thinks it is going to lose no matter what.\n" ) ; ; } else { } int * var162 = #3H ( ) ; getValidMoves ( var141 , var162 , var140 ) ; ; { int var163 = 0 ; label_103:
      |~
output.c:111:4: error: expected identifier or ‘(’ before ‘else’
  111 |  } else { } } var142 ;  var1214 = clock ( ) - clock ( ) ;  var1215 = ( double ) var1214 ;  var1216 = var1215 / var166 ;  var1217 = double var165 = var1216 ; printf ( "Computer examined %zu states (%zu nodes)!\n" , var145 , var146 ) ; ; printf ( "Computer took %.2f seconds to decide!\n" , var165 ) ; ; free ( var148 ) ; ; { int var168 = 0 ; label_105:
      |    ^~~~
output.c:111:13: error: expected identifier or ‘(’ before ‘}’ token
  111 |  } else { } } var142 ;  var1214 = clock ( ) - clock ( ) ;  var1215 = ( double ) var1214 ;  var1216 = var1215 / var166 ;  var1217 = double var165 = var1216 ; printf ( "Computer examined %zu states (%zu nodes)!\n" , var145 , var146 ) ; ; printf ( "Computer took %.2f seconds to decide!\n" , var165 ) ; ; free ( var148 ) ; ; { int var168 = 0 ; label_105:
      |             ^
output.c:111:15: warning: data definition has no type or storage class
  111 |  } else { } } var142 ;  var1214 = clock ( ) - clock ( ) ;  var1215 = ( double ) var1214 ;  var1216 = var1215 / var166 ;  var1217 = double var165 = var1216 ; printf ( "Computer examined %zu states (%zu nodes)!\n" , var145 , var146 ) ; ; printf ( "Computer took %.2f seconds to decide!\n" , var165 ) ; ; free ( var148 ) ; ; { int var168 = 0 ; label_105:
      |               ^~~~~~
output.c:111:15: error: type defaults to ‘int’ in declaration of ‘var142’ [-Wimplicit-int]
output.c:111:25: warning: data definition has no type or storage class
  111 |  } else { } } var142 ;  var1214 = clock ( ) - clock ( ) ;  var1215 = ( double ) var1214 ;  var1216 = var1215 / var166 ;  var1217 = double var165 = var1216 ; printf ( "Computer examined %zu states (%zu nodes)!\n" , var145 , var146 ) ; ; printf ( "Computer took %.2f seconds to decide!\n" , var165 ) ; ; free ( var148 ) ; ; { int var168 = 0 ; label_105:
      |                         ^~~~~~~
output.c:111:25: error: type defaults to ‘int’ in declaration of ‘var1214’ [-Wimplicit-int]
output.c:111:35: error: initializer element is not constant
  111 |  } else { } } var142 ;  var1214 = clock ( ) - clock ( ) ;  var1215 = ( double ) var1214 ;  var1216 = var1215 / var166 ;  var1217 = double var165 = var1216 ; printf ( "Computer examined %zu states (%zu nodes)!\n" , var145 , var146 ) ; ; printf ( "Computer took %.2f seconds to decide!\n" , var165 ) ; ; free ( var148 ) ; ; { int var168 = 0 ; label_105:
      |                                   ^~~~~
output.c:111:60: warning: data definition has no type or storage class
  111 |  } else { } } var142 ;  var1214 = clock ( ) - clock ( ) ;  var1215 = ( double ) var1214 ;  var1216 = var1215 / var166 ;  var1217 = double var165 = var1216 ; printf ( "Computer examined %zu states (%zu nodes)!\n" , var145 , var146 ) ; ; printf ( "Computer took %.2f seconds to decide!\n" , var165 ) ; ; free ( var148 ) ; ; { int var168 = 0 ; label_105:
      |                                                            ^~~~~~~
output.c:111:60: error: type defaults to ‘int’ in declaration of ‘var1215’ [-Wimplicit-int]
output.c:111:70: error: initializer element is not constant
  111 |  } else { } } var142 ;  var1214 = clock ( ) - clock ( ) ;  var1215 = ( double ) var1214 ;  var1216 = var1215 / var166 ;  var1217 = double var165 = var1216 ; printf ( "Computer examined %zu states (%zu nodes)!\n" , var145 , var146 ) ; ; printf ( "Computer took %.2f seconds to decide!\n" , var165 ) ; ; free ( var148 ) ; ; { int var168 = 0 ; label_105:
      |                                                                      ^
output.c:111:92: warning: data definition has no type or storage class
  111 |  } else { } } var142 ;  var1214 = clock ( ) - clock ( ) ;  var1215 = ( double ) var1214 ;  var1216 = var1215 / var166 ;  var1217 = double var165 = var1216 ; printf ( "Computer examined %zu states (%zu nodes)!\n" , var145 , var146 ) ; ; printf ( "Computer took %.2f seconds to decide!\n" , var165 ) ; ; free ( var148 ) ; ; { int var168 = 0 ; label_105:
      |                                                                                            ^~~~~~~
output.c:111:92: error: type defaults to ‘int’ in declaration of ‘var1216’ [-Wimplicit-int]
output.c:111:112: error: ‘var166’ undeclared here (not in a function); did you mean ‘var966’?
  111 |  } else { } } var142 ;  var1214 = clock ( ) - clock ( ) ;  var1215 = ( double ) var1214 ;  var1216 = var1215 / var166 ;  var1217 = double var165 = var1216 ; printf ( "Computer examined %zu states (%zu nodes)!\n" , var145 , var146 ) ; ; printf ( "Computer took %.2f seconds to decide!\n" , var165 ) ; ; free ( var148 ) ; ; { int var168 = 0 ; label_105:
      |                                                                                                                ^~~~~~
      |                                                                                                                var966
output.c:111:122: warning: data definition has no type or storage class
  111 |  } else { } } var142 ;  var1214 = clock ( ) - clock ( ) ;  var1215 = ( double ) var1214 ;  var1216 = var1215 / var166 ;  var1217 = double var165 = var1216 ; printf ( "Computer examined %zu states (%zu nodes)!\n" , var145 , var146 ) ; ; printf ( "Computer took %.2f seconds to decide!\n" , var165 ) ; ; free ( var148 ) ; ; { int var168 = 0 ; label_105:
      |                                                                                                                          ^~~~~~~
output.c:111:122: error: type defaults to ‘int’ in declaration of ‘var1217’ [-Wimplicit-int]
output.c:111:132: error: expected expression before ‘double’
  111 |  } else { } } var142 ;  var1214 = clock ( ) - clock ( ) ;  var1215 = ( double ) var1214 ;  var1216 = var1215 / var166 ;  var1217 = double var165 = var1216 ; printf ( "Computer examined %zu states (%zu nodes)!\n" , var145 , var146 ) ; ; printf ( "Computer took %.2f seconds to decide!\n" , var165 ) ; ; free ( var148 ) ; ; { int var168 = 0 ; label_105:
      |                                                                                                                                    ^~~~~~
output.c:111:167: error: expected declaration specifiers or ‘...’ before string constant
  111 |  } else { } } var142 ;  var1214 = clock ( ) - clock ( ) ;  var1215 = ( double ) var1214 ;  var1216 = var1215 / var166 ;  var1217 = double var165 = var1216 ; printf ( "Computer examined %zu states (%zu nodes)!\n" , var145 , var146 ) ; ; printf ( "Computer took %.2f seconds to decide!\n" , var165 ) ; ; free ( var148 ) ; ; { int var168 = 0 ; label_105:
      |                                                                                                                                                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
output.c:111:215: error: unknown type name ‘var145’
  111 |  } else { } } var142 ;  var1214 = clock ( ) - clock ( ) ;  var1215 = ( double ) var1214 ;  var1216 = var1215 / var166 ;  var1217 = double var165 = var1216 ; printf ( "Computer examined %zu states (%zu nodes)!\n" , var145 , var146 ) ; ; printf ( "Computer took %.2f seconds to decide!\n" , var165 ) ; ; free ( var148 ) ; ; { int var168 = 0 ; label_105:
      |                                                                                                                                                                                                                       ^~~~~~
output.c:111:224: error: unknown type name ‘var146’
  111 |  } else { } } var142 ;  var1214 = clock ( ) - clock ( ) ;  var1215 = ( double ) var1214 ;  var1216 = var1215 / var166 ;  var1217 = double var165 = var1216 ; printf ( "Computer examined %zu states (%zu nodes)!\n" , var145 , var146 ) ; ; printf ( "Computer took %.2f seconds to decide!\n" , var165 ) ; ; free ( var148 ) ; ; { int var168 = 0 ; label_105:
      |                                                                                                                                                                                                                                ^~~~~~
output.c:111:246: error: expected declaration specifiers or ‘...’ before string constant
  111 |  } else { } } var142 ;  var1214 = clock ( ) - clock ( ) ;  var1215 = ( double ) var1214 ;  var1216 = var1215 / var166 ;  var1217 = double var165 = var1216 ; printf ( "Computer examined %zu states (%zu nodes)!\n" , var145 , var146 ) ; ; printf ( "Computer took %.2f seconds to decide!\n" , var165 ) ; ; free ( var148 ) ; ; { int var168 = 0 ; label_105:
      |                                                                                                                                                                                                                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
output.c:111:290: error: unknown type name ‘var165’
  111 |  } else { } } var142 ;  var1214 = clock ( ) - clock ( ) ;  var1215 = ( double ) var1214 ;  var1216 = var1215 / var166 ;  var1217 = double var165 = var1216 ; printf ( "Computer examined %zu states (%zu nodes)!\n" , var145 , var146 ) ; ; printf ( "Computer took %.2f seconds to decide!\n" , var165 ) ; ; free ( var148 ) ; ; { int var168 = 0 ; label_105:
      |                                                                                                                                                                                                                                                                                                  ^~~~~~
output.c:111:303: warning: data definition has no type or storage class
  111 |  } else { } } var142 ;  var1214 = clock ( ) - clock ( ) ;  var1215 = ( double ) var1214 ;  var1216 = var1215 / var166 ;  var1217 = double var165 = var1216 ; printf ( "Computer examined %zu states (%zu nodes)!\n" , var145 , var146 ) ; ; printf ( "Computer took %.2f seconds to decide!\n" , var165 ) ; ; free ( var148 ) ; ; { int var168 = 0 ; label_105:
      |                                                                                                                                                                                                                                                                                                               ^~~~
output.c:111:303: error: type defaults to ‘int’ in declaration of ‘free’ [-Wimplicit-int]
output.c:111:290: error: parameter names (without types) in function declaration [-Wdeclaration-missing-parameter-type]
  111 |  } else { } } var142 ;  var1214 = clock ( ) - clock ( ) ;  var1215 = ( double ) var1214 ;  var1216 = var1215 / var166 ;  var1217 = double var165 = var1216 ; printf ( "Computer examined %zu states (%zu nodes)!\n" , var145 , var146 ) ; ; printf ( "Computer took %.2f seconds to decide!\n" , var165 ) ; ; free ( var148 ) ; ; { int var168 = 0 ; label_105:
      |                                                                                                                                                                                                                                                                                                  ^~~~~~
output.c:111:303: error: conflicting types for ‘free’; have ‘int()’
  111 |  } else { } } var142 ;  var1214 = clock ( ) - clock ( ) ;  var1215 = ( double ) var1214 ;  var1216 = var1215 / var166 ;  var1217 = double var165 = var1216 ; printf ( "Computer examined %zu states (%zu nodes)!\n" , var145 , var146 ) ; ; printf ( "Computer took %.2f seconds to decide!\n" , var165 ) ; ; free ( var148 ) ; ; { int var168 = 0 ; label_105:
      |                                                                                                                                                                                                                                                                                                               ^~~~
/usr/include/stdlib.h:687:13: note: previous declaration of ‘free’ with type ‘void(void *)’
  687 | extern void free (void *__ptr) __THROW;
      |             ^~~~
output.c:111:323: error: expected identifier or ‘(’ before ‘{’ token
  111 |  } else { } } var142 ;  var1214 = clock ( ) - clock ( ) ;  var1215 = ( double ) var1214 ;  var1216 = var1215 / var166 ;  var1217 = double var165 = var1216 ; printf ( "Computer examined %zu states (%zu nodes)!\n" , var145 , var146 ) ; ; printf ( "Computer took %.2f seconds to decide!\n" , var165 ) ; ; free ( var148 ) ; ; { int var168 = 0 ; label_105:
      |                                                                                                                                                                                                                                                                                                                                   ^
output.c:113:4: warning: data definition has no type or storage class
  113 |  } free ( var150 ) ; ; free ( var151 ) ; ; int var246 = var156 ; return var246 ; } int computerPlayer ( int var170 , int * var171 ) { printf ( "Computer is thinking...\n" ) ; ; int var247 = cpuMove ( var170 , var171 ) ; ; return var247 ; } int printScore ( int * var174 ) { int var175 = 0 ; int var176 = 0 ; { int var177 = 0 ; label_107:
      |    ^~~~
output.c:113:4: error: type defaults to ‘int’ in declaration of ‘free’ [-Wimplicit-int]
output.c:113:2: error: parameter names (without types) in function declaration [-Wdeclaration-missing-parameter-type]
  113 |  } free ( var150 ) ; ; free ( var151 ) ; ; int var246 = var156 ; return var246 ; } int computerPlayer ( int var170 , int * var171 ) { printf ( "Computer is thinking...\n" ) ; ; int var247 = cpuMove ( var170 , var171 ) ; ; return var247 ; } int printScore ( int * var174 ) { int var175 = 0 ; int var176 = 0 ; { int var177 = 0 ; label_107:
      |  ^
output.c:113:4: error: conflicting types for ‘free’; have ‘int()’
  113 |  } free ( var150 ) ; ; free ( var151 ) ; ; int var246 = var156 ; return var246 ; } int computerPlayer ( int var170 , int * var171 ) { printf ( "Computer is thinking...\n" ) ; ; int var247 = cpuMove ( var170 , var171 ) ; ; return var247 ; } int printScore ( int * var174 ) { int var175 = 0 ; int var176 = 0 ; { int var177 = 0 ; label_107:
      |    ^~~~
/usr/include/stdlib.h:687:13: note: previous declaration of ‘free’ with type ‘void(void *)’
  687 | extern void free (void *__ptr) __THROW;
      |             ^~~~
output.c:113:24: warning: data definition has no type or storage class
  113 |  } free ( var150 ) ; ; free ( var151 ) ; ; int var246 = var156 ; return var246 ; } int computerPlayer ( int var170 , int * var171 ) { printf ( "Computer is thinking...\n" ) ; ; int var247 = cpuMove ( var170 , var171 ) ; ; return var247 ; } int printScore ( int * var174 ) { int var175 = 0 ; int var176 = 0 ; { int var177 = 0 ; label_107:
      |                        ^~~~
output.c:113:24: error: type defaults to ‘int’ in declaration of ‘free’ [-Wimplicit-int]
output.c:113:2: error: parameter names (without types) in function declaration [-Wdeclaration-missing-parameter-type]
  113 |  } free ( var150 ) ; ; free ( var151 ) ; ; int var246 = var156 ; return var246 ; } int computerPlayer ( int var170 , int * var171 ) { printf ( "Computer is thinking...\n" ) ; ; int var247 = cpuMove ( var170 , var171 ) ; ; return var247 ; } int printScore ( int * var174 ) { int var175 = 0 ; int var176 = 0 ; { int var177 = 0 ; label_107:
      |  ^
output.c:113:24: error: conflicting types for ‘free’; have ‘int()’
  113 |  } free ( var150 ) ; ; free ( var151 ) ; ; int var246 = var156 ; return var246 ; } int computerPlayer ( int var170 , int * var171 ) { printf ( "Computer is thinking...\n" ) ; ; int var247 = cpuMove ( var170 , var171 ) ; ; return var247 ; } int printScore ( int * var174 ) { int var175 = 0 ; int var176 = 0 ; { int var177 = 0 ; label_107:
      |                        ^~~~
/usr/include/stdlib.h:687:13: note: previous declaration of ‘free’ with type ‘void(void *)’
  687 | extern void free (void *__ptr) __THROW;
      |             ^~~~
output.c:113:66: error: expected identifier or ‘(’ before ‘return’
  113 |  } free ( var150 ) ; ; free ( var151 ) ; ; int var246 = var156 ; return var246 ; } int computerPlayer ( int var170 , int * var171 ) { printf ( "Computer is thinking...\n" ) ; ; int var247 = cpuMove ( var170 , var171 ) ; ; return var247 ; } int printScore ( int * var174 ) { int var175 = 0 ; int var176 = 0 ; { int var177 = 0 ; label_107:
      |                                                                  ^~~~~~
output.c:113:82: error: expected identifier or ‘(’ before ‘}’ token
  113 |  } free ( var150 ) ; ; free ( var151 ) ; ; int var246 = var156 ; return var246 ; } int computerPlayer ( int var170 , int * var171 ) { printf ( "Computer is thinking...\n" ) ; ; int var247 = cpuMove ( var170 , var171 ) ; ; return var247 ; } int printScore ( int * var174 ) { int var175 = 0 ; int var176 = 0 ; { int var177 = 0 ; label_107:
      |                                                                                  ^
output.c: In function ‘printScore’:
output.c:114:3: error: ‘var1218’ undeclared (first use in this function); did you mean ‘var1217’?
  114 |   var1218 = 8 * 8 ;  var1219 = var177 < var1218 ;  var1220 = var174 [ 0 ] ;  var1221 = var1220 == 0 ;  var1222 = int var613 = var1221 ; if ( var613 ) { var175 ; var175 = var175 + 1 ; } else {  var1223 = var174 [ 0 ] ;  var1224 = var1223 == 1 ;  var1225 = int var614 = var1224 ; if ( var614 ) { var176 ; var176 = var176 + 1 ; } else { } } var177 ; var177 = var177 + 1 ; goto label_107 ; } label_108:
      |   ^~~~~~~
      |   var1217
output.c:114:22: error: ‘var1219’ undeclared (first use in this function); did you mean ‘var1217’?
  114 |   var1218 = 8 * 8 ;  var1219 = var177 < var1218 ;  var1220 = var174 [ 0 ] ;  var1221 = var1220 == 0 ;  var1222 = int var613 = var1221 ; if ( var613 ) { var175 ; var175 = var175 + 1 ; } else {  var1223 = var174 [ 0 ] ;  var1224 = var1223 == 1 ;  var1225 = int var614 = var1224 ; if ( var614 ) { var176 ; var176 = var176 + 1 ; } else { } } var177 ; var177 = var177 + 1 ; goto label_107 ; } label_108:
      |                      ^~~~~~~
      |                      var1217
output.c:114:52: error: ‘var1220’ undeclared (first use in this function); did you mean ‘var1020’?
  114 |   var1218 = 8 * 8 ;  var1219 = var177 < var1218 ;  var1220 = var174 [ 0 ] ;  var1221 = var1220 == 0 ;  var1222 = int var613 = var1221 ; if ( var613 ) { var175 ; var175 = var175 + 1 ; } else {  var1223 = var174 [ 0 ] ;  var1224 = var1223 == 1 ;  var1225 = int var614 = var1224 ; if ( var614 ) { var176 ; var176 = var176 + 1 ; } else { } } var177 ; var177 = var177 + 1 ; goto label_107 ; } label_108:
      |                                                    ^~~~~~~
      |                                                    var1020
output.c:114:78: error: ‘var1221’ undeclared (first use in this function); did you mean ‘var1021’?
  114 |   var1218 = 8 * 8 ;  var1219 = var177 < var1218 ;  var1220 = var174 [ 0 ] ;  var1221 = var1220 == 0 ;  var1222 = int var613 = var1221 ; if ( var613 ) { var175 ; var175 = var175 + 1 ; } else {  var1223 = var174 [ 0 ] ;  var1224 = var1223 == 1 ;  var1225 = int var614 = var1224 ; if ( var614 ) { var176 ; var176 = var176 + 1 ; } else { } } var177 ; var177 = var177 + 1 ; goto label_107 ; } label_108:
      |                                                                              ^~~~~~~
      |                                                                              var1021
output.c:114:104: error: ‘var1222’ undeclared (first use in this function); did you mean ‘var1022’?
  114 |   var1218 = 8 * 8 ;  var1219 = var177 < var1218 ;  var1220 = var174 [ 0 ] ;  var1221 = var1220 == 0 ;  var1222 = int var613 = var1221 ; if ( var613 ) { var175 ; var175 = var175 + 1 ; } else {  var1223 = var174 [ 0 ] ;  var1224 = var1223 == 1 ;  var1225 = int var614 = var1224 ; if ( var614 ) { var176 ; var176 = var176 + 1 ; } else { } } var177 ; var177 = var177 + 1 ; goto label_107 ; } label_108:
      |                                                                                                        ^~~~~~~
      |                                                                                                        var1022
output.c:114:114: error: expected expression before ‘int’
  114 |   var1218 = 8 * 8 ;  var1219 = var177 < var1218 ;  var1220 = var174 [ 0 ] ;  var1221 = var1220 == 0 ;  var1222 = int var613 = var1221 ; if ( var613 ) { var175 ; var175 = var175 + 1 ; } else {  var1223 = var174 [ 0 ] ;  var1224 = var1223 == 1 ;  var1225 = int var614 = var1224 ; if ( var614 ) { var176 ; var176 = var176 + 1 ; } else { } } var177 ; var177 = var177 + 1 ; goto label_107 ; } label_108:
      |                                                                                                                  ^~~
output.c:114:142: error: ‘var613’ undeclared (first use in this function); did you mean ‘var813’?
  114 |   var1218 = 8 * 8 ;  var1219 = var177 < var1218 ;  var1220 = var174 [ 0 ] ;  var1221 = var1220 == 0 ;  var1222 = int var613 = var1221 ; if ( var613 ) { var175 ; var175 = var175 + 1 ; } else {  var1223 = var174 [ 0 ] ;  var1224 = var1223 == 1 ;  var1225 = int var614 = var1224 ; if ( var614 ) { var176 ; var176 = var176 + 1 ; } else { } } var177 ; var177 = var177 + 1 ; goto label_107 ; } label_108:
      |                                                                                                                                              ^~~~~~
      |                                                                                                                                              var813
output.c:114:194: error: ‘var1223’ undeclared (first use in this function); did you mean ‘var1023’?
  114 |   var1218 = 8 * 8 ;  var1219 = var177 < var1218 ;  var1220 = var174 [ 0 ] ;  var1221 = var1220 == 0 ;  var1222 = int var613 = var1221 ; if ( var613 ) { var175 ; var175 = var175 + 1 ; } else {  var1223 = var174 [ 0 ] ;  var1224 = var1223 == 1 ;  var1225 = int var614 = var1224 ; if ( var614 ) { var176 ; var176 = var176 + 1 ; } else { } } var177 ; var177 = var177 + 1 ; goto label_107 ; } label_108:
      |                                                                                                                                                                                                  ^~~~~~~
      |                                                                                                                                                                                                  var1023
output.c:114:220: error: ‘var1224’ undeclared (first use in this function); did you mean ‘var1214’?
  114 |   var1218 = 8 * 8 ;  var1219 = var177 < var1218 ;  var1220 = var174 [ 0 ] ;  var1221 = var1220 == 0 ;  var1222 = int var613 = var1221 ; if ( var613 ) { var175 ; var175 = var175 + 1 ; } else {  var1223 = var174 [ 0 ] ;  var1224 = var1223 == 1 ;  var1225 = int var614 = var1224 ; if ( var614 ) { var176 ; var176 = var176 + 1 ; } else { } } var177 ; var177 = var177 + 1 ; goto label_107 ; } label_108:
      |                                                                                                                                                                                                                            ^~~~~~~
      |                                                                                                                                                                                                                            var1214
output.c:114:246: error: ‘var1225’ undeclared (first use in this function); did you mean ‘var1215’?
  114 |   var1218 = 8 * 8 ;  var1219 = var177 < var1218 ;  var1220 = var174 [ 0 ] ;  var1221 = var1220 == 0 ;  var1222 = int var613 = var1221 ; if ( var613 ) { var175 ; var175 = var175 + 1 ; } else {  var1223 = var174 [ 0 ] ;  var1224 = var1223 == 1 ;  var1225 = int var614 = var1224 ; if ( var614 ) { var176 ; var176 = var176 + 1 ; } else { } } var177 ; var177 = var177 + 1 ; goto label_107 ; } label_108:
      |                                                                                                                                                                                                                                                      ^~~~~~~
      |                                                                                                                                                                                                                                                      var1215
output.c:114:256: error: expected expression before ‘int’
  114 |   var1218 = 8 * 8 ;  var1219 = var177 < var1218 ;  var1220 = var174 [ 0 ] ;  var1221 = var1220 == 0 ;  var1222 = int var613 = var1221 ; if ( var613 ) { var175 ; var175 = var175 + 1 ; } else {  var1223 = var174 [ 0 ] ;  var1224 = var1223 == 1 ;  var1225 = int var614 = var1224 ; if ( var614 ) { var176 ; var176 = var176 + 1 ; } else { } } var177 ; var177 = var177 + 1 ; goto label_107 ; } label_108:
      |                                                                                                                                                                                                                                                                ^~~
output.c:114:284: error: ‘var614’ undeclared (first use in this function); did you mean ‘var814’?
  114 |   var1218 = 8 * 8 ;  var1219 = var177 < var1218 ;  var1220 = var174 [ 0 ] ;  var1221 = var1220 == 0 ;  var1222 = int var613 = var1221 ; if ( var613 ) { var175 ; var175 = var175 + 1 ; } else {  var1223 = var174 [ 0 ] ;  var1224 = var1223 == 1 ;  var1225 = int var614 = var1224 ; if ( var614 ) { var176 ; var176 = var176 + 1 ; } else { } } var177 ; var177 = var177 + 1 ; goto label_107 ; } label_108:
      |                                                                                                                                                                                                                                                                                            ^~~~~~
      |                                                                                                                                                                                                                                                                                            var814
output.c: At top level:
output.c:115:13: error: expected declaration specifiers or ‘...’ before string constant
  115 |  } printf ( "Score:\n" ) ; ; printf ( "BLACK: %d\tWHITE: %d\n" , var175 , var176 ) ; ; int var248 = 0 ; return var248 ; } int main ( int var180 , char * * var181 ) { printf ( "Hello, World!\n" ) ; ; int * var183 = #3H ( ) ; int * var184 = #3H ( ) ; printAsciiBoard ( var183 , var185 ) ; ; int var186 = 1 ; char var187 [ 0 ] 5 ) ; int var188 ; label_109:
      |             ^~~~~~~~~~
output.c:115:39: error: expected declaration specifiers or ‘...’ before string constant
  115 |  } printf ( "Score:\n" ) ; ; printf ( "BLACK: %d\tWHITE: %d\n" , var175 , var176 ) ; ; int var248 = 0 ; return var248 ; } int main ( int var180 , char * * var181 ) { printf ( "Hello, World!\n" ) ; ; int * var183 = #3H ( ) ; int * var184 = #3H ( ) ; printAsciiBoard ( var183 , var185 ) ; ; int var186 = 1 ; char var187 [ 0 ] 5 ) ; int var188 ; label_109:
      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~
output.c:115:66: error: unknown type name ‘var175’
  115 |  } printf ( "Score:\n" ) ; ; printf ( "BLACK: %d\tWHITE: %d\n" , var175 , var176 ) ; ; int var248 = 0 ; return var248 ; } int main ( int var180 , char * * var181 ) { printf ( "Hello, World!\n" ) ; ; int * var183 = #3H ( ) ; int * var184 = #3H ( ) ; printAsciiBoard ( var183 , var185 ) ; ; int var186 = 1 ; char var187 [ 0 ] 5 ) ; int var188 ; label_109:
      |                                                                  ^~~~~~
output.c:115:75: error: unknown type name ‘var176’
  115 |  } printf ( "Score:\n" ) ; ; printf ( "BLACK: %d\tWHITE: %d\n" , var175 , var176 ) ; ; int var248 = 0 ; return var248 ; } int main ( int var180 , char * * var181 ) { printf ( "Hello, World!\n" ) ; ; int * var183 = #3H ( ) ; int * var184 = #3H ( ) ; printAsciiBoard ( var183 , var185 ) ; ; int var186 = 1 ; char var187 [ 0 ] 5 ) ; int var188 ; label_109:
      |                                                                           ^~~~~~
output.c:115:105: error: expected identifier or ‘(’ before ‘return’
  115 |  } printf ( "Score:\n" ) ; ; printf ( "BLACK: %d\tWHITE: %d\n" , var175 , var176 ) ; ; int var248 = 0 ; return var248 ; } int main ( int var180 , char * * var181 ) { printf ( "Hello, World!\n" ) ; ; int * var183 = #3H ( ) ; int * var184 = #3H ( ) ; printAsciiBoard ( var183 , var185 ) ; ; int var186 = 1 ; char var187 [ 0 ] 5 ) ; int var188 ; label_109:
      |                                                                                                         ^~~~~~
output.c:115:121: error: expected identifier or ‘(’ before ‘}’ token
  115 |  } printf ( "Score:\n" ) ; ; printf ( "BLACK: %d\tWHITE: %d\n" , var175 , var176 ) ; ; int var248 = 0 ; return var248 ; } int main ( int var180 , char * * var181 ) { printf ( "Hello, World!\n" ) ; ; int * var183 = #3H ( ) ; int * var184 = #3H ( ) ; printAsciiBoard ( var183 , var185 ) ; ; int var186 = 1 ; char var187 [ 0 ] 5 ) ; int var188 ; label_109:
      |                                                                                                                         ^
output.c: In function ‘main’:
output.c:115:215: error: stray ‘#’ in program
  115 |  } printf ( "Score:\n" ) ; ; printf ( "BLACK: %d\tWHITE: %d\n" , var175 , var176 ) ; ; int var248 = 0 ; return var248 ; } int main ( int var180 , char * * var181 ) { printf ( "Hello, World!\n" ) ; ; int * var183 = #3H ( ) ; int * var184 = #3H ( ) ; printAsciiBoard ( var183 , var185 ) ; ; int var186 = 1 ; char var187 [ 0 ] 5 ) ; int var188 ; label_109:
      |                                                                                                                                                                                                                       ^
output.c:115:216: error: invalid suffix "H" on integer constant
  115 |  } printf ( "Score:\n" ) ; ; printf ( "BLACK: %d\tWHITE: %d\n" , var175 , var176 ) ; ; int var248 = 0 ; return var248 ; } int main ( int var180 , char * * var181 ) { printf ( "Hello, World!\n" ) ; ; int * var183 = #3H ( ) ; int * var184 = #3H ( ) ; printAsciiBoard ( var183 , var185 ) ; ; int var186 = 1 ; char var187 [ 0 ] 5 ) ; int var188 ; label_109:
      |                                                                                                                                                                                                                        ^~
output.c:115:240: error: stray ‘#’ in program
  115 |  } printf ( "Score:\n" ) ; ; printf ( "BLACK: %d\tWHITE: %d\n" , var175 , var176 ) ; ; int var248 = 0 ; return var248 ; } int main ( int var180 , char * * var181 ) { printf ( "Hello, World!\n" ) ; ; int * var183 = #3H ( ) ; int * var184 = #3H ( ) ; printAsciiBoard ( var183 , var185 ) ; ; int var186 = 1 ; char var187 [ 0 ] 5 ) ; int var188 ; label_109:
      |                                                                                                                                                                                                                                                ^
output.c:115:241: error: invalid suffix "H" on integer constant
  115 |  } printf ( "Score:\n" ) ; ; printf ( "BLACK: %d\tWHITE: %d\n" , var175 , var176 ) ; ; int var248 = 0 ; return var248 ; } int main ( int var180 , char * * var181 ) { printf ( "Hello, World!\n" ) ; ; int * var183 = #3H ( ) ; int * var184 = #3H ( ) ; printAsciiBoard ( var183 , var185 ) ; ; int var186 = 1 ; char var187 [ 0 ] 5 ) ; int var188 ; label_109:
      |                                                                                                                                                                                                                                                 ^~
output.c:115:277: error: ‘var185’ undeclared (first use in this function); did you mean ‘var184’?
  115 |  } printf ( "Score:\n" ) ; ; printf ( "BLACK: %d\tWHITE: %d\n" , var175 , var176 ) ; ; int var248 = 0 ; return var248 ; } int main ( int var180 , char * * var181 ) { printf ( "Hello, World!\n" ) ; ; int * var183 = #3H ( ) ; int * var184 = #3H ( ) ; printAsciiBoard ( var183 , var185 ) ; ; int var186 = 1 ; char var187 [ 0 ] 5 ) ; int var188 ; label_109:
      |                                                                                                                                                                                                                                                                                     ^~~~~~
      |                                                                                                                                                                                                                                                                                     var184
output.c:115:325: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before numeric constant
  115 |  } printf ( "Score:\n" ) ; ; printf ( "BLACK: %d\tWHITE: %d\n" , var175 , var176 ) ; ; int var248 = 0 ; return var248 ; } int main ( int var180 , char * * var181 ) { printf ( "Hello, World!\n" ) ; ; int * var183 = #3H ( ) ; int * var184 = #3H ( ) ; printAsciiBoard ( var183 , var185 ) ; ; int var186 = 1 ; char var187 [ 0 ] 5 ) ; int var188 ; label_109:
      |                                                                                                                                                                                                                                                                                                                                     ^
output.c:115:326: error: expected ‘;’ before ‘)’ token
  115 |  } printf ( "Score:\n" ) ; ; printf ( "BLACK: %d\tWHITE: %d\n" , var175 , var176 ) ; ; int var248 = 0 ; return var248 ; } int main ( int var180 , char * * var181 ) { printf ( "Hello, World!\n" ) ; ; int * var183 = #3H ( ) ; int * var184 = #3H ( ) ; printAsciiBoard ( var183 , var185 ) ; ; int var186 = 1 ; char var187 [ 0 ] 5 ) ; int var188 ; label_109:
      |                                                                                                                                                                                                                                                                                                                                      ^~
      |                                                                                                                                                                                                                                                                                                                                      ;
output.c:115:327: error: expected statement before ‘)’ token
  115 |  } printf ( "Score:\n" ) ; ; printf ( "BLACK: %d\tWHITE: %d\n" , var175 , var176 ) ; ; int var248 = 0 ; return var248 ; } int main ( int var180 , char * * var181 ) { printf ( "Hello, World!\n" ) ; ; int * var183 = #3H ( ) ; int * var184 = #3H ( ) ; printAsciiBoard ( var183 , var185 ) ; ; int var186 = 1 ; char var187 [ 0 ] 5 ) ; int var188 ; label_109:
      |                                                                                                                                                                                                                                                                                                                                       ^
output.c:116:69: error: ‘var187’ undeclared (first use in this function); did you mean ‘var188’?
  116 |  if ( var186 ) { printf ( "How many human players?: " ) ; ; fgets ( var187 , 5 , var190 ) ; ; var187 [ 0 ] 4 ) = '\0' ; var188 = atoi ( var187 ) ; ;  var1496 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1496 = 1 ; } else { } int var615 = var1496 ; ; if ( var615 ) { } else {  var1226 = var188 < 0 ;  var1227 = var188 > 2 ;  var1497 = 0 ; if ( var1226 ) { var1497 = 1 ; } else { }  var1286 = var1497 ;  var1498 = 0 ; if ( var1227 ) { var1498 = 1 ; } else { }  var1287 = var1498 ;  var1339 = 0 ; if ( var1286 ) { if ( var1287 ) { var1339 = 1 ; } else { } } else { }  var1288 = var1339 ;  var1499 = 0 ; if ( var1288 ) { var1499 = 1 ; } else { }  var1289 = var1499 ;  var1290 =  var1228 = var1289 ;  var1229 = int var616 = var1228 ; if ( var616 ) { printf ( "Invalid Response. Please try again...\n" ) ; ; } else { var186 = 0 ; } } goto label_109 ; } else { } label_110:
      |                                                                     ^~~~~~
      |                                                                     var188
output.c:116:82: error: ‘var190’ undeclared (first use in this function); did you mean ‘var180’?
  116 |  if ( var186 ) { printf ( "How many human players?: " ) ; ; fgets ( var187 , 5 , var190 ) ; ; var187 [ 0 ] 4 ) = '\0' ; var188 = atoi ( var187 ) ; ;  var1496 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1496 = 1 ; } else { } int var615 = var1496 ; ; if ( var615 ) { } else {  var1226 = var188 < 0 ;  var1227 = var188 > 2 ;  var1497 = 0 ; if ( var1226 ) { var1497 = 1 ; } else { }  var1286 = var1497 ;  var1498 = 0 ; if ( var1227 ) { var1498 = 1 ; } else { }  var1287 = var1498 ;  var1339 = 0 ; if ( var1286 ) { if ( var1287 ) { var1339 = 1 ; } else { } } else { }  var1288 = var1339 ;  var1499 = 0 ; if ( var1288 ) { var1499 = 1 ; } else { }  var1289 = var1499 ;  var1290 =  var1228 = var1289 ;  var1229 = int var616 = var1228 ; if ( var616 ) { printf ( "Invalid Response. Please try again...\n" ) ; ; } else { var186 = 0 ; } } goto label_109 ; } else { } label_110:
      |                                                                                  ^~~~~~
      |                                                                                  var180
output.c:116:107: error: expected ‘;’ before numeric constant
  116 |  if ( var186 ) { printf ( "How many human players?: " ) ; ; fgets ( var187 , 5 , var190 ) ; ; var187 [ 0 ] 4 ) = '\0' ; var188 = atoi ( var187 ) ; ;  var1496 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1496 = 1 ; } else { } int var615 = var1496 ; ; if ( var615 ) { } else {  var1226 = var188 < 0 ;  var1227 = var188 > 2 ;  var1497 = 0 ; if ( var1226 ) { var1497 = 1 ; } else { }  var1286 = var1497 ;  var1498 = 0 ; if ( var1227 ) { var1498 = 1 ; } else { }  var1287 = var1498 ;  var1339 = 0 ; if ( var1286 ) { if ( var1287 ) { var1339 = 1 ; } else { } } else { }  var1288 = var1339 ;  var1499 = 0 ; if ( var1288 ) { var1499 = 1 ; } else { }  var1289 = var1499 ;  var1290 =  var1228 = var1289 ;  var1229 = int var616 = var1228 ; if ( var616 ) { printf ( "Invalid Response. Please try again...\n" ) ; ; } else { var186 = 0 ; } } goto label_109 ; } else { } label_110:
      |                                                                                                           ^~
      |                                                                                                           ;
output.c:116:110: error: expected statement before ‘)’ token
  116 |  if ( var186 ) { printf ( "How many human players?: " ) ; ; fgets ( var187 , 5 , var190 ) ; ; var187 [ 0 ] 4 ) = '\0' ; var188 = atoi ( var187 ) ; ;  var1496 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1496 = 1 ; } else { } int var615 = var1496 ; ; if ( var615 ) { } else {  var1226 = var188 < 0 ;  var1227 = var188 > 2 ;  var1497 = 0 ; if ( var1226 ) { var1497 = 1 ; } else { }  var1286 = var1497 ;  var1498 = 0 ; if ( var1227 ) { var1498 = 1 ; } else { }  var1287 = var1498 ;  var1339 = 0 ; if ( var1286 ) { if ( var1287 ) { var1339 = 1 ; } else { } } else { }  var1288 = var1339 ;  var1499 = 0 ; if ( var1288 ) { var1499 = 1 ; } else { }  var1289 = var1499 ;  var1290 =  var1228 = var1289 ;  var1229 = int var616 = var1228 ; if ( var616 ) { printf ( "Invalid Response. Please try again...\n" ) ; ; } else { var186 = 0 ; } } goto label_109 ; } else { } label_110:
      |                                                                                                              ^
output.c:116:112: error: expected expression before ‘=’ token
  116 |  if ( var186 ) { printf ( "How many human players?: " ) ; ; fgets ( var187 , 5 , var190 ) ; ; var187 [ 0 ] 4 ) = '\0' ; var188 = atoi ( var187 ) ; ;  var1496 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1496 = 1 ; } else { } int var615 = var1496 ; ; if ( var615 ) { } else {  var1226 = var188 < 0 ;  var1227 = var188 > 2 ;  var1497 = 0 ; if ( var1226 ) { var1497 = 1 ; } else { }  var1286 = var1497 ;  var1498 = 0 ; if ( var1227 ) { var1498 = 1 ; } else { }  var1287 = var1498 ;  var1339 = 0 ; if ( var1286 ) { if ( var1287 ) { var1339 = 1 ; } else { } } else { }  var1288 = var1339 ;  var1499 = 0 ; if ( var1288 ) { var1499 = 1 ; } else { }  var1289 = var1499 ;  var1290 =  var1228 = var1289 ;  var1229 = int var616 = var1228 ; if ( var616 ) { printf ( "Invalid Response. Please try again...\n" ) ; ; } else { var186 = 0 ; } } goto label_109 ; } else { } label_110:
      |                                                                                                                ^
output.c:116:151: error: ‘var1496’ undeclared (first use in this function); did you mean ‘var1396’?
  116 |  if ( var186 ) { printf ( "How many human players?: " ) ; ; fgets ( var187 , 5 , var190 ) ; ; var187 [ 0 ] 4 ) = '\0' ; var188 = atoi ( var187 ) ; ;  var1496 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1496 = 1 ; } else { } int var615 = var1496 ; ; if ( var615 ) { } else {  var1226 = var188 < 0 ;  var1227 = var188 > 2 ;  var1497 = 0 ; if ( var1226 ) { var1497 = 1 ; } else { }  var1286 = var1497 ;  var1498 = 0 ; if ( var1227 ) { var1498 = 1 ; } else { }  var1287 = var1498 ;  var1339 = 0 ; if ( var1286 ) { if ( var1287 ) { var1339 = 1 ; } else { } } else { }  var1288 = var1339 ;  var1499 = 0 ; if ( var1288 ) { var1499 = 1 ; } else { }  var1289 = var1499 ;  var1290 =  var1228 = var1289 ;  var1229 = int var616 = var1228 ; if ( var616 ) { printf ( "Invalid Response. Please try again...\n" ) ; ; } else { var186 = 0 ; } } goto label_109 ; } else { } label_110:
      |                                                                                                                                                       ^~~~~~~
      |                                                                                                                                                       var1396
output.c:116:275: error: ‘var1226’ undeclared (first use in this function); did you mean ‘var1216’?
  116 |  if ( var186 ) { printf ( "How many human players?: " ) ; ; fgets ( var187 , 5 , var190 ) ; ; var187 [ 0 ] 4 ) = '\0' ; var188 = atoi ( var187 ) ; ;  var1496 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1496 = 1 ; } else { } int var615 = var1496 ; ; if ( var615 ) { } else {  var1226 = var188 < 0 ;  var1227 = var188 > 2 ;  var1497 = 0 ; if ( var1226 ) { var1497 = 1 ; } else { }  var1286 = var1497 ;  var1498 = 0 ; if ( var1227 ) { var1498 = 1 ; } else { }  var1287 = var1498 ;  var1339 = 0 ; if ( var1286 ) { if ( var1287 ) { var1339 = 1 ; } else { } } else { }  var1288 = var1339 ;  var1499 = 0 ; if ( var1288 ) { var1499 = 1 ; } else { }  var1289 = var1499 ;  var1290 =  var1228 = var1289 ;  var1229 = int var616 = var1228 ; if ( var616 ) { printf ( "Invalid Response. Please try again...\n" ) ; ; } else { var186 = 0 ; } } goto label_109 ; } else { } label_110:
      |                                                                                                                                                                                                                                                                                   ^~~~~~~
      |                                                                                                                                                                                                                                                                                   var1216
output.c:116:299: error: ‘var1227’ undeclared (first use in this function); did you mean ‘var1217’?
  116 |  if ( var186 ) { printf ( "How many human players?: " ) ; ; fgets ( var187 , 5 , var190 ) ; ; var187 [ 0 ] 4 ) = '\0' ; var188 = atoi ( var187 ) ; ;  var1496 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1496 = 1 ; } else { } int var615 = var1496 ; ; if ( var615 ) { } else {  var1226 = var188 < 0 ;  var1227 = var188 > 2 ;  var1497 = 0 ; if ( var1226 ) { var1497 = 1 ; } else { }  var1286 = var1497 ;  var1498 = 0 ; if ( var1227 ) { var1498 = 1 ; } else { }  var1287 = var1498 ;  var1339 = 0 ; if ( var1286 ) { if ( var1287 ) { var1339 = 1 ; } else { } } else { }  var1288 = var1339 ;  var1499 = 0 ; if ( var1288 ) { var1499 = 1 ; } else { }  var1289 = var1499 ;  var1290 =  var1228 = var1289 ;  var1229 = int var616 = var1228 ; if ( var616 ) { printf ( "Invalid Response. Please try again...\n" ) ; ; } else { var186 = 0 ; } } goto label_109 ; } else { } label_110:
      |                                                                                                                                                                                                                                                                                                           ^~~~~~~
      |                                                                                                                                                                                                                                                                                                           var1217
output.c:116:323: error: ‘var1497’ undeclared (first use in this function); did you mean ‘var1217’?
  116 |  if ( var186 ) { printf ( "How many human players?: " ) ; ; fgets ( var187 , 5 , var190 ) ; ; var187 [ 0 ] 4 ) = '\0' ; var188 = atoi ( var187 ) ; ;  var1496 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1496 = 1 ; } else { } int var615 = var1496 ; ; if ( var615 ) { } else {  var1226 = var188 < 0 ;  var1227 = var188 > 2 ;  var1497 = 0 ; if ( var1226 ) { var1497 = 1 ; } else { }  var1286 = var1497 ;  var1498 = 0 ; if ( var1227 ) { var1498 = 1 ; } else { }  var1287 = var1498 ;  var1339 = 0 ; if ( var1286 ) { if ( var1287 ) { var1339 = 1 ; } else { } } else { }  var1288 = var1339 ;  var1499 = 0 ; if ( var1288 ) { var1499 = 1 ; } else { }  var1289 = var1499 ;  var1290 =  var1228 = var1289 ;  var1229 = int var616 = var1228 ; if ( var616 ) { printf ( "Invalid Response. Please try again...\n" ) ; ; } else { var186 = 0 ; } } goto label_109 ; } else { } label_110:
      |                                                                                                                                                                                                                                                                                                                                   ^~~~~~~
      |                                                                                                                                                                                                                                                                                                                                   var1217
output.c:116:380: error: ‘var1286’ undeclared (first use in this function); did you mean ‘var186’?
  116 |  if ( var186 ) { printf ( "How many human players?: " ) ; ; fgets ( var187 , 5 , var190 ) ; ; var187 [ 0 ] 4 ) = '\0' ; var188 = atoi ( var187 ) ; ;  var1496 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1496 = 1 ; } else { } int var615 = var1496 ; ; if ( var615 ) { } else {  var1226 = var188 < 0 ;  var1227 = var188 > 2 ;  var1497 = 0 ; if ( var1226 ) { var1497 = 1 ; } else { }  var1286 = var1497 ;  var1498 = 0 ; if ( var1227 ) { var1498 = 1 ; } else { }  var1287 = var1498 ;  var1339 = 0 ; if ( var1286 ) { if ( var1287 ) { var1339 = 1 ; } else { } } else { }  var1288 = var1339 ;  var1499 = 0 ; if ( var1288 ) { var1499 = 1 ; } else { }  var1289 = var1499 ;  var1290 =  var1228 = var1289 ;  var1229 = int var616 = var1228 ; if ( var616 ) { printf ( "Invalid Response. Please try again...\n" ) ; ; } else { var186 = 0 ; } } goto label_109 ; } else { } label_110:
      |                                                                                                                                                                                                                                                                                                                                                                                            ^~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                            var186
output.c:116:401: error: ‘var1498’ undeclared (first use in this function); did you mean ‘var188’?
  116 |  if ( var186 ) { printf ( "How many human players?: " ) ; ; fgets ( var187 , 5 , var190 ) ; ; var187 [ 0 ] 4 ) = '\0' ; var188 = atoi ( var187 ) ; ;  var1496 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1496 = 1 ; } else { } int var615 = var1496 ; ; if ( var615 ) { } else {  var1226 = var188 < 0 ;  var1227 = var188 > 2 ;  var1497 = 0 ; if ( var1226 ) { var1497 = 1 ; } else { }  var1286 = var1497 ;  var1498 = 0 ; if ( var1227 ) { var1498 = 1 ; } else { }  var1287 = var1498 ;  var1339 = 0 ; if ( var1286 ) { if ( var1287 ) { var1339 = 1 ; } else { } } else { }  var1288 = var1339 ;  var1499 = 0 ; if ( var1288 ) { var1499 = 1 ; } else { }  var1289 = var1499 ;  var1290 =  var1228 = var1289 ;  var1229 = int var616 = var1228 ; if ( var616 ) { printf ( "Invalid Response. Please try again...\n" ) ; ; } else { var186 = 0 ; } } goto label_109 ; } else { } label_110:
      |                                                                                                                                                                                                                                                                                                                                                                                                                 ^~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                 var188
output.c:116:458: error: ‘var1287’ undeclared (first use in this function); did you mean ‘var1217’?
  116 |  if ( var186 ) { printf ( "How many human players?: " ) ; ; fgets ( var187 , 5 , var190 ) ; ; var187 [ 0 ] 4 ) = '\0' ; var188 = atoi ( var187 ) ; ;  var1496 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1496 = 1 ; } else { } int var615 = var1496 ; ; if ( var615 ) { } else {  var1226 = var188 < 0 ;  var1227 = var188 > 2 ;  var1497 = 0 ; if ( var1226 ) { var1497 = 1 ; } else { }  var1286 = var1497 ;  var1498 = 0 ; if ( var1227 ) { var1498 = 1 ; } else { }  var1287 = var1498 ;  var1339 = 0 ; if ( var1286 ) { if ( var1287 ) { var1339 = 1 ; } else { } } else { }  var1288 = var1339 ;  var1499 = 0 ; if ( var1288 ) { var1499 = 1 ; } else { }  var1289 = var1499 ;  var1290 =  var1228 = var1289 ;  var1229 = int var616 = var1228 ; if ( var616 ) { printf ( "Invalid Response. Please try again...\n" ) ; ; } else { var186 = 0 ; } } goto label_109 ; } else { } label_110:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ^~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                          var1217
output.c:116:479: error: ‘var1339’ undeclared (first use in this function); did you mean ‘var1337’?
  116 |  if ( var186 ) { printf ( "How many human players?: " ) ; ; fgets ( var187 , 5 , var190 ) ; ; var187 [ 0 ] 4 ) = '\0' ; var188 = atoi ( var187 ) ; ;  var1496 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1496 = 1 ; } else { } int var615 = var1496 ; ; if ( var615 ) { } else {  var1226 = var188 < 0 ;  var1227 = var188 > 2 ;  var1497 = 0 ; if ( var1226 ) { var1497 = 1 ; } else { }  var1286 = var1497 ;  var1498 = 0 ; if ( var1227 ) { var1498 = 1 ; } else { }  var1287 = var1498 ;  var1339 = 0 ; if ( var1286 ) { if ( var1287 ) { var1339 = 1 ; } else { } } else { }  var1288 = var1339 ;  var1499 = 0 ; if ( var1288 ) { var1499 = 1 ; } else { }  var1289 = var1499 ;  var1290 =  var1228 = var1289 ;  var1229 = int var616 = var1228 ; if ( var616 ) { printf ( "Invalid Response. Please try again...\n" ) ; ; } else { var186 = 0 ; } } goto label_109 ; } else { } label_110:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ^~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               var1337
output.c:116:564: error: ‘var1288’ undeclared (first use in this function); did you mean ‘var188’?
  116 |  if ( var186 ) { printf ( "How many human players?: " ) ; ; fgets ( var187 , 5 , var190 ) ; ; var187 [ 0 ] 4 ) = '\0' ; var188 = atoi ( var187 ) ; ;  var1496 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1496 = 1 ; } else { } int var615 = var1496 ; ; if ( var615 ) { } else {  var1226 = var188 < 0 ;  var1227 = var188 > 2 ;  var1497 = 0 ; if ( var1226 ) { var1497 = 1 ; } else { }  var1286 = var1497 ;  var1498 = 0 ; if ( var1227 ) { var1498 = 1 ; } else { }  var1287 = var1498 ;  var1339 = 0 ; if ( var1286 ) { if ( var1287 ) { var1339 = 1 ; } else { } } else { }  var1288 = var1339 ;  var1499 = 0 ; if ( var1288 ) { var1499 = 1 ; } else { }  var1289 = var1499 ;  var1290 =  var1228 = var1289 ;  var1229 = int var616 = var1228 ; if ( var616 ) { printf ( "Invalid Response. Please try again...\n" ) ; ; } else { var186 = 0 ; } } goto label_109 ; } else { } label_110:
      |~~~~~~
      |var188
output.c:116:585: error: ‘var1499’ undeclared (first use in this function); did you mean ‘var1459’?
  116 |  if ( var186 ) { printf ( "How many human players?: " ) ; ; fgets ( var187 , 5 , var190 ) ; ; var187 [ 0 ] 4 ) = '\0' ; var188 = atoi ( var187 ) ; ;  var1496 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1496 = 1 ; } else { } int var615 = var1496 ; ; if ( var615 ) { } else {  var1226 = var188 < 0 ;  var1227 = var188 > 2 ;  var1497 = 0 ; if ( var1226 ) { var1497 = 1 ; } else { }  var1286 = var1497 ;  var1498 = 0 ; if ( var1227 ) { var1498 = 1 ; } else { }  var1287 = var1498 ;  var1339 = 0 ; if ( var1286 ) { if ( var1287 ) { var1339 = 1 ; } else { } } else { }  var1288 = var1339 ;  var1499 = 0 ; if ( var1288 ) { var1499 = 1 ; } else { }  var1289 = var1499 ;  var1290 =  var1228 = var1289 ;  var1229 = int var616 = var1228 ; if ( var616 ) { printf ( "Invalid Response. Please try again...\n" ) ; ; } else { var186 = 0 ; } } goto label_109 ; } else { } label_110:
      |~~~~~~
      |var1459
output.c:116:642: error: ‘var1289’ undeclared (first use in this function); did you mean ‘var1389’?
  116 |  if ( var186 ) { printf ( "How many human players?: " ) ; ; fgets ( var187 , 5 , var190 ) ; ; var187 [ 0 ] 4 ) = '\0' ; var188 = atoi ( var187 ) ; ;  var1496 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1496 = 1 ; } else { } int var615 = var1496 ; ; if ( var615 ) { } else {  var1226 = var188 < 0 ;  var1227 = var188 > 2 ;  var1497 = 0 ; if ( var1226 ) { var1497 = 1 ; } else { }  var1286 = var1497 ;  var1498 = 0 ; if ( var1227 ) { var1498 = 1 ; } else { }  var1287 = var1498 ;  var1339 = 0 ; if ( var1286 ) { if ( var1287 ) { var1339 = 1 ; } else { } } else { }  var1288 = var1339 ;  var1499 = 0 ; if ( var1288 ) { var1499 = 1 ; } else { }  var1289 = var1499 ;  var1290 =  var1228 = var1289 ;  var1229 = int var616 = var1228 ; if ( var616 ) { printf ( "Invalid Response. Please try again...\n" ) ; ; } else { var186 = 0 ; } } goto label_109 ; } else { } label_110:
      |~~~~~~
      |var1389
output.c:116:663: error: ‘var1290’ undeclared (first use in this function); did you mean ‘var180’?
  116 |  if ( var186 ) { printf ( "How many human players?: " ) ; ; fgets ( var187 , 5 , var190 ) ; ; var187 [ 0 ] 4 ) = '\0' ; var188 = atoi ( var187 ) ; ;  var1496 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1496 = 1 ; } else { } int var615 = var1496 ; ; if ( var615 ) { } else {  var1226 = var188 < 0 ;  var1227 = var188 > 2 ;  var1497 = 0 ; if ( var1226 ) { var1497 = 1 ; } else { }  var1286 = var1497 ;  var1498 = 0 ; if ( var1227 ) { var1498 = 1 ; } else { }  var1287 = var1498 ;  var1339 = 0 ; if ( var1286 ) { if ( var1287 ) { var1339 = 1 ; } else { } } else { }  var1288 = var1339 ;  var1499 = 0 ; if ( var1288 ) { var1499 = 1 ; } else { }  var1289 = var1499 ;  var1290 =  var1228 = var1289 ;  var1229 = int var616 = var1228 ; if ( var616 ) { printf ( "Invalid Response. Please try again...\n" ) ; ; } else { var186 = 0 ; } } goto label_109 ; } else { } label_110:
      |~~~~~~
      |var180
output.c:116:674: error: ‘var1228’ undeclared (first use in this function); did you mean ‘var1208’?
  116 |  if ( var186 ) { printf ( "How many human players?: " ) ; ; fgets ( var187 , 5 , var190 ) ; ; var187 [ 0 ] 4 ) = '\0' ; var188 = atoi ( var187 ) ; ;  var1496 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1496 = 1 ; } else { } int var615 = var1496 ; ; if ( var615 ) { } else {  var1226 = var188 < 0 ;  var1227 = var188 > 2 ;  var1497 = 0 ; if ( var1226 ) { var1497 = 1 ; } else { }  var1286 = var1497 ;  var1498 = 0 ; if ( var1227 ) { var1498 = 1 ; } else { }  var1287 = var1498 ;  var1339 = 0 ; if ( var1286 ) { if ( var1287 ) { var1339 = 1 ; } else { } } else { }  var1288 = var1339 ;  var1499 = 0 ; if ( var1288 ) { var1499 = 1 ; } else { }  var1289 = var1499 ;  var1290 =  var1228 = var1289 ;  var1229 = int var616 = var1228 ; if ( var616 ) { printf ( "Invalid Response. Please try again...\n" ) ; ; } else { var186 = 0 ; } } goto label_109 ; } else { } label_110:
      |~~~~~~
      |var1208
output.c:116:695: error: ‘var1229’ undeclared (first use in this function); did you mean ‘var1329’?
  116 |  if ( var186 ) { printf ( "How many human players?: " ) ; ; fgets ( var187 , 5 , var190 ) ; ; var187 [ 0 ] 4 ) = '\0' ; var188 = atoi ( var187 ) ; ;  var1496 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1496 = 1 ; } else { } int var615 = var1496 ; ; if ( var615 ) { } else {  var1226 = var188 < 0 ;  var1227 = var188 > 2 ;  var1497 = 0 ; if ( var1226 ) { var1497 = 1 ; } else { }  var1286 = var1497 ;  var1498 = 0 ; if ( var1227 ) { var1498 = 1 ; } else { }  var1287 = var1498 ;  var1339 = 0 ; if ( var1286 ) { if ( var1287 ) { var1339 = 1 ; } else { } } else { }  var1288 = var1339 ;  var1499 = 0 ; if ( var1288 ) { var1499 = 1 ; } else { }  var1289 = var1499 ;  var1290 =  var1228 = var1289 ;  var1229 = int var616 = var1228 ; if ( var616 ) { printf ( "Invalid Response. Please try again...\n" ) ; ; } else { var186 = 0 ; } } goto label_109 ; } else { } label_110:
      |~~~~~~
      |var1329
output.c:116:705: error: expected expression before ‘int’
  116 |  if ( var186 ) { printf ( "How many human players?: " ) ; ; fgets ( var187 , 5 , var190 ) ; ; var187 [ 0 ] 4 ) = '\0' ; var188 = atoi ( var187 ) ; ;  var1496 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1496 = 1 ; } else { } int var615 = var1496 ; ; if ( var615 ) { } else {  var1226 = var188 < 0 ;  var1227 = var188 > 2 ;  var1497 = 0 ; if ( var1226 ) { var1497 = 1 ; } else { }  var1286 = var1497 ;  var1498 = 0 ; if ( var1227 ) { var1498 = 1 ; } else { }  var1287 = var1498 ;  var1339 = 0 ; if ( var1286 ) { if ( var1287 ) { var1339 = 1 ; } else { } } else { }  var1288 = var1339 ;  var1499 = 0 ; if ( var1288 ) { var1499 = 1 ; } else { }  var1289 = var1499 ;  var1290 =  var1228 = var1289 ;  var1229 = int var616 = var1228 ; if ( var616 ) { printf ( "Invalid Response. Please try again...\n" ) ; ; } else { var186 = 0 ; } } goto label_109 ; } else { } label_110:
      |~~
output.c:116:733: error: ‘var616’ undeclared (first use in this function); did you mean ‘var615’?
  116 |  if ( var186 ) { printf ( "How many human players?: " ) ; ; fgets ( var187 , 5 , var190 ) ; ; var187 [ 0 ] 4 ) = '\0' ; var188 = atoi ( var187 ) ; ;  var1496 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1496 = 1 ; } else { } int var615 = var1496 ; ; if ( var615 ) { } else {  var1226 = var188 < 0 ;  var1227 = var188 > 2 ;  var1497 = 0 ; if ( var1226 ) { var1497 = 1 ; } else { }  var1286 = var1497 ;  var1498 = 0 ; if ( var1227 ) { var1498 = 1 ; } else { }  var1287 = var1498 ;  var1339 = 0 ; if ( var1286 ) { if ( var1287 ) { var1339 = 1 ; } else { } } else { }  var1288 = var1339 ;  var1499 = 0 ; if ( var1288 ) { var1499 = 1 ; } else { }  var1289 = var1499 ;  var1290 =  var1228 = var1289 ;  var1229 = int var616 = var1228 ; if ( var616 ) { printf ( "Invalid Response. Please try again...\n" ) ; ; } else { var186 = 0 ; } } goto label_109 ; } else { } label_110:
      |~~~~~
      |var615
output.c:117:3: error: ‘var1230’ undeclared (first use in this function); did you mean ‘var1330’?
  117 |   var1230 = var193 [ 0 ] ;  var1231 = var1230 [ 0 ] ;  int var194 [ 0 ] 2 ) ; { int var195 = 0 ; label_111:
      |   ^~~~~~~
      |   var1330
output.c:117:13: error: ‘var193’ undeclared (first use in this function); did you mean ‘var183’?
  117 |   var1230 = var193 [ 0 ] ;  var1231 = var1230 [ 0 ] ;  int var194 [ 0 ] 2 ) ; { int var195 = 0 ; label_111:
      |             ^~~~~~
      |             var183
output.c:117:29: error: ‘var1231’ undeclared (first use in this function); did you mean ‘var1031’?
  117 |   var1230 = var193 [ 0 ] ;  var1231 = var1230 [ 0 ] ;  int var194 [ 0 ] 2 ) ; { int var195 = 0 ; label_111:
      |                             ^~~~~~~
      |                             var1031
output.c:117:73: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before numeric constant
  117 |   var1230 = var193 [ 0 ] ;  var1231 = var1230 [ 0 ] ;  int var194 [ 0 ] 2 ) ; { int var195 = 0 ; label_111:
      |                                                                         ^
output.c:117:74: error: expected ‘;’ before ‘)’ token
  117 |   var1230 = var193 [ 0 ] ;  var1231 = var1230 [ 0 ] ;  int var194 [ 0 ] 2 ) ; { int var195 = 0 ; label_111:
      |                                                                          ^~
      |                                                                          ;
output.c:117:75: error: expected statement before ‘)’ token
  117 |   var1230 = var193 [ 0 ] ;  var1231 = var1230 [ 0 ] ;  int var194 [ 0 ] 2 ) ; { int var195 = 0 ; label_111:
      |                                                                           ^
output.c:118:81: error: expected ‘;’ before ‘var195’
  118 |  if ( var195 < 2 ) { int var617 = var195 < var188 ; if ( var617 ) { var193 [ 0 ] var195 ) = int var73 ; } else { var193 [ 0 ] var195 ) = int var169 ; } var195 ; var195 = var195 + 1 ; goto label_111 ; } else { } label_112:
      |                                                                                 ^~~~~~~
      |                                                                                 ;
output.c:118:89: error: expected statement before ‘)’ token
  118 |  if ( var195 < 2 ) { int var617 = var195 < var188 ; if ( var617 ) { var193 [ 0 ] var195 ) = int var73 ; } else { var193 [ 0 ] var195 ) = int var169 ; } var195 ; var195 = var195 + 1 ; goto label_111 ; } else { } label_112:
      |                                                                                         ^
output.c:118:91: error: expected expression before ‘=’ token
  118 |  if ( var195 < 2 ) { int var617 = var195 < var188 ; if ( var617 ) { var193 [ 0 ] var195 ) = int var73 ; } else { var193 [ 0 ] var195 ) = int var169 ; } var195 ; var195 = var195 + 1 ; goto label_111 ; } else { } label_112:
      |                                                                                           ^
output.c:118:126: error: expected ‘;’ before ‘var195’
  118 |  if ( var195 < 2 ) { int var617 = var195 < var188 ; if ( var617 ) { var193 [ 0 ] var195 ) = int var73 ; } else { var193 [ 0 ] var195 ) = int var169 ; } var195 ; var195 = var195 + 1 ; goto label_111 ; } else { } label_112:
      |                                                                                                                              ^~~~~~~
      |                                                                                                                              ;
output.c:118:134: error: expected statement before ‘)’ token
  118 |  if ( var195 < 2 ) { int var617 = var195 < var188 ; if ( var617 ) { var193 [ 0 ] var195 ) = int var73 ; } else { var193 [ 0 ] var195 ) = int var169 ; } var195 ; var195 = var195 + 1 ; goto label_111 ; } else { } label_112:
      |                                                                                                                                      ^
output.c:118:136: error: expected expression before ‘=’ token
  118 |  if ( var195 < 2 ) { int var617 = var195 < var188 ; if ( var617 ) { var193 [ 0 ] var195 ) = int var73 ; } else { var193 [ 0 ] var195 ) = int var169 ; } var195 ; var195 = var195 + 1 ; goto label_111 ; } else { } label_112:
      |                                                                                                                                        ^
output.c:120:143: error: ‘var198’ undeclared (first use in this function); did you mean ‘var196’?
  120 |  if ( var186 ) { var186 = 0 ; printf ( "What color would you like to play as? (%d = BLACK, %d = WHITE)?: " , 0 , 1 ) ; ; fgets ( var187 , 5 , var198 ) ; ; var187 [ 0 ] 4 ) = '\0' ; int var199 = atoi ( var187 ) ; ;  var1500 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1500 = 1 ; } else { } int var619 = var1500 ; ; if ( var619 ) { var186 = 1 ; } else { int var620 = var199 == 0 ; if ( var620 ) { var194 [ 0 ] 0 ) = 0 ; var194 [ 0 ] 1 ) = 1 ; } else { int var621 = var199 == 1 ; if ( var621 ) { var194 [ 0 ] 0 ) = 1 ; var194 [ 0 ] 1 ) = 0 ; var196 = 1 ; } else { printf ( "Invalid Response. Please try again...\n" ) ; ; var186 = 1 ; } } } goto label_113 ; } else { } label_114:
      |                                                                                                                                               ^~~~~~
      |                                                                                                                                               var196
output.c:120:168: error: expected ‘;’ before numeric constant
  120 |  if ( var186 ) { var186 = 0 ; printf ( "What color would you like to play as? (%d = BLACK, %d = WHITE)?: " , 0 , 1 ) ; ; fgets ( var187 , 5 , var198 ) ; ; var187 [ 0 ] 4 ) = '\0' ; int var199 = atoi ( var187 ) ; ;  var1500 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1500 = 1 ; } else { } int var619 = var1500 ; ; if ( var619 ) { var186 = 1 ; } else { int var620 = var199 == 0 ; if ( var620 ) { var194 [ 0 ] 0 ) = 0 ; var194 [ 0 ] 1 ) = 1 ; } else { int var621 = var199 == 1 ; if ( var621 ) { var194 [ 0 ] 0 ) = 1 ; var194 [ 0 ] 1 ) = 0 ; var196 = 1 ; } else { printf ( "Invalid Response. Please try again...\n" ) ; ; var186 = 1 ; } } } goto label_113 ; } else { } label_114:
      |                                                                                                                                                                        ^~
      |                                                                                                                                                                        ;
output.c:120:171: error: expected statement before ‘)’ token
  120 |  if ( var186 ) { var186 = 0 ; printf ( "What color would you like to play as? (%d = BLACK, %d = WHITE)?: " , 0 , 1 ) ; ; fgets ( var187 , 5 , var198 ) ; ; var187 [ 0 ] 4 ) = '\0' ; int var199 = atoi ( var187 ) ; ;  var1500 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1500 = 1 ; } else { } int var619 = var1500 ; ; if ( var619 ) { var186 = 1 ; } else { int var620 = var199 == 0 ; if ( var620 ) { var194 [ 0 ] 0 ) = 0 ; var194 [ 0 ] 1 ) = 1 ; } else { int var621 = var199 == 1 ; if ( var621 ) { var194 [ 0 ] 0 ) = 1 ; var194 [ 0 ] 1 ) = 0 ; var196 = 1 ; } else { printf ( "Invalid Response. Please try again...\n" ) ; ; var186 = 1 ; } } } goto label_113 ; } else { } label_114:
      |                                                                                                                                                                           ^
output.c:120:173: error: expected expression before ‘=’ token
  120 |  if ( var186 ) { var186 = 0 ; printf ( "What color would you like to play as? (%d = BLACK, %d = WHITE)?: " , 0 , 1 ) ; ; fgets ( var187 , 5 , var198 ) ; ; var187 [ 0 ] 4 ) = '\0' ; int var199 = atoi ( var187 ) ; ;  var1500 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1500 = 1 ; } else { } int var619 = var1500 ; ; if ( var619 ) { var186 = 1 ; } else { int var620 = var199 == 0 ; if ( var620 ) { var194 [ 0 ] 0 ) = 0 ; var194 [ 0 ] 1 ) = 1 ; } else { int var621 = var199 == 1 ; if ( var621 ) { var194 [ 0 ] 0 ) = 1 ; var194 [ 0 ] 1 ) = 0 ; var196 = 1 ; } else { printf ( "Invalid Response. Please try again...\n" ) ; ; var186 = 1 ; } } } goto label_113 ; } else { } label_114:
      |                                                                                                                                                                             ^
output.c:120:216: error: ‘var1500’ undeclared (first use in this function); did you mean ‘var1000’?
  120 |  if ( var186 ) { var186 = 0 ; printf ( "What color would you like to play as? (%d = BLACK, %d = WHITE)?: " , 0 , 1 ) ; ; fgets ( var187 , 5 , var198 ) ; ; var187 [ 0 ] 4 ) = '\0' ; int var199 = atoi ( var187 ) ; ;  var1500 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1500 = 1 ; } else { } int var619 = var1500 ; ; if ( var619 ) { var186 = 1 ; } else { int var620 = var199 == 0 ; if ( var620 ) { var194 [ 0 ] 0 ) = 0 ; var194 [ 0 ] 1 ) = 1 ; } else { int var621 = var199 == 1 ; if ( var621 ) { var194 [ 0 ] 0 ) = 1 ; var194 [ 0 ] 1 ) = 0 ; var196 = 1 ; } else { printf ( "Invalid Response. Please try again...\n" ) ; ; var186 = 1 ; } } } goto label_113 ; } else { } label_114:
      |                                                                                                                                                                                                                        ^~~~~~~
      |                                                                                                                                                                                                                        var1000
output.c:120:395: error: ‘var194’ undeclared (first use in this function); did you mean ‘var199’?
  120 |  if ( var186 ) { var186 = 0 ; printf ( "What color would you like to play as? (%d = BLACK, %d = WHITE)?: " , 0 , 1 ) ; ; fgets ( var187 , 5 , var198 ) ; ; var187 [ 0 ] 4 ) = '\0' ; int var199 = atoi ( var187 ) ; ;  var1500 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1500 = 1 ; } else { } int var619 = var1500 ; ; if ( var619 ) { var186 = 1 ; } else { int var620 = var199 == 0 ; if ( var620 ) { var194 [ 0 ] 0 ) = 0 ; var194 [ 0 ] 1 ) = 1 ; } else { int var621 = var199 == 1 ; if ( var621 ) { var194 [ 0 ] 0 ) = 1 ; var194 [ 0 ] 1 ) = 0 ; var196 = 1 ; } else { printf ( "Invalid Response. Please try again...\n" ) ; ; var186 = 1 ; } } } goto label_113 ; } else { } label_114:
      |                                                                                                                                                                                                                                                                                                                                                                                                           ^~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                           var199
output.c:120:407: error: expected ‘;’ before numeric constant
  120 |  if ( var186 ) { var186 = 0 ; printf ( "What color would you like to play as? (%d = BLACK, %d = WHITE)?: " , 0 , 1 ) ; ; fgets ( var187 , 5 , var198 ) ; ; var187 [ 0 ] 4 ) = '\0' ; int var199 = atoi ( var187 ) ; ;  var1500 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1500 = 1 ; } else { } int var619 = var1500 ; ; if ( var619 ) { var186 = 1 ; } else { int var620 = var199 == 0 ; if ( var620 ) { var194 [ 0 ] 0 ) = 0 ; var194 [ 0 ] 1 ) = 1 ; } else { int var621 = var199 == 1 ; if ( var621 ) { var194 [ 0 ] 0 ) = 1 ; var194 [ 0 ] 1 ) = 0 ; var196 = 1 ; } else { printf ( "Invalid Response. Please try again...\n" ) ; ; var186 = 1 ; } } } goto label_113 ; } else { } label_114:
      |                                                                                                                                                                                                                                                                                                                                                                                                                       ^~
      |                                                                                                                                                                                                                                                                                                                                                                                                                       ;
output.c:120:410: error: expected statement before ‘)’ token
  120 |  if ( var186 ) { var186 = 0 ; printf ( "What color would you like to play as? (%d = BLACK, %d = WHITE)?: " , 0 , 1 ) ; ; fgets ( var187 , 5 , var198 ) ; ; var187 [ 0 ] 4 ) = '\0' ; int var199 = atoi ( var187 ) ; ;  var1500 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1500 = 1 ; } else { } int var619 = var1500 ; ; if ( var619 ) { var186 = 1 ; } else { int var620 = var199 == 0 ; if ( var620 ) { var194 [ 0 ] 0 ) = 0 ; var194 [ 0 ] 1 ) = 1 ; } else { int var621 = var199 == 1 ; if ( var621 ) { var194 [ 0 ] 0 ) = 1 ; var194 [ 0 ] 1 ) = 0 ; var196 = 1 ; } else { printf ( "Invalid Response. Please try again...\n" ) ; ; var186 = 1 ; } } } goto label_113 ; } else { } label_114:
      |                                                                                                                                                                                                                                                                                                                                                                                                                          ^
output.c:120:412: error: expected expression before ‘=’ token
  120 |  if ( var186 ) { var186 = 0 ; printf ( "What color would you like to play as? (%d = BLACK, %d = WHITE)?: " , 0 , 1 ) ; ; fgets ( var187 , 5 , var198 ) ; ; var187 [ 0 ] 4 ) = '\0' ; int var199 = atoi ( var187 ) ; ;  var1500 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1500 = 1 ; } else { } int var619 = var1500 ; ; if ( var619 ) { var186 = 1 ; } else { int var620 = var199 == 0 ; if ( var620 ) { var194 [ 0 ] 0 ) = 0 ; var194 [ 0 ] 1 ) = 1 ; } else { int var621 = var199 == 1 ; if ( var621 ) { var194 [ 0 ] 0 ) = 1 ; var194 [ 0 ] 1 ) = 0 ; var196 = 1 ; } else { printf ( "Invalid Response. Please try again...\n" ) ; ; var186 = 1 ; } } } goto label_113 ; } else { } label_114:
      |                                                                                                                                                                                                                                                                                                                                                                                                                            ^
output.c:120:430: error: expected ‘;’ before numeric constant
  120 |  if ( var186 ) { var186 = 0 ; printf ( "What color would you like to play as? (%d = BLACK, %d = WHITE)?: " , 0 , 1 ) ; ; fgets ( var187 , 5 , var198 ) ; ; var187 [ 0 ] 4 ) = '\0' ; int var199 = atoi ( var187 ) ; ;  var1500 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1500 = 1 ; } else { } int var619 = var1500 ; ; if ( var619 ) { var186 = 1 ; } else { int var620 = var199 == 0 ; if ( var620 ) { var194 [ 0 ] 0 ) = 0 ; var194 [ 0 ] 1 ) = 1 ; } else { int var621 = var199 == 1 ; if ( var621 ) { var194 [ 0 ] 0 ) = 1 ; var194 [ 0 ] 1 ) = 0 ; var196 = 1 ; } else { printf ( "Invalid Response. Please try again...\n" ) ; ; var186 = 1 ; } } } goto label_113 ; } else { } label_114:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                              ^~
      |                                                                                                                                                                                                                                                                                                                                                                                                                                              ;
output.c:120:433: error: expected statement before ‘)’ token
  120 |  if ( var186 ) { var186 = 0 ; printf ( "What color would you like to play as? (%d = BLACK, %d = WHITE)?: " , 0 , 1 ) ; ; fgets ( var187 , 5 , var198 ) ; ; var187 [ 0 ] 4 ) = '\0' ; int var199 = atoi ( var187 ) ; ;  var1500 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1500 = 1 ; } else { } int var619 = var1500 ; ; if ( var619 ) { var186 = 1 ; } else { int var620 = var199 == 0 ; if ( var620 ) { var194 [ 0 ] 0 ) = 0 ; var194 [ 0 ] 1 ) = 1 ; } else { int var621 = var199 == 1 ; if ( var621 ) { var194 [ 0 ] 0 ) = 1 ; var194 [ 0 ] 1 ) = 0 ; var196 = 1 ; } else { printf ( "Invalid Response. Please try again...\n" ) ; ; var186 = 1 ; } } } goto label_113 ; } else { } label_114:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^
output.c:120:435: error: expected expression before ‘=’ token
  120 |  if ( var186 ) { var186 = 0 ; printf ( "What color would you like to play as? (%d = BLACK, %d = WHITE)?: " , 0 , 1 ) ; ; fgets ( var187 , 5 , var198 ) ; ; var187 [ 0 ] 4 ) = '\0' ; int var199 = atoi ( var187 ) ; ;  var1500 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1500 = 1 ; } else { } int var619 = var1500 ; ; if ( var619 ) { var186 = 1 ; } else { int var620 = var199 == 0 ; if ( var620 ) { var194 [ 0 ] 0 ) = 0 ; var194 [ 0 ] 1 ) = 1 ; } else { int var621 = var199 == 1 ; if ( var621 ) { var194 [ 0 ] 0 ) = 1 ; var194 [ 0 ] 1 ) = 0 ; var196 = 1 ; } else { printf ( "Invalid Response. Please try again...\n" ) ; ; var186 = 1 ; } } } goto label_113 ; } else { } label_114:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                   ^
output.c:120:505: error: expected ‘;’ before numeric constant
  120 |  if ( var186 ) { var186 = 0 ; printf ( "What color would you like to play as? (%d = BLACK, %d = WHITE)?: " , 0 , 1 ) ; ; fgets ( var187 , 5 , var198 ) ; ; var187 [ 0 ] 4 ) = '\0' ; int var199 = atoi ( var187 ) ; ;  var1500 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1500 = 1 ; } else { } int var619 = var1500 ; ; if ( var619 ) { var186 = 1 ; } else { int var620 = var199 == 0 ; if ( var620 ) { var194 [ 0 ] 0 ) = 0 ; var194 [ 0 ] 1 ) = 1 ; } else { int var621 = var199 == 1 ; if ( var621 ) { var194 [ 0 ] 0 ) = 1 ; var194 [ 0 ] 1 ) = 0 ; var196 = 1 ; } else { printf ( "Invalid Response. Please try again...\n" ) ; ; var186 = 1 ; } } } goto label_113 ; } else { } label_114:
      |~
      |
output.c:120:508: error: expected statement before ‘)’ token
  120 |  if ( var186 ) { var186 = 0 ; printf ( "What color would you like to play as? (%d = BLACK, %d = WHITE)?: " , 0 , 1 ) ; ; fgets ( var187 , 5 , var198 ) ; ; var187 [ 0 ] 4 ) = '\0' ; int var199 = atoi ( var187 ) ; ;  var1500 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1500 = 1 ; } else { } int var619 = var1500 ; ; if ( var619 ) { var186 = 1 ; } else { int var620 = var199 == 0 ; if ( var620 ) { var194 [ 0 ] 0 ) = 0 ; var194 [ 0 ] 1 ) = 1 ; } else { int var621 = var199 == 1 ; if ( var621 ) { var194 [ 0 ] 0 ) = 1 ; var194 [ 0 ] 1 ) = 0 ; var196 = 1 ; } else { printf ( "Invalid Response. Please try again...\n" ) ; ; var186 = 1 ; } } } goto label_113 ; } else { } label_114:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ^
output.c:120:510: error: expected expression before ‘=’ token
  120 |  if ( var186 ) { var186 = 0 ; printf ( "What color would you like to play as? (%d = BLACK, %d = WHITE)?: " , 0 , 1 ) ; ; fgets ( var187 , 5 , var198 ) ; ; var187 [ 0 ] 4 ) = '\0' ; int var199 = atoi ( var187 ) ; ;  var1500 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1500 = 1 ; } else { } int var619 = var1500 ; ; if ( var619 ) { var186 = 1 ; } else { int var620 = var199 == 0 ; if ( var620 ) { var194 [ 0 ] 0 ) = 0 ; var194 [ 0 ] 1 ) = 1 ; } else { int var621 = var199 == 1 ; if ( var621 ) { var194 [ 0 ] 0 ) = 1 ; var194 [ 0 ] 1 ) = 0 ; var196 = 1 ; } else { printf ( "Invalid Response. Please try again...\n" ) ; ; var186 = 1 ; } } } goto label_113 ; } else { } label_114:
      |
output.c:120:528: error: expected ‘;’ before numeric constant
  120 |  if ( var186 ) { var186 = 0 ; printf ( "What color would you like to play as? (%d = BLACK, %d = WHITE)?: " , 0 , 1 ) ; ; fgets ( var187 , 5 , var198 ) ; ; var187 [ 0 ] 4 ) = '\0' ; int var199 = atoi ( var187 ) ; ;  var1500 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1500 = 1 ; } else { } int var619 = var1500 ; ; if ( var619 ) { var186 = 1 ; } else { int var620 = var199 == 0 ; if ( var620 ) { var194 [ 0 ] 0 ) = 0 ; var194 [ 0 ] 1 ) = 1 ; } else { int var621 = var199 == 1 ; if ( var621 ) { var194 [ 0 ] 0 ) = 1 ; var194 [ 0 ] 1 ) = 0 ; var196 = 1 ; } else { printf ( "Invalid Response. Please try again...\n" ) ; ; var186 = 1 ; } } } goto label_113 ; } else { } label_114:
      |~
      |
output.c:120:531: error: expected statement before ‘)’ token
  120 |  if ( var186 ) { var186 = 0 ; printf ( "What color would you like to play as? (%d = BLACK, %d = WHITE)?: " , 0 , 1 ) ; ; fgets ( var187 , 5 , var198 ) ; ; var187 [ 0 ] 4 ) = '\0' ; int var199 = atoi ( var187 ) ; ;  var1500 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1500 = 1 ; } else { } int var619 = var1500 ; ; if ( var619 ) { var186 = 1 ; } else { int var620 = var199 == 0 ; if ( var620 ) { var194 [ 0 ] 0 ) = 0 ; var194 [ 0 ] 1 ) = 1 ; } else { int var621 = var199 == 1 ; if ( var621 ) { var194 [ 0 ] 0 ) = 1 ; var194 [ 0 ] 1 ) = 0 ; var196 = 1 ; } else { printf ( "Invalid Response. Please try again...\n" ) ; ; var186 = 1 ; } } } goto label_113 ; } else { } label_114:
      |
output.c:120:533: error: expected expression before ‘=’ token
  120 |  if ( var186 ) { var186 = 0 ; printf ( "What color would you like to play as? (%d = BLACK, %d = WHITE)?: " , 0 , 1 ) ; ; fgets ( var187 , 5 , var198 ) ; ; var187 [ 0 ] 4 ) = '\0' ; int var199 = atoi ( var187 ) ; ;  var1500 = 0 ; if ( strcmp ( "\n" , var187 ) ) { var1500 = 1 ; } else { } int var619 = var1500 ; ; if ( var619 ) { var186 = 1 ; } else { int var620 = var199 == 0 ; if ( var620 ) { var194 [ 0 ] 0 ) = 0 ; var194 [ 0 ] 1 ) = 1 ; } else { int var621 = var199 == 1 ; if ( var621 ) { var194 [ 0 ] 0 ) = 1 ; var194 [ 0 ] 1 ) = 0 ; var196 = 1 ; } else { printf ( "Invalid Response. Please try again...\n" ) ; ; var186 = 1 ; } } } goto label_113 ; } else { } label_114:
      |
output.c:121:23: error: expected ‘;’ before numeric constant
  121 |  } else { var194 [ 0 ] 0 ) = 0 ; var194 [ 0 ] 1 ) = 1 ; } char var202 [ 0 ] 64 ) ; var186 = 1 ; label_115:
      |                       ^~
      |                       ;
output.c:121:26: error: expected statement before ‘)’ token
  121 |  } else { var194 [ 0 ] 0 ) = 0 ; var194 [ 0 ] 1 ) = 1 ; } char var202 [ 0 ] 64 ) ; var186 = 1 ; label_115:
      |                          ^
output.c:121:28: error: expected expression before ‘=’ token
  121 |  } else { var194 [ 0 ] 0 ) = 0 ; var194 [ 0 ] 1 ) = 1 ; } char var202 [ 0 ] 64 ) ; var186 = 1 ; label_115:
      |                            ^
output.c:121:46: error: expected ‘;’ before numeric constant
  121 |  } else { var194 [ 0 ] 0 ) = 0 ; var194 [ 0 ] 1 ) = 1 ; } char var202 [ 0 ] 64 ) ; var186 = 1 ; label_115:
      |                                              ^~
      |                                              ;
output.c:121:49: error: expected statement before ‘)’ token
  121 |  } else { var194 [ 0 ] 0 ) = 0 ; var194 [ 0 ] 1 ) = 1 ; } char var202 [ 0 ] 64 ) ; var186 = 1 ; label_115:
      |                                                 ^
output.c:121:51: error: expected expression before ‘=’ token
  121 |  } else { var194 [ 0 ] 0 ) = 0 ; var194 [ 0 ] 1 ) = 1 ; } char var202 [ 0 ] 64 ) ; var186 = 1 ; label_115:
      |                                                   ^
output.c:121:77: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before numeric constant
  121 |  } else { var194 [ 0 ] 0 ) = 0 ; var194 [ 0 ] 1 ) = 1 ; } char var202 [ 0 ] 64 ) ; var186 = 1 ; label_115:
      |                                                                             ^~
output.c:121:79: error: expected ‘;’ before ‘)’ token
  121 |  } else { var194 [ 0 ] 0 ) = 0 ; var194 [ 0 ] 1 ) = 1 ; } char var202 [ 0 ] 64 ) ; var186 = 1 ; label_115:
      |                                                                               ^~
      |                                                                               ;
output.c:121:80: error: expected statement before ‘)’ token
  121 |  } else { var194 [ 0 ] 0 ) = 0 ; var194 [ 0 ] 1 ) = 1 ; } char var202 [ 0 ] 64 ) ; var186 = 1 ; label_115:
      |                                                                                ^
output.c:122:116: error: ‘var202’ undeclared (first use in this function); did you mean ‘var802’?
  122 |  if ( var186 ) { printf ( "Would you like to change any settings before the game? [n to continue]: " ) ; ; fgets ( var202 , 64 , var204 ) ; ; var202 [ 0 ] 63 ) = '\0' ; int var205 = atoi ( var202 ) ; ;  var1501 = 0 ; if ( strcmp ( var202 , "n\n" ) ) { var1501 = 1 ; } else { } int var622 = var1501 ; ; if ( var622 ) { var186 = 0 ; } else { runCommand ( var202 ) ; ; } goto label_115 ; } else { } label_116:
      |                                                                                                                    ^~~~~~
      |                                                                                                                    var802
output.c:122:130: error: ‘var204’ undeclared (first use in this function); did you mean ‘var244’?
  122 |  if ( var186 ) { printf ( "Would you like to change any settings before the game? [n to continue]: " ) ; ; fgets ( var202 , 64 , var204 ) ; ; var202 [ 0 ] 63 ) = '\0' ; int var205 = atoi ( var202 ) ; ;  var1501 = 0 ; if ( strcmp ( var202 , "n\n" ) ) { var1501 = 1 ; } else { } int var622 = var1501 ; ; if ( var622 ) { var186 = 0 ; } else { runCommand ( var202 ) ; ; } goto label_115 ; } else { } label_116:
      |                                                                                                                                  ^~~~~~
      |                                                                                                                                  var244
output.c:122:155: error: expected ‘;’ before numeric constant
  122 |  if ( var186 ) { printf ( "Would you like to change any settings before the game? [n to continue]: " ) ; ; fgets ( var202 , 64 , var204 ) ; ; var202 [ 0 ] 63 ) = '\0' ; int var205 = atoi ( var202 ) ; ;  var1501 = 0 ; if ( strcmp ( var202 , "n\n" ) ) { var1501 = 1 ; } else { } int var622 = var1501 ; ; if ( var622 ) { var186 = 0 ; } else { runCommand ( var202 ) ; ; } goto label_115 ; } else { } label_116:
      |                                                                                                                                                           ^~~
      |                                                                                                                                                           ;
output.c:122:159: error: expected statement before ‘)’ token
  122 |  if ( var186 ) { printf ( "Would you like to change any settings before the game? [n to continue]: " ) ; ; fgets ( var202 , 64 , var204 ) ; ; var202 [ 0 ] 63 ) = '\0' ; int var205 = atoi ( var202 ) ; ;  var1501 = 0 ; if ( strcmp ( var202 , "n\n" ) ) { var1501 = 1 ; } else { } int var622 = var1501 ; ; if ( var622 ) { var186 = 0 ; } else { runCommand ( var202 ) ; ; } goto label_115 ; } else { } label_116:
      |                                                                                                                                                               ^
output.c:122:161: error: expected expression before ‘=’ token
  122 |  if ( var186 ) { printf ( "Would you like to change any settings before the game? [n to continue]: " ) ; ; fgets ( var202 , 64 , var204 ) ; ; var202 [ 0 ] 63 ) = '\0' ; int var205 = atoi ( var202 ) ; ;  var1501 = 0 ; if ( strcmp ( var202 , "n\n" ) ) { var1501 = 1 ; } else { } int var622 = var1501 ; ; if ( var622 ) { var186 = 0 ; } else { runCommand ( var202 ) ; ; } goto label_115 ; } else { } label_116:
      |                                                                                                                                                                 ^
output.c:122:204: error: ‘var1501’ undeclared (first use in this function); did you mean ‘var1001’?
  122 |  if ( var186 ) { printf ( "Would you like to change any settings before the game? [n to continue]: " ) ; ; fgets ( var202 , 64 , var204 ) ; ; var202 [ 0 ] 63 ) = '\0' ; int var205 = atoi ( var202 ) ; ;  var1501 = 0 ; if ( strcmp ( var202 , "n\n" ) ) { var1501 = 1 ; } else { } int var622 = var1501 ; ; if ( var622 ) { var186 = 0 ; } else { runCommand ( var202 ) ; ; } goto label_115 ; } else { } label_116:
      |                                                                                                                                                                                                            ^~~~~~~
      |                                                                                                                                                                                                            var1001
output.c:124:113: error: ‘var211’ undeclared (first use in this function); did you mean ‘var209’?
  124 |  if ( var186 ) { printf ( "What would you like the BLACK computer's depth to be?: " ) ; ; fgets ( var202 , 64 , var211 ) ; ; var202 [ 0 ] 63 ) = '\0' ; int var212 = atoi ( var202 ) ; ;  var1426 = var212 > 0 ;  var1502 = 0 ; if ( var1426 ) { var1502 = 1 ; } else { }  var1427 = var1502 ;  var1428 = int var624 = var1427 ; if ( var624 ) { printf ( "Invalid depth. Please try again...\n" ) ; ; } else { var208 = var212 ; printf ( "BLACK computer's depth set to %d\n" , var208 ) ; ; var186 = 0 ; var2 = var208 ; } goto label_117 ; } else { } label_118:
      |                                                                                                                 ^~~~~~
      |                                                                                                                 var209
output.c:124:138: error: expected ‘;’ before numeric constant
  124 |  if ( var186 ) { printf ( "What would you like the BLACK computer's depth to be?: " ) ; ; fgets ( var202 , 64 , var211 ) ; ; var202 [ 0 ] 63 ) = '\0' ; int var212 = atoi ( var202 ) ; ;  var1426 = var212 > 0 ;  var1502 = 0 ; if ( var1426 ) { var1502 = 1 ; } else { }  var1427 = var1502 ;  var1428 = int var624 = var1427 ; if ( var624 ) { printf ( "Invalid depth. Please try again...\n" ) ; ; } else { var208 = var212 ; printf ( "BLACK computer's depth set to %d\n" , var208 ) ; ; var186 = 0 ; var2 = var208 ; } goto label_117 ; } else { } label_118:
      |                                                                                                                                          ^~~
      |                                                                                                                                          ;
output.c:124:142: error: expected statement before ‘)’ token
  124 |  if ( var186 ) { printf ( "What would you like the BLACK computer's depth to be?: " ) ; ; fgets ( var202 , 64 , var211 ) ; ; var202 [ 0 ] 63 ) = '\0' ; int var212 = atoi ( var202 ) ; ;  var1426 = var212 > 0 ;  var1502 = 0 ; if ( var1426 ) { var1502 = 1 ; } else { }  var1427 = var1502 ;  var1428 = int var624 = var1427 ; if ( var624 ) { printf ( "Invalid depth. Please try again...\n" ) ; ; } else { var208 = var212 ; printf ( "BLACK computer's depth set to %d\n" , var208 ) ; ; var186 = 0 ; var2 = var208 ; } goto label_117 ; } else { } label_118:
      |                                                                                                                                              ^
output.c:124:144: error: expected expression before ‘=’ token
  124 |  if ( var186 ) { printf ( "What would you like the BLACK computer's depth to be?: " ) ; ; fgets ( var202 , 64 , var211 ) ; ; var202 [ 0 ] 63 ) = '\0' ; int var212 = atoi ( var202 ) ; ;  var1426 = var212 > 0 ;  var1502 = 0 ; if ( var1426 ) { var1502 = 1 ; } else { }  var1427 = var1502 ;  var1428 = int var624 = var1427 ; if ( var624 ) { printf ( "Invalid depth. Please try again...\n" ) ; ; } else { var208 = var212 ; printf ( "BLACK computer's depth set to %d\n" , var208 ) ; ; var186 = 0 ; var2 = var208 ; } goto label_117 ; } else { } label_118:
      |                                                                                                                                                ^
output.c:124:187: error: ‘var1426’ undeclared (first use in this function); did you mean ‘var142’?
  124 |  if ( var186 ) { printf ( "What would you like the BLACK computer's depth to be?: " ) ; ; fgets ( var202 , 64 , var211 ) ; ; var202 [ 0 ] 63 ) = '\0' ; int var212 = atoi ( var202 ) ; ;  var1426 = var212 > 0 ;  var1502 = 0 ; if ( var1426 ) { var1502 = 1 ; } else { }  var1427 = var1502 ;  var1428 = int var624 = var1427 ; if ( var624 ) { printf ( "Invalid depth. Please try again...\n" ) ; ; } else { var208 = var212 ; printf ( "BLACK computer's depth set to %d\n" , var208 ) ; ; var186 = 0 ; var2 = var208 ; } goto label_117 ; } else { } label_118:
      |                                                                                                                                                                                           ^~~~~~~
      |                                                                                                                                                                                           var142
output.c:124:211: error: ‘var1502’ undeclared (first use in this function); did you mean ‘var1002’?
  124 |  if ( var186 ) { printf ( "What would you like the BLACK computer's depth to be?: " ) ; ; fgets ( var202 , 64 , var211 ) ; ; var202 [ 0 ] 63 ) = '\0' ; int var212 = atoi ( var202 ) ; ;  var1426 = var212 > 0 ;  var1502 = 0 ; if ( var1426 ) { var1502 = 1 ; } else { }  var1427 = var1502 ;  var1428 = int var624 = var1427 ; if ( var624 ) { printf ( "Invalid depth. Please try again...\n" ) ; ; } else { var208 = var212 ; printf ( "BLACK computer's depth set to %d\n" , var208 ) ; ; var186 = 0 ; var2 = var208 ; } goto label_117 ; } else { } label_118:
      |                                                                                                                                                                                                                   ^~~~~~~
      |                                                                                                                                                                                                                   var1002
output.c:124:268: error: ‘var1427’ undeclared (first use in this function); did you mean ‘var142’?
  124 |  if ( var186 ) { printf ( "What would you like the BLACK computer's depth to be?: " ) ; ; fgets ( var202 , 64 , var211 ) ; ; var202 [ 0 ] 63 ) = '\0' ; int var212 = atoi ( var202 ) ; ;  var1426 = var212 > 0 ;  var1502 = 0 ; if ( var1426 ) { var1502 = 1 ; } else { }  var1427 = var1502 ;  var1428 = int var624 = var1427 ; if ( var624 ) { printf ( "Invalid depth. Please try again...\n" ) ; ; } else { var208 = var212 ; printf ( "BLACK computer's depth set to %d\n" , var208 ) ; ; var186 = 0 ; var2 = var208 ; } goto label_117 ; } else { } label_118:
      |                                                                                                                                                                                                                                                                            ^~~~~~~
      |                                                                                                                                                                                                                                                                            var142
output.c:124:289: error: ‘var1428’ undeclared (first use in this function); did you mean ‘var142’?
  124 |  if ( var186 ) { printf ( "What would you like the BLACK computer's depth to be?: " ) ; ; fgets ( var202 , 64 , var211 ) ; ; var202 [ 0 ] 63 ) = '\0' ; int var212 = atoi ( var202 ) ; ;  var1426 = var212 > 0 ;  var1502 = 0 ; if ( var1426 ) { var1502 = 1 ; } else { }  var1427 = var1502 ;  var1428 = int var624 = var1427 ; if ( var624 ) { printf ( "Invalid depth. Please try again...\n" ) ; ; } else { var208 = var212 ; printf ( "BLACK computer's depth set to %d\n" , var208 ) ; ; var186 = 0 ; var2 = var208 ; } goto label_117 ; } else { } label_118:
      |                                                                                                                                                                                                                                                                                                 ^~~~~~~
      |                                                                                                                                                                                                                                                                                                 var142
output.c:124:299: error: expected expression before ‘int’
  124 |  if ( var186 ) { printf ( "What would you like the BLACK computer's depth to be?: " ) ; ; fgets ( var202 , 64 , var211 ) ; ; var202 [ 0 ] 63 ) = '\0' ; int var212 = atoi ( var202 ) ; ;  var1426 = var212 > 0 ;  var1502 = 0 ; if ( var1426 ) { var1502 = 1 ; } else { }  var1427 = var1502 ;  var1428 = int var624 = var1427 ; if ( var624 ) { printf ( "Invalid depth. Please try again...\n" ) ; ; } else { var208 = var212 ; printf ( "BLACK computer's depth set to %d\n" , var208 ) ; ; var186 = 0 ; var2 = var208 ; } goto label_117 ; } else { } label_118:
      |                                                                                                                                                                                                                                                                                                           ^~~
output.c:124:327: error: ‘var624’ undeclared (first use in this function); did you mean ‘var623’?
  124 |  if ( var186 ) { printf ( "What would you like the BLACK computer's depth to be?: " ) ; ; fgets ( var202 , 64 , var211 ) ; ; var202 [ 0 ] 63 ) = '\0' ; int var212 = atoi ( var202 ) ; ;  var1426 = var212 > 0 ;  var1502 = 0 ; if ( var1426 ) { var1502 = 1 ; } else { }  var1427 = var1502 ;  var1428 = int var624 = var1427 ; if ( var624 ) { printf ( "Invalid depth. Please try again...\n" ) ; ; } else { var208 = var212 ; printf ( "BLACK computer's depth set to %d\n" , var208 ) ; ; var186 = 0 ; var2 = var208 ; } goto label_117 ; } else { } label_118:
      |                                                                                                                                                                                                                                                                                                                                       ^~~~~~
      |                                                                                                                                                                                                                                                                                                                                       var623
output.c:124:493: error: ‘var2’ undeclared (first use in this function); did you mean ‘var92’?
  124 |  if ( var186 ) { printf ( "What would you like the BLACK computer's depth to be?: " ) ; ; fgets ( var202 , 64 , var211 ) ; ; var202 [ 0 ] 63 ) = '\0' ; int var212 = atoi ( var202 ) ; ;  var1426 = var212 > 0 ;  var1502 = 0 ; if ( var1426 ) { var1502 = 1 ; } else { }  var1427 = var1502 ;  var1428 = int var624 = var1427 ; if ( var624 ) { printf ( "Invalid depth. Please try again...\n" ) ; ; } else { var208 = var212 ; printf ( "BLACK computer's depth set to %d\n" , var208 ) ; ; var186 = 0 ; var2 = var208 ; } goto label_117 ; } else { } label_118:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ^~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             var92
output.c:126:113: error: ‘var215’ undeclared (first use in this function); did you mean ‘var1215’?
  126 |  if ( var186 ) { printf ( "What would you like the WHITE computer's depth to be?: " ) ; ; fgets ( var202 , 64 , var215 ) ; ; var202 [ 0 ] 63 ) = '\0' ; int var216 = atoi ( var202 ) ; ;  var1429 = var216 > 0 ;  var1503 = 0 ; if ( var1429 ) { var1503 = 1 ; } else { }  var1430 = var1503 ;  var1431 = int var625 = var1430 ; if ( var625 ) { printf ( "Invalid depth. Please try again...\n" ) ; ; } else { var209 = var216 ; printf ( "WHITE computer's depth set to %d\n" , var209 ) ; ; var186 = 0 ; } goto label_119 ; } else { } label_120:
      |                                                                                                                 ^~~~~~
      |                                                                                                                 var1215
output.c:126:138: error: expected ‘;’ before numeric constant
  126 |  if ( var186 ) { printf ( "What would you like the WHITE computer's depth to be?: " ) ; ; fgets ( var202 , 64 , var215 ) ; ; var202 [ 0 ] 63 ) = '\0' ; int var216 = atoi ( var202 ) ; ;  var1429 = var216 > 0 ;  var1503 = 0 ; if ( var1429 ) { var1503 = 1 ; } else { }  var1430 = var1503 ;  var1431 = int var625 = var1430 ; if ( var625 ) { printf ( "Invalid depth. Please try again...\n" ) ; ; } else { var209 = var216 ; printf ( "WHITE computer's depth set to %d\n" , var209 ) ; ; var186 = 0 ; } goto label_119 ; } else { } label_120:
      |                                                                                                                                          ^~~
      |                                                                                                                                          ;
output.c:126:142: error: expected statement before ‘)’ token
  126 |  if ( var186 ) { printf ( "What would you like the WHITE computer's depth to be?: " ) ; ; fgets ( var202 , 64 , var215 ) ; ; var202 [ 0 ] 63 ) = '\0' ; int var216 = atoi ( var202 ) ; ;  var1429 = var216 > 0 ;  var1503 = 0 ; if ( var1429 ) { var1503 = 1 ; } else { }  var1430 = var1503 ;  var1431 = int var625 = var1430 ; if ( var625 ) { printf ( "Invalid depth. Please try again...\n" ) ; ; } else { var209 = var216 ; printf ( "WHITE computer's depth set to %d\n" , var209 ) ; ; var186 = 0 ; } goto label_119 ; } else { } label_120:
      |                                                                                                                                              ^
output.c:126:144: error: expected expression before ‘=’ token
  126 |  if ( var186 ) { printf ( "What would you like the WHITE computer's depth to be?: " ) ; ; fgets ( var202 , 64 , var215 ) ; ; var202 [ 0 ] 63 ) = '\0' ; int var216 = atoi ( var202 ) ; ;  var1429 = var216 > 0 ;  var1503 = 0 ; if ( var1429 ) { var1503 = 1 ; } else { }  var1430 = var1503 ;  var1431 = int var625 = var1430 ; if ( var625 ) { printf ( "Invalid depth. Please try again...\n" ) ; ; } else { var209 = var216 ; printf ( "WHITE computer's depth set to %d\n" , var209 ) ; ; var186 = 0 ; } goto label_119 ; } else { } label_120:
      |                                                                                                                                                ^
output.c:126:187: error: ‘var1429’ undeclared (first use in this function); did you mean ‘var142’?
  126 |  if ( var186 ) { printf ( "What would you like the WHITE computer's depth to be?: " ) ; ; fgets ( var202 , 64 , var215 ) ; ; var202 [ 0 ] 63 ) = '\0' ; int var216 = atoi ( var202 ) ; ;  var1429 = var216 > 0 ;  var1503 = 0 ; if ( var1429 ) { var1503 = 1 ; } else { }  var1430 = var1503 ;  var1431 = int var625 = var1430 ; if ( var625 ) { printf ( "Invalid depth. Please try again...\n" ) ; ; } else { var209 = var216 ; printf ( "WHITE computer's depth set to %d\n" , var209 ) ; ; var186 = 0 ; } goto label_119 ; } else { } label_120:
      |                                                                                                                                                                                           ^~~~~~~
      |                                                                                                                                                                                           var142
output.c:126:211: error: ‘var1503’ undeclared (first use in this function); did you mean ‘var183’?
  126 |  if ( var186 ) { printf ( "What would you like the WHITE computer's depth to be?: " ) ; ; fgets ( var202 , 64 , var215 ) ; ; var202 [ 0 ] 63 ) = '\0' ; int var216 = atoi ( var202 ) ; ;  var1429 = var216 > 0 ;  var1503 = 0 ; if ( var1429 ) { var1503 = 1 ; } else { }  var1430 = var1503 ;  var1431 = int var625 = var1430 ; if ( var625 ) { printf ( "Invalid depth. Please try again...\n" ) ; ; } else { var209 = var216 ; printf ( "WHITE computer's depth set to %d\n" , var209 ) ; ; var186 = 0 ; } goto label_119 ; } else { } label_120:
      |                                                                                                                                                                                                                   ^~~~~~~
      |                                                                                                                                                                                                                   var183
output.c:126:268: error: ‘var1430’ undeclared (first use in this function); did you mean ‘var1330’?
  126 |  if ( var186 ) { printf ( "What would you like the WHITE computer's depth to be?: " ) ; ; fgets ( var202 , 64 , var215 ) ; ; var202 [ 0 ] 63 ) = '\0' ; int var216 = atoi ( var202 ) ; ;  var1429 = var216 > 0 ;  var1503 = 0 ; if ( var1429 ) { var1503 = 1 ; } else { }  var1430 = var1503 ;  var1431 = int var625 = var1430 ; if ( var625 ) { printf ( "Invalid depth. Please try again...\n" ) ; ; } else { var209 = var216 ; printf ( "WHITE computer's depth set to %d\n" , var209 ) ; ; var186 = 0 ; } goto label_119 ; } else { } label_120:
      |                                                                                                                                                                                                                                                                            ^~~~~~~
      |                                                                                                                                                                                                                                                                            var1330
output.c:126:289: error: ‘var1431’ undeclared (first use in this function); did you mean ‘var1031’?
  126 |  if ( var186 ) { printf ( "What would you like the WHITE computer's depth to be?: " ) ; ; fgets ( var202 , 64 , var215 ) ; ; var202 [ 0 ] 63 ) = '\0' ; int var216 = atoi ( var202 ) ; ;  var1429 = var216 > 0 ;  var1503 = 0 ; if ( var1429 ) { var1503 = 1 ; } else { }  var1430 = var1503 ;  var1431 = int var625 = var1430 ; if ( var625 ) { printf ( "Invalid depth. Please try again...\n" ) ; ; } else { var209 = var216 ; printf ( "WHITE computer's depth set to %d\n" , var209 ) ; ; var186 = 0 ; } goto label_119 ; } else { } label_120:
      |                                                                                                                                                                                                                                                                                                 ^~~~~~~
      |                                                                                                                                                                                                                                                                                                 var1031
output.c:126:299: error: expected expression before ‘int’
  126 |  if ( var186 ) { printf ( "What would you like the WHITE computer's depth to be?: " ) ; ; fgets ( var202 , 64 , var215 ) ; ; var202 [ 0 ] 63 ) = '\0' ; int var216 = atoi ( var202 ) ; ;  var1429 = var216 > 0 ;  var1503 = 0 ; if ( var1429 ) { var1503 = 1 ; } else { }  var1430 = var1503 ;  var1431 = int var625 = var1430 ; if ( var625 ) { printf ( "Invalid depth. Please try again...\n" ) ; ; } else { var209 = var216 ; printf ( "WHITE computer's depth set to %d\n" , var209 ) ; ; var186 = 0 ; } goto label_119 ; } else { } label_120:
      |                                                                                                                                                                                                                                                                                                           ^~~
output.c:126:327: error: ‘var625’ undeclared (first use in this function); did you mean ‘var623’?
  126 |  if ( var186 ) { printf ( "What would you like the WHITE computer's depth to be?: " ) ; ; fgets ( var202 , 64 , var215 ) ; ; var202 [ 0 ] 63 ) = '\0' ; int var216 = atoi ( var202 ) ; ;  var1429 = var216 > 0 ;  var1503 = 0 ; if ( var1429 ) { var1503 = 1 ; } else { }  var1430 = var1503 ;  var1431 = int var625 = var1430 ; if ( var625 ) { printf ( "Invalid depth. Please try again...\n" ) ; ; } else { var209 = var216 ; printf ( "WHITE computer's depth set to %d\n" , var209 ) ; ; var186 = 0 ; } goto label_119 ; } else { } label_120:
      |                                                                                                                                                                                                                                                                                                                                       ^~~~~~
      |                                                                                                                                                                                                                                                                                                                                       var623
output.c:128:19: error: ‘var1233’ undeclared (first use in this function); did you mean ‘var1033’?
  128 |  if ( var218 ) {  var1233 = var194 [ 0 ] ;  var1234 = var1233 == 0 ;  var1235 = int var626 = var1234 ; if ( var626 ) { printf ( "\nIt is BLACK's turn to go...\n" ) ; ; } else { printf ( "\nIt is WHITE's turn to go...\n" ) ; ; } printScore ( var183 ) ; ; int var221 ; var186 = 1 ; label_123:
      |                   ^~~~~~~
      |                   var1033
output.c:128:45: error: ‘var1234’ undeclared (first use in this function); did you mean ‘var1214’?
  128 |  if ( var218 ) {  var1233 = var194 [ 0 ] ;  var1234 = var1233 == 0 ;  var1235 = int var626 = var1234 ; if ( var626 ) { printf ( "\nIt is BLACK's turn to go...\n" ) ; ; } else { printf ( "\nIt is WHITE's turn to go...\n" ) ; ; } printScore ( var183 ) ; ; int var221 ; var186 = 1 ; label_123:
      |                                             ^~~~~~~
      |                                             var1214
output.c:128:71: error: ‘var1235’ undeclared (first use in this function); did you mean ‘var1215’?
  128 |  if ( var218 ) {  var1233 = var194 [ 0 ] ;  var1234 = var1233 == 0 ;  var1235 = int var626 = var1234 ; if ( var626 ) { printf ( "\nIt is BLACK's turn to go...\n" ) ; ; } else { printf ( "\nIt is WHITE's turn to go...\n" ) ; ; } printScore ( var183 ) ; ; int var221 ; var186 = 1 ; label_123:
      |                                                                       ^~~~~~~
      |                                                                       var1215
output.c:128:81: error: expected expression before ‘int’
  128 |  if ( var218 ) {  var1233 = var194 [ 0 ] ;  var1234 = var1233 == 0 ;  var1235 = int var626 = var1234 ; if ( var626 ) { printf ( "\nIt is BLACK's turn to go...\n" ) ; ; } else { printf ( "\nIt is WHITE's turn to go...\n" ) ; ; } printScore ( var183 ) ; ; int var221 ; var186 = 1 ; label_123:
      |                                                                                 ^~~
output.c:128:109: error: ‘var626’ undeclared (first use in this function); did you mean ‘var623’?
  128 |  if ( var218 ) {  var1233 = var194 [ 0 ] ;  var1234 = var1233 == 0 ;  var1235 = int var626 = var1234 ; if ( var626 ) { printf ( "\nIt is BLACK's turn to go...\n" ) ; ; } else { printf ( "\nIt is WHITE's turn to go...\n" ) ; ; } printScore ( var183 ) ; ; int var221 ; var186 = 1 ; label_123:
      |                                                                                                             ^~~~~~
      |                                                                                                             var623
output.c:129:71: error: expected ‘)’ before ‘access’
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |                                             ~                         ^~~~~~~
      |                                                                       )
output.c:129:463: error: ‘var1236’ undeclared (first use in this function); did you mean ‘var1216’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ^~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                               var1216
output.c:129:490: error: ‘var1238’ undeclared (first use in this function); did you mean ‘var1208’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ^~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          var1208
output.c:129:507: error: subscripted value is neither array nor pointer nor vector
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |
output.c:129:516: error: ‘var1239’ undeclared (first use in this function); did you mean ‘var239’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |~~~~~~
      |var239
output.c:129:527: error: ‘var1240’ undeclared (first use in this function); did you mean ‘var1140’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |~~~~~~
      |var1140
output.c:129:551: error: ‘var1241’ undeclared (first use in this function); did you mean ‘var1214’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |~~~~~~
      |var1214
output.c:129:570: error: ‘var1432’ undeclared (first use in this function); did you mean ‘var142’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |~~~~~~
      |var142
output.c:129:600: error: ‘var1504’ undeclared (first use in this function); did you mean ‘var1404’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |~~~~~~
      |var1404
output.c:129:657: error: ‘var1433’ undeclared (first use in this function); did you mean ‘var1033’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |~~~~~~
      |var1033
output.c:129:678: error: ‘var1434’ undeclared (first use in this function); did you mean ‘var1334’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ^~~~~~~
      |var1334
output.c:129:689: error: ‘var1242’ undeclared (first use in this function); did you mean ‘var142’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |~~~~~~
      |var142
output.c:129:710: error: ‘var1505’ undeclared (first use in this function); did you mean ‘var1405’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |~~~~~~
      |var1405
output.c:129:767: error: ‘var1291’ undeclared (first use in this function); did you mean ‘var221’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               var221
output.c:129:788: error: ‘var1506’ undeclared (first use in this function); did you mean ‘var1206’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |~~~~~~
      |var1206
output.c:129:845: error: ‘var1292’ undeclared (first use in this function); did you mean ‘var222’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |~~~~~~
      |var222
output.c:129:866: error: ‘var1340’ undeclared (first use in this function); did you mean ‘var1140’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |~~~~~~
      |var1140
output.c:129:951: error: ‘var1293’ undeclared (first use in this function); did you mean ‘var219’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ^~~~~~~
      |var219
output.c:129:972: error: ‘var1507’ undeclared (first use in this function); did you mean ‘var1207’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |~~~~~~
      |var1207
output.c:129:1029: error: ‘var1294’ undeclared (first use in this function); did you mean ‘var1214’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |~~~~~~
      |var1214
output.c:129:1050: error: ‘var1295’ undeclared (first use in this function); did you mean ‘var1215’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |~~~~~~
      |var1215
output.c:129:1061: error: ‘var1243’ undeclared (first use in this function); did you mean ‘var623’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |~~~~~~
      |var623
output.c:129:1082: error: ‘var1244’ undeclared (first use in this function); did you mean ‘var1214’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |~~~~~~
      |var1214
output.c:129:1108: error: ‘var1245’ undeclared (first use in this function); did you mean ‘var1215’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ^~~~~~~
      |var1215
output.c:129:1129: error: ‘var223’ undeclared (first use in this function); did you mean ‘var222’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |~~~~~
      |var222
output.c:129:1139: error: ‘var1508’ undeclared (first use in this function); did you mean ‘var1208’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |~~~~~~
      |var1208
output.c:129:1196: error: ‘var1296’ undeclared (first use in this function); did you mean ‘var196’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ^~~~~~~
      |var196
output.c:129:1217: error: ‘var1509’ undeclared (first use in this function); did you mean ‘var1009’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |~~~~~~
      |var1009
output.c:129:1274: error: ‘var1297’ undeclared (first use in this function); did you mean ‘var1217’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |~~~~~~
      |var1217
output.c:129:1295: error: ‘var1341’ undeclared (first use in this function); did you mean ‘var1141’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               var1141
output.c:129:1380: error: ‘var1298’ undeclared (first use in this function); did you mean ‘var1208’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |~~~~~~
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    var1208
output.c:129:1401: error: ‘var1510’ undeclared (first use in this function); did you mean ‘var1010’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |~~~~~~
      |var1010
output.c:129:1458: error: ‘var1299’ undeclared (first use in this function); did you mean ‘var219’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |~~~~~~
      |var219
output.c:129:1479: error: ‘var1300’ undeclared (first use in this function); did you mean ‘var1330’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |~~~~~~
      |var1330
output.c:129:1490: error: ‘var1246’ undeclared (first use in this function); did you mean ‘var246’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |~~~~~~
      |var246
output.c:129:1511: error: ‘var1247’ undeclared (first use in this function); did you mean ‘var1217’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |~~~~~~
      |var1217
output.c:129:1521: error: expected expression before ‘int’
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |~~
output.c:129:1549: error: ‘var629’ undeclared (first use in this function); did you mean ‘var627’?
  129 |  if ( var186 ) { int var222 = getValidMoves ( var183 , var184 , var194 access ( var196 ) ) ; ; printAsciiBoard ( var183 , var184 ) ; ; int var627 = var222 == 0 ; if ( var627 ) { int var628 = var219 == 0 ; if ( var628 ) { printf ( "Neither player has any valid moves left.\n" ) ; ; var218 = 0 ; goto label_124 ; } else { } printf ( "You do not have any valid moves. Skipping your turn!\n" ) ; ; var220 = 1 ; var219 = 0 ; goto label_124 ; } else { } var220 = 0 ;  var1236 = var194 [ 0 ] ;   var1238 = var196 [ 0 ] ;  var1239 =  var1240 = var221 < 0 ;  var1241 = 8 * 8 ;  var1432 = var221 < var1241 ;  var1504 = 0 ; if ( var1432 ) { var1504 = 1 ; } else { }  var1433 = var1504 ;  var1434 =  var1242 = var1433 ;  var1505 = 0 ; if ( var1240 ) { var1505 = 1 ; } else { }  var1291 = var1505 ;  var1506 = 0 ; if ( var1242 ) { var1506 = 1 ; } else { }  var1292 = var1506 ;  var1340 = 0 ; if ( var1291 ) { if ( var1292 ) { var1340 = 1 ; } else { } } else { }  var1293 = var1340 ;  var1507 = 0 ; if ( var1293 ) { var1507 = 1 ; } else { }  var1294 = var1507 ;  var1295 =  var1243 = var1294 ;  var1244 = var184 [ 0 ] ;  var1245 = var1244 == var223 ;  var1508 = 0 ; if ( var1243 ) { var1508 = 1 ; } else { }  var1296 = var1508 ;  var1509 = 0 ; if ( var1245 ) { var1509 = 1 ; } else { }  var1297 = var1509 ;  var1341 = 0 ; if ( var1296 ) { if ( var1297 ) { var1341 = 1 ; } else { } } else { }  var1298 = var1341 ;  var1510 = 0 ; if ( var1298 ) { var1510 = 1 ; } else { }  var1299 = var1510 ;  var1300 =  var1246 = var1299 ;  var1247 = int var629 = var1246 ; if ( var629 ) { printf ( "Invalid Move! Please try again...\n" ) ; ; } else { var186 = 0 ; } var219 = var222 ; goto label_123 ; } else { } label_124:
      |~~~~~
      |var627
output.c:130:3: error: ‘var1511’ undeclared (first use in this function); did you mean ‘var1011’?
  130 |   var1511 = 0 ; if ( var218 ) { var1511 = 1 ; } else { } int var630 = var1511 ; if ( var630 ) { goto label_122 ; } else { }  var1512 = 0 ; if ( var220 ) { var1512 = 1 ; } else { } int var631 = var1512 ; if ( var631 ) { placePiece ( var183 , var221 , var194 access ( var196 ) ) ; ; } else { } var196 = var196 ^ ( 1 ) ; int var632 = var188 == 0 ; if ( var632 ) { int var633 = var196 == 0 ; if ( var633 ) { var2 = var208 ; } else { var2 = var209 ; } } else { } goto label_121 ; } else { } label_122:
      |   ^~~~~~~
      |   var1011
output.c:130:126: error: ‘var1512’ undeclared (first use in this function); did you mean ‘var1012’?
  130 |   var1511 = 0 ; if ( var218 ) { var1511 = 1 ; } else { } int var630 = var1511 ; if ( var630 ) { goto label_122 ; } else { }  var1512 = 0 ; if ( var220 ) { var1512 = 1 ; } else { } int var631 = var1512 ; if ( var631 ) { placePiece ( var183 , var221 , var194 access ( var196 ) ) ; ; } else { } var196 = var196 ^ ( 1 ) ; int var632 = var188 == 0 ; if ( var632 ) { int var633 = var196 == 0 ; if ( var633 ) { var2 = var208 ; } else { var2 = var209 ; } } else { } goto label_121 ; } else { } label_122:
      |                                                                                                                              ^~~~~~~
      |                                                                                                                              var1012
output.c:130:257: error: expected ‘)’ before ‘access’
  130 |   var1511 = 0 ; if ( var218 ) { var1511 = 1 ; } else { } int var630 = var1511 ; if ( var630 ) { goto label_122 ; } else { }  var1512 = 0 ; if ( var220 ) { var1512 = 1 ; } else { } int var631 = var1512 ; if ( var631 ) { placePiece ( var183 , var221 , var194 access ( var196 ) ) ; ; } else { } var196 = var196 ^ ( 1 ) ; int var632 = var188 == 0 ; if ( var632 ) { int var633 = var196 == 0 ; if ( var633 ) { var2 = var208 ; } else { var2 = var209 ; } } else { } goto label_121 ; } else { } label_122:
      |                                                                                                                                                                                                                                       ~                         ^~~~~~~
      |                                                                                                                                                                                                                                                                 )
output.c:132:3: error: ‘var1248’ undeclared (first use in this function); did you mean ‘var248’?
  132 |   var1248 = 8 * 8 ;  var1249 = var226 < var1248 ;  var1250 = var183 [ 0 ] ;  var1251 = var1250 == 0 ;  var1252 = int var634 = var1251 ; if ( var634 ) { var224 ; var224 = var224 + 1 ; } else {  var1253 = var183 [ 0 ] ;  var1254 = var1253 == 1 ;  var1255 = int var635 = var1254 ; if ( var635 ) { var225 ; var225 = var225 + 1 ; } else { } } var226 ; var226 = var226 + 1 ; goto label_125 ; } label_126:
      |   ^~~~~~~
      |   var248
output.c:132:22: error: ‘var1249’ undeclared (first use in this function); did you mean ‘var224’?
  132 |   var1248 = 8 * 8 ;  var1249 = var226 < var1248 ;  var1250 = var183 [ 0 ] ;  var1251 = var1250 == 0 ;  var1252 = int var634 = var1251 ; if ( var634 ) { var224 ; var224 = var224 + 1 ; } else {  var1253 = var183 [ 0 ] ;  var1254 = var1253 == 1 ;  var1255 = int var635 = var1254 ; if ( var635 ) { var225 ; var225 = var225 + 1 ; } else { } } var226 ; var226 = var226 + 1 ; goto label_125 ; } label_126:
      |                      ^~~~~~~
      |                      var224
output.c:132:52: error: ‘var1250’ undeclared (first use in this function); did you mean ‘var225’?
  132 |   var1248 = 8 * 8 ;  var1249 = var226 < var1248 ;  var1250 = var183 [ 0 ] ;  var1251 = var1250 == 0 ;  var1252 = int var634 = var1251 ; if ( var634 ) { var224 ; var224 = var224 + 1 ; } else {  var1253 = var183 [ 0 ] ;  var1254 = var1253 == 1 ;  var1255 = int var635 = var1254 ; if ( var635 ) { var225 ; var225 = var225 + 1 ; } else { } } var226 ; var226 = var226 + 1 ; goto label_125 ; } label_126:
      |                                                    ^~~~~~~
      |                                                    var225
output.c:132:78: error: ‘var1251’ undeclared (first use in this function); did you mean ‘var1215’?
  132 |   var1248 = 8 * 8 ;  var1249 = var226 < var1248 ;  var1250 = var183 [ 0 ] ;  var1251 = var1250 == 0 ;  var1252 = int var634 = var1251 ; if ( var634 ) { var224 ; var224 = var224 + 1 ; } else {  var1253 = var183 [ 0 ] ;  var1254 = var1253 == 1 ;  var1255 = int var635 = var1254 ; if ( var635 ) { var225 ; var225 = var225 + 1 ; } else { } } var226 ; var226 = var226 + 1 ; goto label_125 ; } label_126:
      |                                                                              ^~~~~~~
      |                                                                              var1215
output.c:132:104: error: ‘var1252’ undeclared (first use in this function); did you mean ‘var1352’?
  132 |   var1248 = 8 * 8 ;  var1249 = var226 < var1248 ;  var1250 = var183 [ 0 ] ;  var1251 = var1250 == 0 ;  var1252 = int var634 = var1251 ; if ( var634 ) { var224 ; var224 = var224 + 1 ; } else {  var1253 = var183 [ 0 ] ;  var1254 = var1253 == 1 ;  var1255 = int var635 = var1254 ; if ( var635 ) { var225 ; var225 = var225 + 1 ; } else { } } var226 ; var226 = var226 + 1 ; goto label_125 ; } label_126:
      |                                                                                                        ^~~~~~~
      |                                                                                                        var1352
output.c:132:114: error: expected expression before ‘int’
  132 |   var1248 = 8 * 8 ;  var1249 = var226 < var1248 ;  var1250 = var183 [ 0 ] ;  var1251 = var1250 == 0 ;  var1252 = int var634 = var1251 ; if ( var634 ) { var224 ; var224 = var224 + 1 ; } else {  var1253 = var183 [ 0 ] ;  var1254 = var1253 == 1 ;  var1255 = int var635 = var1254 ; if ( var635 ) { var225 ; var225 = var225 + 1 ; } else { } } var226 ; var226 = var226 + 1 ; goto label_125 ; } label_126:
      |                                                                                                                  ^~~
output.c:132:142: error: ‘var634’ undeclared (first use in this function); did you mean ‘var934’?
  132 |   var1248 = 8 * 8 ;  var1249 = var226 < var1248 ;  var1250 = var183 [ 0 ] ;  var1251 = var1250 == 0 ;  var1252 = int var634 = var1251 ; if ( var634 ) { var224 ; var224 = var224 + 1 ; } else {  var1253 = var183 [ 0 ] ;  var1254 = var1253 == 1 ;  var1255 = int var635 = var1254 ; if ( var635 ) { var225 ; var225 = var225 + 1 ; } else { } } var226 ; var226 = var226 + 1 ; goto label_125 ; } label_126:
      |                                                                                                                                              ^~~~~~
      |                                                                                                                                              var934
output.c:132:194: error: ‘var1253’ undeclared (first use in this function); did you mean ‘var225’?
  132 |   var1248 = 8 * 8 ;  var1249 = var226 < var1248 ;  var1250 = var183 [ 0 ] ;  var1251 = var1250 == 0 ;  var1252 = int var634 = var1251 ; if ( var634 ) { var224 ; var224 = var224 + 1 ; } else {  var1253 = var183 [ 0 ] ;  var1254 = var1253 == 1 ;  var1255 = int var635 = var1254 ; if ( var635 ) { var225 ; var225 = var225 + 1 ; } else { } } var226 ; var226 = var226 + 1 ; goto label_125 ; } label_126:
      |                                                                                                                                                                                                  ^~~~~~~
      |                                                                                                                                                                                                  var225
output.c:132:220: error: ‘var1254’ undeclared (first use in this function); did you mean ‘var1214’?
  132 |   var1248 = 8 * 8 ;  var1249 = var226 < var1248 ;  var1250 = var183 [ 0 ] ;  var1251 = var1250 == 0 ;  var1252 = int var634 = var1251 ; if ( var634 ) { var224 ; var224 = var224 + 1 ; } else {  var1253 = var183 [ 0 ] ;  var1254 = var1253 == 1 ;  var1255 = int var635 = var1254 ; if ( var635 ) { var225 ; var225 = var225 + 1 ; } else { } } var226 ; var226 = var226 + 1 ; goto label_125 ; } label_126:
      |                                                                                                                                                                                                                            ^~~~~~~
      |                                                                                                                                                                                                                            var1214
output.c:132:246: error: ‘var1255’ undeclared (first use in this function); did you mean ‘var1215’?
  132 |   var1248 = 8 * 8 ;  var1249 = var226 < var1248 ;  var1250 = var183 [ 0 ] ;  var1251 = var1250 == 0 ;  var1252 = int var634 = var1251 ; if ( var634 ) { var224 ; var224 = var224 + 1 ; } else {  var1253 = var183 [ 0 ] ;  var1254 = var1253 == 1 ;  var1255 = int var635 = var1254 ; if ( var635 ) { var225 ; var225 = var225 + 1 ; } else { } } var226 ; var226 = var226 + 1 ; goto label_125 ; } label_126:
      |                                                                                                                                                                                                                                                      ^~~~~~~
      |                                                                                                                                                                                                                                                      var1215
output.c:132:256: error: expected expression before ‘int’
  132 |   var1248 = 8 * 8 ;  var1249 = var226 < var1248 ;  var1250 = var183 [ 0 ] ;  var1251 = var1250 == 0 ;  var1252 = int var634 = var1251 ; if ( var634 ) { var224 ; var224 = var224 + 1 ; } else {  var1253 = var183 [ 0 ] ;  var1254 = var1253 == 1 ;  var1255 = int var635 = var1254 ; if ( var635 ) { var225 ; var225 = var225 + 1 ; } else { } } var226 ; var226 = var226 + 1 ; goto label_125 ; } label_126:
      |                                                                                                                                                                                                                                                                ^~~
output.c:132:284: error: ‘var635’ undeclared (first use in this function); did you mean ‘var935’?
  132 |   var1248 = 8 * 8 ;  var1249 = var226 < var1248 ;  var1250 = var183 [ 0 ] ;  var1251 = var1250 == 0 ;  var1252 = int var634 = var1251 ; if ( var634 ) { var224 ; var224 = var224 + 1 ; } else {  var1253 = var183 [ 0 ] ;  var1254 = var1253 == 1 ;  var1255 = int var635 = var1254 ; if ( var635 ) { var225 ; var225 = var225 + 1 ; } else { } } var226 ; var226 = var226 + 1 ; goto label_125 ; } label_126:
      |                                                                                                                                                                                                                                                                                            ^~~~~~
      |                                                                                                                                                                                                                                                                                            var935
output.c: At top level:
output.c:133:13: error: expected declaration specifiers or ‘...’ before string constant
  133 |  } printf ( "Black's Score: %d\n" , var224 ) ; ; printf ( "White's Score: %d\n" , var225 ) ; ; int var636 = var224 > var225 ; if ( var636 ) { printf ( "Black Wins!\n" ) ; ; } else { int var637 = var225 > var224 ; if ( var637 ) { printf ( "White Wins!\n" ) ; ; } else { printf ( "It is a Tie!\n" ) ; ; } } int var638 = var188 == 0 ; if ( var638 ) { printf ( "\n" ) ; ; printf ( "BLACK depth: %d\n" , var208 ) ; ; printf ( "WHITE depth: %d\n" , var209 ) ; ; } else { } int var249 = 0 ; return var249 ; }
      |             ^~~~~~~~~~~~~~~~~~~~~
output.c:133:37: error: unknown type name ‘var224’
  133 |  } printf ( "Black's Score: %d\n" , var224 ) ; ; printf ( "White's Score: %d\n" , var225 ) ; ; int var636 = var224 > var225 ; if ( var636 ) { printf ( "Black Wins!\n" ) ; ; } else { int var637 = var225 > var224 ; if ( var637 ) { printf ( "White Wins!\n" ) ; ; } else { printf ( "It is a Tie!\n" ) ; ; } } int var638 = var188 == 0 ; if ( var638 ) { printf ( "\n" ) ; ; printf ( "BLACK depth: %d\n" , var208 ) ; ; printf ( "WHITE depth: %d\n" , var209 ) ; ; } else { } int var249 = 0 ; return var249 ; }
      |                                     ^~~~~~
output.c:133:59: error: expected declaration specifiers or ‘...’ before string constant
  133 |  } printf ( "Black's Score: %d\n" , var224 ) ; ; printf ( "White's Score: %d\n" , var225 ) ; ; int var636 = var224 > var225 ; if ( var636 ) { printf ( "Black Wins!\n" ) ; ; } else { int var637 = var225 > var224 ; if ( var637 ) { printf ( "White Wins!\n" ) ; ; } else { printf ( "It is a Tie!\n" ) ; ; } } int var638 = var188 == 0 ; if ( var638 ) { printf ( "\n" ) ; ; printf ( "BLACK depth: %d\n" , var208 ) ; ; printf ( "WHITE depth: %d\n" , var209 ) ; ; } else { } int var249 = 0 ; return var249 ; }
      |                                                           ^~~~~~~~~~~~~~~~~~~~~
output.c:133:83: error: unknown type name ‘var225’
  133 |  } printf ( "Black's Score: %d\n" , var224 ) ; ; printf ( "White's Score: %d\n" , var225 ) ; ; int var636 = var224 > var225 ; if ( var636 ) { printf ( "Black Wins!\n" ) ; ; } else { int var637 = var225 > var224 ; if ( var637 ) { printf ( "White Wins!\n" ) ; ; } else { printf ( "It is a Tie!\n" ) ; ; } } int var638 = var188 == 0 ; if ( var638 ) { printf ( "\n" ) ; ; printf ( "BLACK depth: %d\n" , var208 ) ; ; printf ( "WHITE depth: %d\n" , var209 ) ; ; } else { } int var249 = 0 ; return var249 ; }
      |                                                                                   ^~~~~~
output.c:133:109: error: ‘var224’ undeclared here (not in a function); did you mean ‘var244’?
  133 |  } printf ( "Black's Score: %d\n" , var224 ) ; ; printf ( "White's Score: %d\n" , var225 ) ; ; int var636 = var224 > var225 ; if ( var636 ) { printf ( "Black Wins!\n" ) ; ; } else { int var637 = var225 > var224 ; if ( var637 ) { printf ( "White Wins!\n" ) ; ; } else { printf ( "It is a Tie!\n" ) ; ; } } int var638 = var188 == 0 ; if ( var638 ) { printf ( "\n" ) ; ; printf ( "BLACK depth: %d\n" , var208 ) ; ; printf ( "WHITE depth: %d\n" , var209 ) ; ; } else { } int var249 = 0 ; return var249 ; }
      |                                                                                                             ^~~~~~
      |                                                                                                             var244
output.c:133:118: error: ‘var225’ undeclared here (not in a function); did you mean ‘var245’?
  133 |  } printf ( "Black's Score: %d\n" , var224 ) ; ; printf ( "White's Score: %d\n" , var225 ) ; ; int var636 = var224 > var225 ; if ( var636 ) { printf ( "Black Wins!\n" ) ; ; } else { int var637 = var225 > var224 ; if ( var637 ) { printf ( "White Wins!\n" ) ; ; } else { printf ( "It is a Tie!\n" ) ; ; } } int var638 = var188 == 0 ; if ( var638 ) { printf ( "\n" ) ; ; printf ( "BLACK depth: %d\n" , var208 ) ; ; printf ( "WHITE depth: %d\n" , var209 ) ; ; } else { } int var249 = 0 ; return var249 ; }
      |                                                                                                                      ^~~~~~
      |                                                                                                                      var245
output.c:133:127: error: expected identifier or ‘(’ before ‘if’
  133 |  } printf ( "Black's Score: %d\n" , var224 ) ; ; printf ( "White's Score: %d\n" , var225 ) ; ; int var636 = var224 > var225 ; if ( var636 ) { printf ( "Black Wins!\n" ) ; ; } else { int var637 = var225 > var224 ; if ( var637 ) { printf ( "White Wins!\n" ) ; ; } else { printf ( "It is a Tie!\n" ) ; ; } } int var638 = var188 == 0 ; if ( var638 ) { printf ( "\n" ) ; ; printf ( "BLACK depth: %d\n" , var208 ) ; ; printf ( "WHITE depth: %d\n" , var209 ) ; ; } else { } int var249 = 0 ; return var249 ; }
      |                                                                                                                               ^~
output.c:133:176: error: expected identifier or ‘(’ before ‘else’
  133 |  } printf ( "Black's Score: %d\n" , var224 ) ; ; printf ( "White's Score: %d\n" , var225 ) ; ; int var636 = var224 > var225 ; if ( var636 ) { printf ( "Black Wins!\n" ) ; ; } else { int var637 = var225 > var224 ; if ( var637 ) { printf ( "White Wins!\n" ) ; ; } else { printf ( "It is a Tie!\n" ) ; ; } } int var638 = var188 == 0 ; if ( var638 ) { printf ( "\n" ) ; ; printf ( "BLACK depth: %d\n" , var208 ) ; ; printf ( "WHITE depth: %d\n" , var209 ) ; ; } else { } int var249 = 0 ; return var249 ; }
      |                                                                                                                                                                                ^~~~
output.c:133:319: error: ‘var188’ undeclared here (not in a function); did you mean ‘var988’?
  133 |  } printf ( "Black's Score: %d\n" , var224 ) ; ; printf ( "White's Score: %d\n" , var225 ) ; ; int var636 = var224 > var225 ; if ( var636 ) { printf ( "Black Wins!\n" ) ; ; } else { int var637 = var225 > var224 ; if ( var637 ) { printf ( "White Wins!\n" ) ; ; } else { printf ( "It is a Tie!\n" ) ; ; } } int var638 = var188 == 0 ; if ( var638 ) { printf ( "\n" ) ; ; printf ( "BLACK depth: %d\n" , var208 ) ; ; printf ( "WHITE depth: %d\n" , var209 ) ; ; } else { } int var249 = 0 ; return var249 ; }
      |                                                                                                                                                                                                                                                                                                                               ^~~~~~
      |                                                                                                                                                                                                                                                                                                                               var988
output.c:133:333: error: expected identifier or ‘(’ before ‘if’
  133 |  } printf ( "Black's Score: %d\n" , var224 ) ; ; printf ( "White's Score: %d\n" , var225 ) ; ; int var636 = var224 > var225 ; if ( var636 ) { printf ( "Black Wins!\n" ) ; ; } else { int var637 = var225 > var224 ; if ( var637 ) { printf ( "White Wins!\n" ) ; ; } else { printf ( "It is a Tie!\n" ) ; ; } } int var638 = var188 == 0 ; if ( var638 ) { printf ( "\n" ) ; ; printf ( "BLACK depth: %d\n" , var208 ) ; ; printf ( "WHITE depth: %d\n" , var209 ) ; ; } else { } int var249 = 0 ; return var249 ; }
      |                                                                                                                                                                                                                                                                                                                                             ^~
output.c:133:459: error: expected identifier or ‘(’ before ‘else’
  133 |  } printf ( "Black's Score: %d\n" , var224 ) ; ; printf ( "White's Score: %d\n" , var225 ) ; ; int var636 = var224 > var225 ; if ( var636 ) { printf ( "Black Wins!\n" ) ; ; } else { int var637 = var225 > var224 ; if ( var637 ) { printf ( "White Wins!\n" ) ; ; } else { printf ( "It is a Tie!\n" ) ; ; } } int var638 = var188 == 0 ; if ( var638 ) { printf ( "\n" ) ; ; printf ( "BLACK depth: %d\n" , var208 ) ; ; printf ( "WHITE depth: %d\n" , var209 ) ; ; } else { } int var249 = 0 ; return var249 ; }
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ^~~~
output.c:133:485: error: expected identifier or ‘(’ before ‘return’
  133 |  } printf ( "Black's Score: %d\n" , var224 ) ; ; printf ( "White's Score: %d\n" , var225 ) ; ; int var636 = var224 > var225 ; if ( var636 ) { printf ( "Black Wins!\n" ) ; ; } else { int var637 = var225 > var224 ; if ( var637 ) { printf ( "White Wins!\n" ) ; ; } else { printf ( "It is a Tie!\n" ) ; ; } } int var638 = var188 == 0 ; if ( var638 ) { printf ( "\n" ) ; ; printf ( "BLACK depth: %d\n" , var208 ) ; ; printf ( "WHITE depth: %d\n" , var209 ) ; ; } else { } int var249 = 0 ; return var249 ; }
      |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     ^~~~~~
output.c:133:501: error: expected identifier or ‘(’ before ‘}’ token
  133 |  } printf ( "Black's Score: %d\n" , var224 ) ; ; printf ( "White's Score: %d\n" , var225 ) ; ; int var636 = var224 > var225 ; if ( var636 ) { printf ( "Black Wins!\n" ) ; ; } else { int var637 = var225 > var224 ; if ( var637 ) { printf ( "White Wins!\n" ) ; ; } else { printf ( "It is a Tie!\n" ) ; ; } } int var638 = var188 == 0 ; if ( var638 ) { printf ( "\n" ) ; ; printf ( "BLACK depth: %d\n" , var208 ) ; ; printf ( "WHITE depth: %d\n" , var209 ) ; ; } else { } int var249 = 0 ; return var249 ; }
      |
